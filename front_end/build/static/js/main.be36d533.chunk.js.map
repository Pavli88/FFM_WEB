{"version":3,"sources":["context/env-context.js","components/SliderWidget.js","Pages/RiskPage/RiskTableRow.js","Pages/RiskPage/RiskTableData.js","context/server-context.js","Pages/RiskPage.js","Pages/HomePage/PerfDashBoard.js","components/Charts.js","Pages/HomePage/RobotStatCards.js","Pages/HomePage.js","context/portfolio-context.js","Pages/PortfolioPage/NewPortfolioForm.js","components/Tables/PortfolioTable.js","components/Options.js","Pages/PortfolioPage/PortfolioBuy.js","Pages/PortfolioPage/NewPortCashFlow.js","Pages/PortfolioPage/PortfolioSettings.js","Pages/PortfolioPage/Holdings.js","Pages/PortfolioPage.js","Pages/TradePage/TradeTableRow.js","Pages/TradePage/TradeTableData.js","Pages/TradePage.js","Pages/Robot/BalanceCalculation.js","components/NewBrokerAccount.js","components/NavBar.js","Pages/Robot/NewRobotForm.js","Pages/Robot/RobotTable.js","Pages/RobotPage.js","Pages/InstrumentPage.js","App.js","reportWebVitals.js","index.js"],"names":["EnvContext","React","createContext","environment","SliderWidget","props","useState","defaultValue","value","setValue","Form","Group","style","margin","Row","Col","Label","verticalAlign","Control","onChange","event","target","type","min","max","step","RiskTableRow","robot","dailyRisk","setDailyRisk","tradeLimit","setTradeLimit","riskOnTrade","setRiskOnTrade","pLevel","qType","quantity","fontSize","Button","onClick","axios","post","server","daily_risk","nbm_trades","risk_per_trade","pyramiding_level","quantity_type","then","response","console","log","catch","error","RiskTableData","env","useContext","riskData","setRiskData","useEffect","fetch","json","data","riskDataRow","map","Table","ServerContext","RiskPage","Container","className","PerformanceDashboard","perfData","setPerfData","get","perfRespData","record","Card","borderRadius","Body","padding","size","ApexChart","state","options","chart","toolbar","id","xaxis","categories","xdata","labels","show","yaxis","formatter","val","toFixed","dataLabels","enabled","series","name","ydata","chartType","width","height","RobotStatCards","balanceRequestData","robotBalanceData","setRobotBalanceData","params","robotRiskData","setRobotRiskData","widgetData","balance","risk","chartData","index","marginTop","marginBottom","marginRight","Header","as","overflow","HomePage","background","window","innerHeight","fluid","textAlign","paddingTop","paddingBottom","paddingLeft","paddingRight","PortfolioContext","NewPortfolioForm","portfolioName","setPortfolioName","portfolioCode","setPortfolioCode","portType","setPortType","currency","setCurrency","setShow","handleClose","submitHandler","preventDefault","port_name","port_type","port_currency","port_code","location","reload","alert","variant","Modal","onHide","closeButton","Title","onSubmit","placeholder","required","Footer","PortfolioTable","portfolioData","setPortfolioData","OptionLoader","rawData","setRawData","url","code","PortfolioBuy","securityId","setSecurity","securityName","setSecurityName","unit","setUnit","portfolio","sec","sec_type","sec_id","readOnly","selectIndex","nativeEvent","selectedIndex","text","NewPortCashFlow","setType","amount","PortfolioSettings","display","Holdings","PortfolioPage","portfolios","setPortfolio","portfolioOptions","TradeTableRow","broker_id","security","trd_id","TradeTableData","tradeData","setTradeData","tradeDataRow","TradePage","BalanceCalculation","Date","dateBegin","setDateBegin","dateEnd","setDateEnd","setRobot","loadState","setLoadState","process","start_date","end_date","NewBrokerAccount","broker","setBroker","accountNumber","setAccountNumber","token","setToken","setEnv","hide","animation","broker_name","account_number","Navigation","showNewAccount","setShowNewAccount","Navbar","bg","Brand","href","Nav","Link","to","NavDropdown","title","Item","Divider","onSelect","inline","FormControl","Dropdown","envValue","onEnvChange","marginLeft","Toggle","Menu","eventKey","NewRobotForm","setRobotName","setStrategy","account","setAccount","instrument","setInstrument","accountParams","instrumentParams","RobotTable","robotData","setRobotData","OpenUpdateRiskModal","RobotPage","InstrumentPage","App","robotEnvData","setRobotEnvData","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be36d533.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EnvContext = React.createContext({\n    environment: 'live'\n});\n\nexport default EnvContext;","import {useState} from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst SliderWidget = (props) => {\n\n    const [value, setValue] = useState(props.defaultValue);\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    return (\n\n        <Form>\n            <Form.Group style={{margin: '0px'}}>\n                <Row>\n                    <Col>\n                        <Form.Label style={{verticalAlign:\"middle\"}}>{value}</Form.Label>\n                    </Col>\n                    <Col>\n                        <Form.Control onChange={handleChange} type=\"range\" min={props.min} max={props.max} step={props.step}\n                              value={value}/>\n                    </Col>\n                </Row>\n            </Form.Group>\n        </Form>\n\n    );\n};\n\nexport default SliderWidget;","import {useState} from \"react\";\nimport SliderWidget from \"../../components/SliderWidget\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\nconst RiskTableRow = (props) => {\n\n    const [robot, setRobot] = useState(props.robot);\n    const [dailyRisk, setDailyRisk] = useState(props.dailyRisk);\n    const [tradeLimit, setTradeLimit] = useState(props.tradeLimit);\n    const [riskOnTrade, setRiskOnTrade] = useState(props.riskOnTrade);\n    const [pLevel, setPLevel] = useState(props.pLevel);\n    const [qType, setQType] = useState(props.qType);\n    const [quantity, setQuantity] = useState(props.quantity);\n\n    const UpdateRisk = () => {\n        axios.post(props.server + 'risk/update_robot_risk/', {\n            robot: robot,\n            daily_risk: dailyRisk,\n            nbm_trades: tradeLimit,\n            risk_per_trade: riskOnTrade,\n            pyramiding_level: pLevel,\n            quantity_type: qType,\n            quantity: quantity\n        })\n            .then(response => console.log(response))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n        console.log(robot)\n        console.log(tradeLimit)\n        console.log(riskOnTrade)\n    };\n\n    const tradeLimitHandler = (event) => {\n        setTradeLimit(event.target.value)\n    };\n\n    const tradeRiskHandler = (event) => {\n        setRiskOnTrade(event.target.value)\n    };\n\n    const dailyRiskHandler = (event) => {\n        setDailyRisk(event.target.value)\n    };\n\n    return (\n        <tr>\n            <td style={{fontSize: 12, verticalAlign:\"middle\" }}>{robot}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}} onChange={dailyRiskHandler}><SliderWidget defaultValue={dailyRisk}\n                              min={0.00}\n                              max={0.20}\n                              step={0.005}/></td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}} onChange={tradeLimitHandler}><SliderWidget defaultValue={tradeLimit}\n                              min={0}\n                              max={20}\n                              step={1}/></td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}} onChange={tradeRiskHandler}><SliderWidget defaultValue={riskOnTrade}\n                              min={0.00}\n                              max={0.1}\n                              step={0.0025}/></td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{pLevel}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{qType}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{quantity}</td>\n            <td><Button onClick={UpdateRisk}>Update</Button></td>\n        </tr>\n    );\n};\n\nexport default RiskTableRow;","import {useContext, useEffect, useState} from \"react\";\nimport EnvContext from \"../../context/env-context\";\nimport RiskTableRow from \"./RiskTableRow\";\n\n// Bootstrap\nimport Table from \"react-bootstrap/Table\";\n\nconst RiskTableData = (props) => {\n\n    const env = useContext(EnvContext)['environment'];\n\n    const [riskData, setRiskData] = useState([])\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            fetch(props.server + 'risk/get_robot_risk/' + env)\n                .then(response => response.json())\n                .then(data => setRiskData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const riskDataRow = riskData.map((data) =>\n        <RiskTableRow key={data['id']}\n                      robot={data['robot']}\n                      dailyRisk={data['daily_risk']}\n                      tradeLimit={data['daily_trade_limit']}\n                      riskOnTrade={data['risk_per_trade']}\n                      pLevel={data['pyramiding_level']}\n                      qType={data['quantity_type']}\n                      quantity={data['quantity']}\n                      server={props.server}/>\n    );\n\n    return (\n        <Table>\n            <thead style={{fontSize: 12}}>\n            <tr>\n                <th style={{ verticalAlign: \"middle\"}}>Robot</th>\n                <th style={{ verticalAlign: \"middle\"}}>Daily Loss Limit %</th>\n                <th style={{ verticalAlign: \"middle\"}}>Max Number of Trades (Daily)</th>\n                <th style={{ verticalAlign: \"middle\"}}>Risk per Trade %</th>\n                <th style={{ verticalAlign: \"middle\"}}>Pyramiding Level</th>\n                <th style={{ verticalAlign: \"middle\"}}>Quantity Type</th>\n                <th style={{ verticalAlign: \"middle\"}}>Quantity</th>\n                <th style={{ verticalAlign: \"middle\"}}></th>\n            </tr>\n            </thead>\n            <tbody>\n            {riskDataRow}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default RiskTableData;","import React from \"react\";\n\nconst ServerContext = React.createContext();\n\nexport default ServerContext;","import {useState, useEffect, useContext} from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Container from 'react-bootstrap/Container'\nimport Form from \"react-bootstrap/Form\";\nimport Table from 'react-bootstrap/Table'\n\nimport RiskTableData from \"./RiskPage/RiskTableData\";\nimport ServerContext from \"../context/server-context\";\n\nconst RiskPage = () => {\n\n    const server = useContext(ServerContext)['server'];\n\n    return (\n        <Container className={\"border\"}>\n            <RiskTableData server={server}/>\n        </Container>\n    );\n};\n\nexport default RiskPage;","import Card from 'react-bootstrap/Card';\nimport Table from \"react-bootstrap/Table\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport './PerfDashBoard.css'\n\nconst PerformanceDashboard = (props) => {\n\n    // Fetching Robot balance data\n    const [perfData, setPerfData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'home/load_robot_stats/' + props.env)\n                .then(response => response['data'])\n                .then(data => setPerfData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const perfRespData = perfData.map((record) =>\n    <tr key={record['robot']['id']}>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-robot-name\">{record['robot']['name']}</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['balance']}</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['dtd_ret']} %</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['mtd_ret']} %</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['ytd_ret']} %</td>\n    </tr>);\n\n    return (\n        <Card className={'shadow-sm'} style={{borderRadius:'0px'}}>\n            <Card.Body style={{padding: '0px'}}>\n                <Table size=\"sm\">\n                    <thead>\n                    <tr>\n                        <th className=\"table-row-robot-name\">Robot</th>\n                        <th>Balance</th>\n                        <th>DTD</th>\n                        <th>MTD</th>\n                        <th>YTD</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {perfRespData}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n\n};\n\nexport default PerformanceDashboard;","import Chart from \"react-apexcharts\";\n\n\nconst ApexChart = (props) => {\n    const state = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: props.xdata,\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.ydata\n            }\n        ]\n    };\n\n    return (\n            <Chart\n                options={state.options}\n                series={state.series}\n                type={props.chartType}\n                width=\"100%\"\n                height=\"100%\"\n            />\n        );\n}\n\nexport default ApexChart;\n","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport ApexChart from \"../../components/Charts\";\n\n\nconst RobotStatCards = (props) => {\n\n    const balanceRequestData = {\n        'env': props.env,\n        'start_date': 21,\n        'end_date': 34,\n    };\n\n    // Fetching Robot balance data\n    const [robotBalanceData, setRobotBalanceData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robot_balance/' + props.env, {params:balanceRequestData})\n                .then(response => response['data'])\n                .then(data => setRobotBalanceData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    // Fetching robot risk data\n    const [robotRiskData, setRobotRiskData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'risk/get_robot_risk/' + props.env)\n                .then(response => response['data'])\n                .then(data => setRobotRiskData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const widgetData = {\n        balance: robotBalanceData,\n        risk: robotRiskData,\n    };\n    console.log(widgetData)\n\n    const chartData = robotBalanceData.map((record, index) =>\n\n        <Card className={'shadow-sm'} key={record['robot']} style={{marginTop: '5px', marginBottom: '5px', marginRight: '5px', height: '300px'}}>\n            <Card.Header as=\"h6\">{record['robot']}</Card.Header>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%', width: '100%', margin: '0px'}}>\n                    <Col style={{padding: '0px'}}>\n                        <ApexChart chartType=\"line\" xdata={record['date']} ydata={record['balance']}/>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n\n    return (\n        <Container className={\"border\"} style={{padding: '0px', overflow: 'scroll', height:'800px'}}>\n            {chartData}\n        </Container>\n    );\n};\n\nexport default RobotStatCards;\n","import Container from \"react-bootstrap/Container\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'\n\nimport Card from 'react-bootstrap/Card';\n\nimport PerfDashBoard from \"./HomePage/PerfDashBoard\";\nimport {useContext} from \"react\";\n\nimport RobotStatCards from \"./HomePage/RobotStatCards\";\n\n//CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './HomePage.css';\n\n\n// Contexts\nimport EnvContext from \"../context/env-context\";\nimport ServerContext from \"../context/server-context\";\nimport {yellow} from \"@material-ui/core/colors\";\n\nconst HomePage = (props) => {\n    // Context variables\n    const env = useContext(EnvContext)['environment'];\n    const server = useContext(ServerContext)['server'];\n\n    const balanceRequestData = {\n        'env': 'live',\n        'start_date': 21,\n        'end_date': 34,\n    };\n\n    return (\n            <Container style={{background:'#FBFAFA', width: \"100%\", height: window.innerHeight}} fluid>\n            <Row style={{height: window.innerHeight}}>\n                <Col style={{height: '100%'}}>\n                    <Container>\n                        <Row style={{margin: '5px'}}>\n                            <h5 style={{textAlign: \"center\",width: '100%', margin: '0px'}}>Robots</h5>\n                        </Row>\n                        <RobotStatCards env={env} server={server}/>\n                    </Container>\n                </Col>\n                <Col style={{height: '100%'}}>\n                    <Container>\n                        <Row style={{margin: '5px'}}>\n                            <h5 style={{textAlign: \"center\", width: '100%', margin: '0px'}}>Performance</h5>\n                        </Row>\n                        <PerfDashBoard server={server} env={env}/>\n\n                    </Container>\n                    <Container>\n                        <Row style={{margin: '5px'}}>\n                            <h5 style={{textAlign: \"center\", width: '100%', margin: '0px'}}>Accounts</h5>\n                        </Row>\n                        <Row style={{height: '400px', paddingTop: '5px', paddingBottom: '5px'}}>\n                            <Col style={{paddingLeft: '5px', paddingRight: '5px'}}>\n                                <Card style={{height: '100%', width: '100%', margin: '0px'}}/>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default HomePage;","import React, {useState, useEffect, useContext} from \"react\";\n\nconst PortfolioContext = React.createContext();\n\nexport default PortfolioContext;","// Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nconst NewPortfolioForm = (props) => {\n\n    const [portfolioName, setPortfolioName] = useState('');\n    const [portfolioCode, setPortfolioCode] = useState('');\n    const [portType, setPortType] = useState('Trade');\n    const [currency, setCurrency] = useState('USD');\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const portfolioNameChangeHandler = (event) => {\n        setPortfolioName(event.target.value)\n    };\n\n    const portfolioCodeChangeHandler = (event) => {\n        setPortfolioCode(event.target.value);\n    };\n\n    const portTypeHandler = (event) => {\n        setPortType(event.target.value)\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    console.log(portfolioName, portType, currency)\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        axios.post(props.server + 'portfolios/new/', {\n            port_name: portfolioName,\n            port_type: portType,\n            port_currency: currency,\n            port_code: portfolioCode,\n        })\n            .then(function (response) {\n                if (response['data'] == 'New Portfolio was created!') {\n                    window.location.reload();\n                } else {\n                    alert(response['data']);\n                }\n            })\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n        setShow(false);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                New Portfolio\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Portfolio</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio Name</Form.Label>\n                            <Form.Control onChange={portfolioNameChangeHandler} type=\"text\" placeholder=\"Portfolio Name\" required/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Code</Form.Label>\n                            <Form.Control onChange={portfolioCodeChangeHandler} type=\"text\" placeholder=\"Portfolio Code\" required/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Type</Form.Label>\n                            <Form.Control onChange={portTypeHandler} as=\"select\">\n                                <option value={'Trade'}>Trade</option>\n                                <option value={'Savings'}>Savings</option>\n                                <option value={'Investment'}>Investment</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Currency</Form.Label>\n                            <Form.Control onChange={currencyHandler} as=\"select\">\n                                <option value={'USD'}>USD</option>\n                                <option value={'HUF'}>HUF</option>\n                                <option value={'EUR'}>EUR</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewPortfolioForm;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\n\nconst PortfolioTable = (props) => {\n\n    const [portfolioData, setPortfolioData] = useState([])\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_portfolio_data/')\n                .then(response => response['data'].map((record) =>\n                    <tr key={record['id']}>\n                        <td className=\"table-row-robot-name\">{record['portfolio_name']}</td>\n                        <td className=\"table-row-other\">{record['portfolio_type']}</td>\n                        <td className=\"table-row-other\">{record['currency']}</td>\n                        <td className=\"table-row-other\">{record['inception_date']}</td>\n                        <td className=\"table-row-other\">{record['status']}</td>\n                    </tr>\n                ))\n                .then(data => setPortfolioData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Table>\n            <thead>\n            <tr>\n                <th className=\"table-row-robot-name\">Portfolio</th>\n                <th>Portfolio Type</th>\n                <th>Currency</th>\n                <th>Inception Date</th>\n                <th>Status</th>\n            </tr>\n            </thead>\n            <tbody>\n            {portfolioData}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default PortfolioTable;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst OptionLoader = (props) => {\n\n    const [rawData, setRawData] = useState('');\n\n    useEffect(() => {\n            axios.get(props.url, {params: props.params})\n                .then(response => response['data'].map((record) =>\n                    <option key={record['id']} value={record[props.code]}>{record[props.value]}</option>))\n                .then(data => setRawData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        rawData\n    );\n};\n\nexport default OptionLoader;","import Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\n\nimport OptionLoader from \"../../components/Options\";\n\nimport axios from \"axios\";\n\nconst PortfolioBuy = (props) => {\n\n    const [show, setShow] = useState(false);\n    const [securityId, setSecurity] = useState('');\n    const [securityName, setSecurityName] = useState('');\n    const [unit, setUnit] = useState(0.0);\n\n    console.log(securityId)\n\n    const instrumentParams = {\n        'type': 'Robot',\n    };\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const securityHandler = (event) => {\n        const selectIndex = event.nativeEvent.target.selectedIndex;\n\n        setSecurity(event.target.value);\n        setSecurityName(event.nativeEvent.target[selectIndex].text);\n    };\n\n    const unitHandler = (event) => {\n        setUnit(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        console.log('form submited')\n        axios.post(props.server + 'portfolios/portfolio_trade/', {\n            portfolio: props.portfolio,\n            unit: unit,\n            sec: securityName,\n            sec_type: 'Robot',\n            sec_id: securityId,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setShow(false);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                BUY\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Buy</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio</Form.Label>\n                            <Form.Control type=\"text\" placeholder={props.portfolio} value={props.portfolio} readOnly/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Robot</Form.Label>\n                            <Form.Control onChange={securityHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'instruments/get_instruments/'}\n                                    params={instrumentParams}\n                                    code={'id'}\n                                    value={'instrument_name'}/>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Unit</Form.Label>\n                            <Form.Control onChange={unitHandler} type=\"number\" min={0.0}/>\n                        </Form.Group>\n\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default PortfolioBuy;","import Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst NewPortCashFlow = (props) => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [value, setValue] = useState(0.0);\n    const [type, setType] = useState('TRADE');\n    const [currency, setCurrency] = useState('USD');\n\n    const valueHandler = (event) => {\n        setValue(event.target.value);\n    };\n\n    const cashTypeHandler = (event) => {\n        setType(event.target.value);\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        console.log('form submited')\n        axios.post(props.server + 'portfolios/new_cash_flow/', {\n            port_name: props.portfolio,\n            amount: value,\n            type: type,\n            currency: currency,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setShow(false);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                Add Cash\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Cash Flow</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio</Form.Label>\n                            <Form.Control type=\"text\" placeholder={props.portfolio} value={props.portfolio} readOnly />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Cash Flow</Form.Label>\n                            <Form.Control onChange={valueHandler} type=\"number\" placeholder=\"Value\"/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Currency</Form.Label>\n                            <Form.Control onChange={currencyHandler} as=\"select\">\n                                <option value={'USD'}>USD</option>\n                                <option value={'EUR'}>EUR</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Type</Form.Label>\n                            <Form.Control onChange={cashTypeHandler} as=\"select\">\n                                <option value={'INFLOW'}>Inflow</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewPortCashFlow;","import Card from \"react-bootstrap/Card\";\n\nconst PortfolioSettings = () => {\n    return (\n        <Card style={{height: '200px'}}>\n            <div style={{display: \"flex\", width: '50%'}}>\n                <Card.Title>Settings</Card.Title>\n            </div>\n            <h2>Price source</h2>\n\n        </Card>\n    );\n};\n\nexport default PortfolioSettings;","import Card from \"react-bootstrap/Card\";\n\nconst Holdings = () => {\n    return (\n        <Card style={{height: '200px'}}>\n            <div style={{display: \"flex\", width: '50%'}}>\n                <Card.Title>Holdings</Card.Title>\n\n            </div>\n\n        </Card>\n    );\n};\n\nexport default Holdings;","import {useContext, useEffect, useState} from \"react\";\n\nimport ServerContext from \"../context/server-context\";\nimport EnvContext from \"../context/env-context\";\nimport PortfolioContext from \"../context/portfolio-context\";\nimport axios from \"axios\";\n\nimport NewPortfolioForm from \"./PortfolioPage/NewPortfolioForm\";\nimport PortfolioTable from \"../components/Tables/PortfolioTable\";\nimport PortfolioBuy from \"./PortfolioPage/PortfolioBuy\";\nimport NewPortCashFlow from \"./PortfolioPage/NewPortCashFlow\";\nimport PortfolioSettings from \"./PortfolioPage/PortfolioSettings\";\nimport Holdings from \"./PortfolioPage/Holdings\";\n\n// Bootstrap\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container'\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport OptionLoader from \"../components/Options\";\n\n\nconst PortfolioPage = (props) => {\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n    const portfolios = useContext(PortfolioContext)['portfolioData'];\n    const [portfolio, setPortfolio] = useState(portfolios[0]['portfolio_code']);\n\n    console.log(portfolios)\n    const portfolioOptions = portfolios.map((record) =>\n        <option key={record['id']} value={record['portfolio_code']}>{record['portfolio_name']}</option>)\n\n    const portSelectHandler = (event) => {\n        setPortfolio(event.target.value);\n    };\n\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row>\n                <Col>\n                    <Container className=\"border\" style={{width: \"100%\", height: window.innerHeight}}>\n\n                        <Card style={{height: '200px'}}>\n                            <div style={{display: \"flex\", width: '50%'}}>\n                                <Card.Title>Portfolio</Card.Title>\n                                <Form.Control onChange={portSelectHandler} as=\"select\">\n                                    {portfolioOptions}\n                                </Form.Control>\n                            </div>\n                        </Card>\n                        <Card style={{height: '200px'}}>\n                            <NewPortCashFlow portfolio={portfolio} server={server}/>\n                            <PortfolioBuy portfolio={portfolio} server={server}/>\n                        </Card>\n\n                        <Holdings/>\n                    </Container>\n                </Col>\n                <Col>\n                    <Container className=\"border\" style={{height: '50%'}}>\n                        <NewPortfolioForm server={server}/>\n                    </Container>\n                    <Card>\n                        <Card.Header as=\"h5\">\n\n                        </Card.Header>\n                        <PortfolioTable server={server}/>\n                    </Card>\n\n                    <PortfolioSettings/>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default PortfolioPage;","import SliderWidget from \"../../components/SliderWidget\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\nconst TradeTableRow = (props) => {\n\n    const CloseTrade = () => {\n        axios.post(props.server + 'trade_page/close_trade/', {\n            broker_id: props.broker_id,\n            robot: props.robot,\n            trd_id: props.id,\n        })\n            .then(response => alert(response['data']))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <tr>\n            <td style={{fontSize: 12, verticalAlign:\"middle\" }}>{props.id}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\" }}>{props.broker_id}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.security}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.robot}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.quantity}</td>\n            <td><Button onClick={CloseTrade}>Close</Button></td>\n        </tr>\n    );\n};\n\nexport default TradeTableRow;","import {useContext, useEffect, useState} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport TradeTableRow from \"./TradeTableRow\";\n\n\nconst TradeTableData = (props) => {\n\n    const [tradeData, setTradeData] = useState([])\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            fetch(props.server + 'trade_page/get_open_trades/' + props.env)\n                .then(response => response.json())\n                .then(data => setTradeData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const tradeDataRow = tradeData.map((record)=>\n        <TradeTableRow\n            server={props.server}\n            key={record['id']}\n            id={record['id']}\n            broker_id={record['broker_id']}\n            security={record['security']}\n            robot={record['robot']}\n            quantity={record['quantity']}/>)\n\n    return (\n        <Card style={{width: '100%'}}>\n            <Table>\n                <thead style={{fontSize: 12}}>\n                <tr>\n                    <th style={{verticalAlign: \"middle\"}}>Platform ID</th>\n                    <th style={{verticalAlign: \"middle\"}}>Broker ID</th>\n                    <th style={{verticalAlign: \"middle\"}}>Security</th>\n                    <th style={{verticalAlign: \"middle\"}}>Robot</th>\n                    <th style={{verticalAlign: \"middle\"}}>Quantity</th>\n                    <th style={{verticalAlign: \"middle\"}}></th>\n                </tr>\n                </thead>\n\n                <tbody style={{height: '100%', overflow: 'scroll'}}>\n                {tradeDataRow}\n                </tbody>\n            </Table>\n\n        </Card>\n    );\n};\n\nexport default TradeTableData;","import Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport TradeTableData from \"./TradePage/TradeTableData\";\nimport {useContext} from \"react\";\nimport EnvContext from \"../context/env-context\";\nimport ServerContext from \"../context/server-context\";\n\n\nconst TradePage = () => {\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n\n    return (\n        <Container className={'border'} style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row style={{height: '60%', background: 'green'}}>\n\n            </Row>\n            <Row style={{height: '40%', background: 'blue'}}>\n                <TradeTableData env={env} server={server}/>\n            </Row>\n        </Container>\n    );\n};\n\nexport default TradePage;","import {Card} from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport {useState} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst BalanceCalculation = (props) => {\n\n    const [dateBegin, setDateBegin] = useState(new Date());\n    const [dateEnd, setDateEnd] = useState(new Date());\n    const [robot, setRobot] = useState('ALL');\n    const [loadState, setLoadState] = useState(false);\n\n    const startDateHandler = (event) => {\n        setDateBegin(event.target.value);\n    };\n\n    const endDateHandler = (event) => {\n        setDateEnd(event.target.value);\n    };\n\n    const robotHandler = (event) => {\n        setRobot(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        setLoadState(true);\n\n        axios.post(props.server + 'robots/process_hub/', {\n            process: 'Balance',\n            robot: robot,\n            start_date: dateBegin,\n            end_date: dateEnd,\n        })\n            .then(response => setLoadState(false))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <Card>\n            <Card.Header as=\"h5\">\n                Balance Calculator\n            </Card.Header>\n            <Card.Body>\n                <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                    <Form.Group>\n                        <Form.Label>Start Date</Form.Label>\n                        <Form.Control onChange={startDateHandler} type=\"date\"/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>End Date</Form.Label>\n                        <Form.Control onChange={endDateHandler} type=\"date\"/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Robots</Form.Label>\n                        <Form.Control onChange={robotHandler} as=\"select\">\n                            <option value={'ALL'}>ALL</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Calculate\n                    </Button>\n                </Form>\n            </Card.Body>\n            <Modal show={loadState} >\n                <Modal.Body style={{width: '200px', height:'300px'}}>\n                    <h2>Calculating ...</h2>\n                </Modal.Body>\n            </Modal>\n        </Card>\n    );\n};\n\nexport default BalanceCalculation;","import Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\n\nimport axios from \"axios\";\n\nconst NewBrokerAccount = (props) => {\n\n    const [broker, setBroker] = useState('');\n    const [accountNumber, setAccountNumber] = useState('');\n    const [token, setToken] = useState('');\n    const [env, setEnv] = useState('live');\n    const [currency, setCurrency] = useState('USD');\n\n    const onHide = () => {\n        props.hide();\n    };\n\n    const submitHandler = () => {\n        axios.post(props.server + 'accounts/new_account/', {\n            broker_name: broker,\n            account_number: accountNumber,\n            env: env,\n            token: token,\n            currency: currency,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setBroker('');\n        setAccountNumber('');\n        setToken('');\n        setEnv('live');\n        setCurrency('USD');\n        props.hide();\n    };\n\n    const brokerNameHandler = (event) => {\n        setBroker(event.target.value);\n    };\n\n    const accountNumberHandler = (event) => {\n        setAccountNumber(event.target.value);\n    };\n\n    const tokenHandler = (event) => {\n        setToken(event.target.value);\n    };\n\n    const envHandler = (event) => {\n        setEnv(event.target.value);\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    return (\n        <Modal show={props.show} onHide={onHide} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>New Account</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Group>\n                    <Form.Control onChange={brokerNameHandler} type=\"text\" placeholder=\"Broker Name\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control onChange={accountNumberHandler} type=\"text\" placeholder=\"Account Number\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control onChange={tokenHandler} type=\"text\" placeholder=\"Token\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Environment</Form.Label>\n                    <Form.Control onChange={envHandler} as=\"select\">\n                        <option value={'live'}>Live</option>\n                        <option value={'demo'}>Demo</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Currency</Form.Label>\n                    <Form.Control onChange={currencyHandler} as=\"select\">\n                        <option value={'USD'}>USD</option>\n                        <option value={'EUR'}>EUR</option>\n                    </Form.Control>\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onHide}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={submitHandler}>\n                    Save\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default NewBrokerAccount;","import { Navbar, Nav, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { Link } from 'react-router-dom'\n\nimport {useContext, useState} from \"react\";\n\nimport BalanceCalculation from \"../Pages/Robot/BalanceCalculation\";\n\nimport NewBrokerAccount from \"./NewBrokerAccount\";\nimport ServerContext from \"../context/server-context\";\n\nconst Navigation = (props) => {\n\n    const server = useContext(ServerContext)['server'];\n\n    const [showNewAccount, setShowNewAccount] = useState(false);\n\n    const envChange = (envValue) => {\n        props.onEnvChange(envValue);\n    };\n\n    // New account handlers\n    const newAccountHandler = () => {\n        setShowNewAccount(true);\n    };\n\n    const hideNewAccount = () => {\n        setShowNewAccount(false);\n    };\n\n    return (\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">FFM SYSTEM</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to={'/home'}>Home</Nav.Link>\n                    <Nav.Link as={Link} to={'/portfolio'}>Portfolio</Nav.Link>\n                    <Nav.Link as={Link} to={'/robot'}>Robot</Nav.Link>\n                    <Nav.Link as={Link} to={'/risk'}>Risk</Nav.Link>\n                    <Nav.Link as={Link} to={'/instruments'}>Instrument</Nav.Link>\n                    <Nav.Link as={Link} to={'/trade'}>Trade</Nav.Link>\n                    <NavDropdown title=\"Calculations\">\n                        <NavDropdown.Item>Robot Balance</NavDropdown.Item>\n                        <NavDropdown.Item></NavDropdown.Item>\n                        <NavDropdown.Divider/>\n                        <NavDropdown.Item>Portfolio Holdings</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"Broker Accounts\">\n                        <NavDropdown.Item onSelect={newAccountHandler}>New</NavDropdown.Item>\n                        <NavDropdown.Item>Update</NavDropdown.Item>\n                        <NavDropdown.Item>Delete</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n                <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\n                    <Button variant=\"outline-info\">Search</Button>\n                </Form>\n                <Dropdown onSelect={envChange} style={{marginLeft:'10px'}}>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        Environment\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item eventKey=\"live\">Live</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"demo\">Demo</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <NewBrokerAccount show={showNewAccount} hide={hideNewAccount} server={server}/>\n            </Navbar>\n\n    );\n};\n\nexport default Navigation;","import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {useEffect, useState, useRef} from \"react\";\nimport axios from \"axios\";\nimport OptionLoader from \"../../components/Options\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst NewRobotForm = (props) => {\n    const [robotName, setRobotName] = useState('');\n    const [strategy, setStrategy] = useState('');\n    const [broker, setBroker] = useState('oanda');\n    const [env, setEnv] = useState('live');\n    const [account, setAccount] = useState('');\n    const [instrument, setInstrument] = useState('');\n\n    console.log(account);\n    console.log(instrument)\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const accountParams = {\n        'broker': broker,\n        'env': env,\n    };\n\n    const instrumentParams = {\n        'broker': broker,\n    };\n\n    const robotNameChangeHandler = (event) => {\n        setRobotName(event.target.value)\n    };\n\n    const robotStrategyHandler = (event) => {\n        setStrategy(event.target.value)\n    };\n\n    const envHandler = (event) => {\n        setEnv(event.target.value);\n    };\n\n    const instHandler = (event) => {\n        setInstrument(event.target.value);\n    };\n\n    const brokerHandler = (event) => {\n        setBroker(event.target.value);\n    };\n\n    const accountHandler = (event) => {\n        setAccount(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        // axios.post(props.server + 'robots/new_robot/', {\n        //     robot_name: robotName,\n        //     strategy: strategy,\n        //     security: instrument,\n        //     broker: broker,\n        //     env: env,\n        //     account: account,\n        // })\n        //         .then(response => console.log(response))\n        //         .catch((error) => {\n        //             console.error('Error Message:', error);\n        //         });\n        // setShow(false)\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                New Robot\n            </Button>\n\n            <Modal show={show} onHide={handleClose} animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Robot</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Robot Name</Form.Label>\n                            <Form.Control onChange={robotNameChangeHandler} type=\"text\" placeholder=\"Robot Name\"/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Strategy</Form.Label>\n                            <Form.Control onChange={robotStrategyHandler} as=\"select\">\n                                <option value={'Initiative'}>Initiative</option>\n                                <option value={'Responsive'}>Responsive</option>\n                                <option value={'Correction'}>Correction</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Broker</Form.Label>\n                            <Form.Control onChange={brokerHandler} as=\"select\">\n                                <option>oanda</option>\n                                <option>Fix</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Environment</Form.Label>\n                            <Form.Control onChange={envHandler} as=\"select\">\n                                <option value={'live'}>Live</option>\n                                <option value={'demo'}>Demo</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Instruments</Form.Label>\n                            <Form.Control onChange={instHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'instruments/get_instruments/'}\n                                    params={instrumentParams}\n                                    code={'instrument_name'}\n                                    value={'instrument_name'}\n                                />\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Account Number</Form.Label>\n                            <Form.Control onChange={accountHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'accounts/get_accounts_data/'}\n                                    params={accountParams}\n                                    code={'account_number'}\n                                    value={'account_number'}\n                                />\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewRobotForm;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\n\nconst RobotTable = (props) => {\n\n    const [robotData, setRobotData] = useState([])\n\n    const OpenUpdateRiskModal = () => {\n        console.log(\"Button Clicked\")\n    };\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robots/' + props.env)\n                .then(response => response['data'].map((data) =>\n                    <tr key={data['id']}>\n                        <td>{data['name']}</td>\n                        <td>{data['strategy']}</td>\n                        <td>{data['security']}</td>\n                        <td>{data['broker']}</td>\n                        <td>{data['env']}</td>\n                        <td>{data['status']}</td>\n                        <td>{data['account_number']}</td>\n                        <td><Button onClick={OpenUpdateRiskModal}>Update</Button></td>\n                    </tr>\n                ))\n                .then(data => setRobotData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Table>\n            <thead>\n            <tr>\n                <td>Name</td>\n                <td>Strategy</td>\n                <td>Security</td>\n                <td>Broker</td>\n                <td>Env</td>\n                <td>Status</td>\n                <td>Account Number</td>\n            </tr>\n            </thead>\n            <tbody>\n            {robotData}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default RobotTable;","import {useState, useEffect, useContext} from \"react\";\n\nimport NewRobotForm from \"./Robot/NewRobotForm\";\nimport RobotTable from \"./Robot/RobotTable\";\nimport BalanceCalculation from \"./Robot/BalanceCalculation\";\nimport axios from \"axios\";\n\n// Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\n\n// Context\nimport ServerContext from \"../context/server-context\";\nimport EnvContext from \"../context/env-context\";\nimport {Card} from \"react-bootstrap\";\n\nconst RobotPage = (props) => {\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Header as=\"h5\">\n                            <NewRobotForm server={server} style={{height: '400px'}}/>\n                        </Card.Header>\n                        <RobotTable server={server} env={env}/>\n                    </Card>\n                </Col>\n                <Col>\n                    <BalanceCalculation server={server}/>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default RobotPage;","const InstrumentPage = () => {\n    return (\n        <div>\n            <h2>Instrument Page</h2>\n        </div>\n    );\n};\n\nexport default InstrumentPage;","import './App.css';\nimport {useContext, useEffect, useState} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport RiskPage from \"./Pages/RiskPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport PortfolioPage from \"./Pages/PortfolioPage\";\nimport TradePage from \"./Pages/TradePage\";\nimport Navigation from \"./components/NavBar\";\nimport RobotPage from \"./Pages/RobotPage\";\nimport InstrumentPage from \"./Pages/InstrumentPage\";\n\n// Contexts\nimport ServerContext from \"./context/server-context\";\nimport EnvContext from \"./context/env-context\";\nimport PortfolioContext from \"./context/portfolio-context\";\nimport axios from \"axios\";\n\nfunction App() {\n    // 'https://127.0.0.1:8000/' 'https://pavliati.pythonanywhere.com/'\n    const [robotEnvData, setRobotEnvData] = useState('live');\n    const server = 'https://pavliati.pythonanywhere.com/'\n\n    const getEnvData = (env) => {\n        setRobotEnvData(env);\n    };\n\n    const [portfolioData, setPortfolioData] = useState([]);\n\n    useEffect(() => {\n            axios.get(server + 'portfolios/get_portfolio_data/')\n                .then(response => setPortfolioData(response['data']))\n\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, []\n    );\n\n    return (\n        <ServerContext.Provider value={{server: server}}>\n            <EnvContext.Provider value={{\n                environment: robotEnvData\n            }}>\n                <PortfolioContext.Provider value={{portfolioData}}>\n                    <div className=\"App\">\n\n                        <Navigation onEnvChange={getEnvData}/>\n                        <Switch>\n                            <Route path=\"/risk\">\n                                <RiskPage/>\n                            </Route>\n                            <Route path=\"/home\">\n                                <HomePage/>\n                            </Route>\n                            <Route path=\"/trade\">\n                                <TradePage/>\n                            </Route>\n                            <Route path=\"/portfolio\">\n                                <PortfolioPage/>\n                            </Route>\n                            <Route path=\"/instruments\">\n                                <InstrumentPage/>\n                            </Route>\n                            <Route path=\"/robot\">\n                                <RobotPage/>\n                            </Route>\n                        </Switch>\n\n                    </div>\n                </PortfolioContext.Provider>\n            </EnvContext.Provider>\n        </ServerContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}