{"version":3,"sources":["context/env-context.js","components/SliderWidget.js","Pages/RiskPage/RiskTableRow.js","Pages/RiskPage/RiskTableData.js","context/server-context.js","Pages/RiskPage.js","Pages/HomePage/PerfDashBoard.js","components/Charts.js","Pages/HomePage/RobotStatCards.js","Pages/HomePage.js","context/portfolio-context.js","Pages/PortfolioPage/NewPortfolioForm.js","Pages/PortfolioPage/PortfolioSettings.js","Pages/PortfolioPage/Holdings.js","components/Options.js","Pages/PortfolioPage/PortfolioBuy.js","Pages/PortfolioPage/PortfolioTransactions.js","Pages/PortfolioPage/NewPortCashFlow.js","Pages/PortfolioPage/PortfolioNav.js","Pages/PortfolioPage/PortfolioDetails.js","Pages/PortfolioPage/PortfolioGroup.js","Pages/PortfolioPage/PortfolioRisk.js","Pages/PortfolioPage/PortfolioReturn.js","Pages/PortfolioPage.js","Pages/TradePage/TradeTableRow.js","Pages/TradePage/TradeTableData.js","Pages/TradePage.js","Pages/Robot/BalanceCalculation.js","components/NewBrokerAccount.js","components/NavBar.js","Pages/Robot/NewRobotForm.js","Pages/Robot/RobotTable.js","Pages/Robot/RobotReturn.js","Pages/Robot/RobotRisk.js","Pages/Robot/RobotDetails.js","Pages/Robot/RobotBalance.js","Pages/Robot/RobotCashFlow.js","Pages/Robot/RobotNav.js","context/robot-context.js","Pages/RobotPage.js","Pages/InstrumentPage.js","App.js","reportWebVitals.js","index.js"],"names":["EnvContext","React","createContext","environment","SliderWidget","props","useState","defaultValue","value","setValue","Form","Group","style","margin","Row","Col","Label","verticalAlign","Control","onChange","event","target","type","min","max","step","RiskTableRow","robot","dailyRisk","setDailyRisk","tradeLimit","setTradeLimit","riskOnTrade","setRiskOnTrade","pLevel","qType","quantity","className","Button","onClick","axios","post","server","daily_risk","nbm_trades","risk_per_trade","pyramiding_level","quantity_type","then","response","console","log","catch","error","RiskTableData","env","useContext","riskData","setRiskData","useEffect","fetch","json","data","riskDataRow","map","Table","fontSize","ServerContext","RiskPage","Container","background","width","height","window","innerHeight","padding","fluid","Card","Title","PerformanceDashboard","perfData","setPerfData","get","perfRespData","record","borderRadius","Body","size","ApexChart","state","options","chart","toolbar","id","xaxis","categories","xdata","labels","show","yaxis","formatter","val","toFixed","dataLabels","enabled","series","name","ydata","chartType","RobotStatCards","balanceRequestData","robotBalanceData","setRobotBalanceData","params","robotRiskData","setRobotRiskData","widgetData","balance","risk","chartData","index","marginTop","marginBottom","marginRight","Header","as","overflow","HomePage","textAlign","paddingTop","paddingBottom","paddingLeft","paddingRight","PortfolioContext","NewPortfolioForm","portfolioName","setPortfolioName","portfolioCode","setPortfolioCode","portType","setPortType","currency","setCurrency","setShow","handleClose","submitHandler","preventDefault","port_name","port_type","port_currency","port_code","location","reload","alert","variant","Modal","onHide","closeButton","onSubmit","placeholder","required","Footer","PortfolioSettings","Holdings","sm","OptionLoader","rawData","setRawData","url","code","PortfolioBuy","securityId","setSecurity","securityName","setSecurityName","unit","setUnit","portfolio","sec","sec_type","sec_id","readOnly","selectIndex","nativeEvent","selectedIndex","text","PortfolioTransactions","portTransData","setPortTransData","overflowY","overflowX","NewPortCashFlow","setType","amount","PortfolioNav","PortfolioDetails","PortfolioGroup","PortfolioRisk","PortfolioPage","portfolios","setPortfolio","setStartDate","setEndDate","portfolioOptions","display","column","portOptions","portChange","port","PortfolioReturn","TradeTableRow","broker_id","security","trd_id","TradeTableData","tradeData","setTradeData","tradeDataRow","TradePage","BalanceCalculation","loadState","setLoadState","process","start_date","end_date","NewBrokerAccount","broker","setBroker","accountNumber","setAccountNumber","token","setToken","setEnv","hide","animation","broker_name","account_number","Navigation","showNewAccount","setShowNewAccount","Navbar","bg","Brand","href","Nav","Link","to","NavDropdown","title","Item","Divider","onSelect","inline","FormControl","Dropdown","envValue","onEnvChange","marginLeft","Toggle","Menu","eventKey","NewRobotForm","setRobotName","setStrategy","account","setAccount","instrument","setInstrument","accountParams","instrumentParams","RobotTable","robotData","setRobotData","OpenUpdateRiskModal","RobotReturn","setChartData","chartOptions","RobotRisk","RobotDetails","RobotBalance","length","axisTicks","borderType","color","offsetX","offsetY","grid","borderColor","strokeDashArray","position","lines","row","colors","undefined","opacity","top","right","bottom","left","RobotCashFlow","RobotNav","robots","robotsData","setRobotsData","robotsOptions","robotChange","RobotContext","RobotPage","defaultRobots","setRobot","startDate","endDate","rob","InstrumentPage","App","robotEnvData","setRobotEnvData","portfolioData","setPortfolioData","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40fdb2a3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EnvContext = React.createContext({\n    environment: 'live'\n});\n\nexport default EnvContext;","import {useState} from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst SliderWidget = (props) => {\n\n    const [value, setValue] = useState(props.defaultValue);\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    return (\n\n        <Form>\n            <Form.Group style={{margin: '0px'}}>\n                <Row>\n                    <Col>\n                        <Form.Label style={{verticalAlign:\"middle\"}}>{value}</Form.Label>\n                    </Col>\n                    <Col>\n                        <Form.Control onChange={handleChange} type=\"range\" min={props.min} max={props.max} step={props.step}\n                              value={value}/>\n                    </Col>\n                </Row>\n            </Form.Group>\n        </Form>\n\n    );\n};\n\nexport default SliderWidget;","import {useState} from \"react\";\nimport SliderWidget from \"../../components/SliderWidget\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\n\n// CSS\nimport \"../MainCSS.css\"\n\nconst RiskTableRow = (props) => {\n\n    const [robot, setRobot] = useState(props.robot);\n    const [dailyRisk, setDailyRisk] = useState(props.dailyRisk);\n    const [tradeLimit, setTradeLimit] = useState(props.tradeLimit);\n    const [riskOnTrade, setRiskOnTrade] = useState(props.riskOnTrade);\n    const [pLevel, setPLevel] = useState(props.pLevel);\n    const [qType, setQType] = useState(props.qType);\n    const [quantity, setQuantity] = useState(props.quantity);\n\n    const UpdateRisk = () => {\n        axios.post(props.server + 'risk/update_robot_risk/', {\n            robot: robot,\n            daily_risk: dailyRisk,\n            nbm_trades: tradeLimit,\n            risk_per_trade: riskOnTrade,\n            pyramiding_level: pLevel,\n            quantity_type: qType,\n            quantity: quantity\n        })\n            .then(response => console.log(response))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n        console.log(robot)\n        console.log(tradeLimit)\n        console.log(riskOnTrade)\n    };\n\n    const tradeLimitHandler = (event) => {\n        setTradeLimit(event.target.value)\n    };\n\n    const tradeRiskHandler = (event) => {\n        setRiskOnTrade(event.target.value)\n    };\n\n    const dailyRiskHandler = (event) => {\n        setDailyRisk(event.target.value)\n    };\n\n    return (\n        <tr>\n            <td style={{verticalAlign: \"middle\"}}>{robot}</td>\n            <td style={{verticalAlign: \"middle\"}} onChange={dailyRiskHandler}><SliderWidget defaultValue={dailyRisk}\n                              min={0.00}\n                              max={0.20}\n                              step={0.005}/></td>\n            <td style={{verticalAlign: \"middle\"}} className=\"table-row\" onChange={tradeLimitHandler}><SliderWidget defaultValue={tradeLimit}\n                              min={0}\n                              max={20}\n                              step={1}/></td>\n            <td style={{verticalAlign: \"middle\"}} className=\"table-row\" onChange={tradeRiskHandler}><SliderWidget defaultValue={riskOnTrade}\n                              min={0.00}\n                              max={0.1}\n                              step={0.0025}/></td>\n            <td style={{verticalAlign: \"middle\"}}>{pLevel}</td>\n            <td style={{verticalAlign: \"middle\"}}>{qType}</td>\n            <td style={{verticalAlign: \"middle\"}}>{quantity}</td>\n            <td style={{verticalAlign: \"middle\"}}><Button onClick={UpdateRisk}>Update</Button></td>\n        </tr>\n    );\n};\n\nexport default RiskTableRow;","import {useContext, useEffect, useState} from \"react\";\nimport EnvContext from \"../../context/env-context\";\nimport RiskTableRow from \"./RiskTableRow\";\n\n// Bootstrap\nimport Table from \"react-bootstrap/Table\";\n\n// CSS\nimport \"../MainCSS.css\"\n\nconst RiskTableData = (props) => {\n\n    const env = useContext(EnvContext)['environment'];\n\n    const [riskData, setRiskData] = useState([])\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            fetch(props.server + 'risk/get_robot_risk/' + env)\n                .then(response => response.json())\n                .then(data => setRiskData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const riskDataRow = riskData.map((data) =>\n        <RiskTableRow key={data['id']}\n                      robot={data['robot']}\n                      dailyRisk={data['daily_risk']}\n                      tradeLimit={data['daily_trade_limit']}\n                      riskOnTrade={data['risk_per_trade']}\n                      pLevel={data['pyramiding_level']}\n                      qType={data['quantity_type']}\n                      quantity={data['quantity']}\n                      server={props.server}/>\n    );\n\n    return (\n        <Table>\n            <thead style={{fontSize: 12}}>\n            <tr>\n                <th style={{verticalAlign: \"middle\"}}>Robot</th>\n                <th style={{verticalAlign: \"middle\"}}>Daily Loss Limit %</th>\n                <th style={{verticalAlign: \"middle\"}}>Max Number of Trades (Daily)</th>\n                <th style={{verticalAlign: \"middle\"}}>Risk per Trade %</th>\n                <th style={{verticalAlign: \"middle\"}}>Pyramiding Level</th>\n                <th style={{verticalAlign: \"middle\"}}>Quantity Type</th>\n                <th style={{verticalAlign: \"middle\"}}>Quantity</th>\n                <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            {riskDataRow}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default RiskTableData;","import React from \"react\";\n\nconst ServerContext = React.createContext();\n\nexport default ServerContext;","import {useState, useEffect, useContext} from \"react\";\n\n// Bootstrap\nimport Button from \"react-bootstrap/Button\";\nimport Container from 'react-bootstrap/Container'\nimport Form from \"react-bootstrap/Form\";\nimport Table from 'react-bootstrap/Table'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport RiskTableData from \"./RiskPage/RiskTableData\";\nimport ServerContext from \"../context/server-context\";\n\n// CSS\nimport \"./MainCSS.css\"\n\nconst RiskPage = () => {\n\n    const server = useContext(ServerContext)['server'];\n\n    return (\n        <Container className={\"border\"} style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row>\n                <Col>\n                    <Container className={\"border\"} style={{height: '100%'}}>\n\n                    </Container>\n                </Col>\n                <Col>\n                    <Container>\n                        <Card className=\"card\">\n                            <Card.Title className=\"card-header-first\"> Robot Risk Parameters</Card.Title>\n                            <RiskTableData server={server}/>\n                        </Card>\n                    </Container>\n\n                </Col>\n            </Row>\n\n        </Container>\n    );\n};\n\nexport default RiskPage;","import Card from 'react-bootstrap/Card';\nimport Table from \"react-bootstrap/Table\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport './PerfDashBoard.css'\n\nconst PerformanceDashboard = (props) => {\n\n    // Fetching Robot balance data\n    const [perfData, setPerfData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'home/load_robot_stats/' + props.env)\n                .then(response => response['data'])\n                .then(data => setPerfData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const perfRespData = perfData.map((record) =>\n    <tr key={record['robot']['id']}>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-robot-name\">{record['robot']['name']}</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['balance']}</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['dtd_ret']} %</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['mtd_ret']} %</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['ytd_ret']} %</td>\n    </tr>);\n\n\n\n    return (\n        <Card className={'shadow-sm'} style={{borderRadius:'0px'}}>\n            <Card.Body style={{padding: '0px'}}>\n                <Table size=\"sm\">\n                    <thead>\n                    <tr>\n                        <th className=\"table-row-robot-name\">Robot</th>\n                        <th>Balance</th>\n                        <th>DTD</th>\n                        <th>MTD</th>\n                        <th>YTD</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {perfRespData}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n\n};\n\nexport default PerformanceDashboard;","import Chart from \"react-apexcharts\";\n\nconst ApexChart = (props) => {\n    const state = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: props.xdata,\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.ydata\n            }\n        ]\n    };\n\n    return (\n            <Chart\n                options={state.options}\n                series={state.series}\n                type={props.chartType}\n                width=\"100%\"\n                height=\"80%\"\n            />\n        );\n}\n\nexport default ApexChart;\n","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport ApexChart from \"../../components/Charts\";\n\n\nconst RobotStatCards = (props) => {\n\n    const balanceRequestData = {\n        'env': props.env,\n        'start_date': 21,\n        'end_date': 34,\n    };\n\n    // Fetching Robot balance data\n    const [robotBalanceData, setRobotBalanceData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robot_balance/' + props.env, {params:balanceRequestData})\n                .then(response => response['data'])\n                .then(data => setRobotBalanceData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    // Fetching robot risk data\n    const [robotRiskData, setRobotRiskData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'risk/get_robot_risk/' + props.env)\n                .then(response => response['data'])\n                .then(data => setRobotRiskData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const widgetData = {\n        balance: robotBalanceData,\n        risk: robotRiskData,\n    };\n    console.log(widgetData)\n\n    const chartOptions ={\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: props.xdata,\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.ydata\n            }\n        ]\n    };\n\n    const chartData = robotBalanceData.map((record, index) =>\n\n        <Card className={'shadow-sm'} key={record['robot']} style={{marginTop: '5px', marginBottom: '5px', marginRight: '5px', height: '300px'}}>\n            <Card.Header as=\"h6\">{record['robot']}</Card.Header>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%', width: '100%', margin: '0px'}}>\n                    <Col style={{padding: '0px'}}>\n                        <ApexChart chartType=\"line\" xdata={record['date']} ydata={record['balance']}/>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n\n    return (\n        <Container className={\"border\"} style={{padding: '0px', overflow: 'scroll', height:'800px'}}>\n            {chartData}\n        </Container>\n    );\n};\n\nexport default RobotStatCards;\n","import Container from \"react-bootstrap/Container\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Card from 'react-bootstrap/Card';\n\nimport PerfDashBoard from \"./HomePage/PerfDashBoard\";\nimport {useContext} from \"react\";\n\nimport RobotStatCards from \"./HomePage/RobotStatCards\";\n\n//CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './HomePage.css';\n\n\n// Contexts\nimport EnvContext from \"../context/env-context\";\nimport ServerContext from \"../context/server-context\";\nimport {yellow} from \"@material-ui/core/colors\";\n\nconst HomePage = (props) => {\n    // Context variables\n    const env = useContext(EnvContext)['environment'];\n    const server = useContext(ServerContext)['server'];\n\n    const balanceRequestData = {\n        'env': 'live',\n        'start_date': 21,\n        'end_date': 34,\n    };\n\n    return (\n            <Container style={{background:'#FBFAFA', width: \"100%\", height: window.innerHeight}} fluid>\n            <Row style={{height: window.innerHeight}}>\n                <Col style={{height: '100%'}}>\n                    <Container>\n                        <Row style={{margin: '5px'}}>\n                            <h5 style={{textAlign: \"center\",width: '100%', margin: '0px'}}>Robots</h5>\n                        </Row>\n                        <RobotStatCards env={env} server={server}/>\n                    </Container>\n                </Col>\n                <Col style={{height: '100%'}}>\n                    <Container>\n                        <Row style={{margin: '5px'}}>\n                            <h5 style={{textAlign: \"center\", width: '100%', margin: '0px'}}>Performance</h5>\n                        </Row>\n                        <PerfDashBoard server={server} env={env}/>\n\n                    </Container>\n                    <Container>\n                        <Row style={{margin: '5px'}}>\n                            <h5 style={{textAlign: \"center\", width: '100%', margin: '0px'}}>Accounts</h5>\n                        </Row>\n                        <Row style={{height: '400px', paddingTop: '5px', paddingBottom: '5px'}}>\n                            <Col style={{paddingLeft: '5px', paddingRight: '5px'}}>\n                                <Card style={{height: '100%', width: '100%', margin: '0px'}}/>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default HomePage;","import React, {useState, useEffect, useContext} from \"react\";\n\nconst PortfolioContext = React.createContext();\n\nexport default PortfolioContext;","// Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nconst NewPortfolioForm = (props) => {\n\n    const [portfolioName, setPortfolioName] = useState('');\n    const [portfolioCode, setPortfolioCode] = useState('');\n    const [portType, setPortType] = useState('Trade');\n    const [currency, setCurrency] = useState('USD');\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const portfolioNameChangeHandler = (event) => {\n        setPortfolioName(event.target.value)\n    };\n\n    const portfolioCodeChangeHandler = (event) => {\n        setPortfolioCode(event.target.value);\n    };\n\n    const portTypeHandler = (event) => {\n        setPortType(event.target.value)\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    console.log(portfolioName, portType, currency)\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        axios.post(props.server + 'portfolios/new/', {\n            port_name: portfolioName,\n            port_type: portType,\n            port_currency: currency,\n            port_code: portfolioCode,\n        })\n            .then(function (response) {\n                if (response['data'] == 'New Portfolio was created!') {\n                    window.location.reload();\n                } else {\n                    alert(response['data']);\n                }\n            })\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n        setShow(false);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                New Portfolio\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Portfolio</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio Name</Form.Label>\n                            <Form.Control onChange={portfolioNameChangeHandler} type=\"text\" placeholder=\"Portfolio Name\" required/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Code</Form.Label>\n                            <Form.Control onChange={portfolioCodeChangeHandler} type=\"text\" placeholder=\"Portfolio Code\" required/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Type</Form.Label>\n                            <Form.Control onChange={portTypeHandler} as=\"select\">\n                                <option value={'Trade'}>Trade</option>\n                                <option value={'Savings'}>Savings</option>\n                                <option value={'Investment'}>Investment</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Currency</Form.Label>\n                            <Form.Control onChange={currencyHandler} as=\"select\">\n                                <option value={'USD'}>USD</option>\n                                <option value={'HUF'}>HUF</option>\n                                <option value={'EUR'}>EUR</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewPortfolioForm;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioSettings = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Settings</Card.Title>\n            <h2>Price source</h2>\n\n        </Card>\n    );\n};\n\nexport default PortfolioSettings;","import Card from \"react-bootstrap/Card\";\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n// CSS\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst Holdings = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Holdings</Card.Title>\n            <Row style={{height: '100%'}}>\n                <Col sm={8}>\n                    <Container className=\"border\" style={{width:'100%', height: '100%', padding:'5px'}} fluid>\n\n                    </Container>\n                </Col>\n                <Col sm={4}>\n                    <Container className=\"border\" style={{width:'100%', height: '100%', padding:'5px'}} fluid>\n\n                    </Container>\n                </Col>\n            </Row>\n        </Card>\n    );\n};\n\nexport default Holdings;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst OptionLoader = (props) => {\n\n    const [rawData, setRawData] = useState('');\n\n    useEffect(() => {\n            axios.get(props.url, {params: props.params})\n                .then(response => response['data'].map((record) =>\n                    <option key={record['id']} value={record[props.code]}>{record[props.value]}</option>))\n                .then(data => setRawData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        rawData\n    );\n};\n\nexport default OptionLoader;","import Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\n\nimport OptionLoader from \"../../components/Options\";\n\nimport axios from \"axios\";\n\nconst PortfolioBuy = (props) => {\n\n    const [show, setShow] = useState(false);\n    const [securityId, setSecurity] = useState('');\n    const [securityName, setSecurityName] = useState('');\n    const [unit, setUnit] = useState(0.0);\n\n    console.log(securityId)\n\n    const instrumentParams = {\n        'type': 'Robot',\n    };\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const securityHandler = (event) => {\n        const selectIndex = event.nativeEvent.target.selectedIndex;\n\n        setSecurity(event.target.value);\n        setSecurityName(event.nativeEvent.target[selectIndex].text);\n    };\n\n    const unitHandler = (event) => {\n        setUnit(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        console.log('form submited')\n        axios.post(props.server + 'portfolios/portfolio_trade/', {\n            portfolio: props.portfolio,\n            unit: unit,\n            sec: securityName,\n            sec_type: 'Robot',\n            sec_id: securityId,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setShow(false);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                Buy Robot\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Buy Robot</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio</Form.Label>\n                            <Form.Control type=\"text\" placeholder={props.portfolio} value={props.portfolio} readOnly/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Robot</Form.Label>\n                            <Form.Control onChange={securityHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'robots/get_robots/all'}\n                                    params={instrumentParams}\n                                    code={'id'}\n                                    value={'name'}/>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Unit</Form.Label>\n                            <Form.Control onChange={unitHandler} type=\"number\" min={0.0}/>\n                        </Form.Group>\n\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default PortfolioBuy;","import Card from \"react-bootstrap/Card\";\n\nimport PortfolioBuy from \"./PortfolioBuy\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioTransactions = (props) => {\n\n    const [portTransData, setPortTransData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_portfolio_transactions/' + props.portfolio)\n                .then(response => response['data'].map((data) =>\n                    <tr key={data[0]}>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[1]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[2]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[3]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[4]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[5]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[6]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[7]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[8]}</td>\n                    </tr>\n                ))\n                .then(data => setPortTransData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Transactions</Card.Title>\n            <Row style={{width:'100%', margin:'0px'}}>\n\n            </Row>\n\n            <div style={{height:'100%',overflowY: 'scroll', overflowX: 'hidden'}}>\n                <Table>\n                <thead className=\"table-header-first\">\n                <tr>\n                    <td className=\"table-header-row\">Portfolio</td>\n                    <td className=\"table-header-row\">Quantity</td>\n                    <td className=\"table-header-row\">Price</td>\n                    <td className=\"table-header-row\">Market Value</td>\n                    <td className=\"table-header-row\">Trade Date</td>\n                    <td className=\"table-header-row\">Instrument</td>\n                    <td className=\"table-header-row\">Instrument Type</td>\n                    <td className=\"table-header-row\">Source</td>\n                </tr>\n                </thead>\n                <tbody >\n                {portTransData}\n                </tbody>\n            </Table>\n            </div>\n\n        </Card>\n    );\n};\n\nexport default PortfolioTransactions;","import Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst NewPortCashFlow = (props) => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [value, setValue] = useState(0.0);\n    const [type, setType] = useState('INFLOW');\n    const [currency, setCurrency] = useState('USD');\n\n    const valueHandler = (event) => {\n        setValue(event.target.value);\n    };\n\n    const cashTypeHandler = (event) => {\n        setType(event.target.value);\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        console.log('form submited')\n        axios.post(props.server + 'portfolios/new_cash_flow/', {\n            port_name: props.portfolio,\n            amount: value,\n            type: type,\n            currency: currency,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setCurrency('USD');\n        setShow(false);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                Funding\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Funding</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio</Form.Label>\n                            <Form.Control type=\"text\" placeholder={props.portfolio} value={props.portfolio} readOnly />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Cash Flow</Form.Label>\n                            <Form.Control onChange={valueHandler} type=\"number\" placeholder=\"Value\"/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Currency</Form.Label>\n                            <Form.Control onChange={currencyHandler} as=\"select\">\n                                <option value={'USD'}>USD</option>\n                                <option value={'EUR'}>EUR</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Type</Form.Label>\n                            <Form.Control onChange={cashTypeHandler} as=\"select\">\n                                <option value={'INFLOW'}>Inflow</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewPortCashFlow;","import Card from \"react-bootstrap/Card\";\nimport NewPortCashFlow from \"./NewPortCashFlow\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioNav = (props) => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">NAV</Card.Title>\n        </Card>\n    );\n};\n\nexport default PortfolioNav;","import Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../MainCSS.css\"\n\nconst PortfolioDetails = (props) => {\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Portfolio Details</Card.Title>\n            <Card.Body>\n                <Form.Label>Name</Form.Label>\n                <h2>hello</h2>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PortfolioDetails;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioGroup = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Portfolio Group</Card.Title>\n        </Card>\n    );\n};\n\nexport default PortfolioGroup;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioRisk = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Risk</Card.Title>\n\n\n        </Card>\n    );\n};\n\nexport default PortfolioRisk;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioRisk = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Return</Card.Title>\n\n\n        </Card>\n    );\n};\n\nexport default PortfolioRisk;","import {useContext, useEffect, useState} from \"react\";\n\nimport ServerContext from \"../context/server-context\";\nimport EnvContext from \"../context/env-context\";\nimport PortfolioContext from \"../context/portfolio-context\";\nimport axios from \"axios\";\n\nimport NewPortfolioForm from \"./PortfolioPage/NewPortfolioForm\";\nimport PortfolioSettings from \"./PortfolioPage/PortfolioSettings\";\nimport Holdings from \"./PortfolioPage/Holdings\";\nimport PortfolioTransactions from \"./PortfolioPage/PortfolioTransactions\";\nimport PortfolioNav from \"./PortfolioPage/PortfolioNav\";\nimport PortfolioDetails from \"./PortfolioPage/PortfolioDetails\";\nimport PortfolioGroup from \"./PortfolioPage/PortfolioGroup\";\nimport PortfolioRisk from \"./PortfolioPage/PortfolioRisk\";\nimport PortfolioReturn from \"./PortfolioPage/PortfolioReturn\";\n\n// Bootstrap\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport OptionLoader from \"../components/Options\";\n\n// CSS\nimport \"./PortfolioPage.css\"\n\nimport PortfolioBuy from \"./PortfolioPage/PortfolioBuy\";\nimport NewPortCashFlow from \"./PortfolioPage/NewPortCashFlow\";\n\nconst PortfolioPage = (props) => {\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n    const portfolios = useContext(PortfolioContext)['portfolioData'];\n    const [portfolio, setPortfolio] = useState(portfolios[0]['portfolio_code']);\n    const [startDate, setStartDate] = useState([]);\n    const [endDate, setEndDate] = useState([]);\n\n    console.log(portfolios)\n    const portfolioOptions = portfolios.map((record) =>\n        <option key={record['id']} value={record['portfolio_code']}>{record['portfolio_name']}</option>)\n\n    const portSelectHandler = (event) => {\n        setPortfolio(event.target.value);\n    };\n\n    const portSelect = (port) => {\n        setPortfolio(port);\n    };\n\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n\n    const endDateHandler = (event) => {\n        setEndDate(event.target.value);\n    };\n\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row>\n                <Col style={{display: 'flex'}}>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row}>\n                                <Form.Label className=\"form-label-first\" column sm={2}>\n                                    Portfolio\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control onChange={portSelectHandler} as=\"select\">\n                                        {portfolioOptions}\n                                    </Form.Control>\n\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group as={Row}>\n                                <Form.Label className=\"form-label-first\" column sm={2}>\n                                    From\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control type=\"date\" onChange={startDateHandler}/>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group as={Row}>\n                                <Form.Label className=\"form-label-first\" column sm={2}>\n                                    To\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control type=\"date\" onChange={endDateHandler}/>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    <Row>\n                        <Col>\n                            <NewPortfolioForm server={server}/>\n                        </Col>\n                        <Col>\n                            <NewPortCashFlow portfolio={portfolio} server={server}/>\n                        </Col>\n                        <Col>\n                            <PortfolioBuy portfolio={portfolio} server={server}/>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Row style={{height: '300px', padding: '5px'}}>\n                        <Col style={{height: '100%'}}>\n                            <PortfolioDetails portOptions={portfolioOptions} portChange={portSelect}/>\n                        </Col>\n                        <Col>\n                            <PortfolioNav portfolio={portfolio} server={server}/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col>\n                            <PortfolioRisk/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col>\n                            <PortfolioReturn/>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    <Row style={{height: '300px', padding: '5px'}}>\n                        <Col style={{height: '100%'}}>\n                            <PortfolioGroup/>\n                        </Col>\n                        <Col>\n                            <PortfolioSettings/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col>\n                            <Holdings/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col>\n                            <PortfolioTransactions portfolio={portfolio} server={server}/>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default PortfolioPage;","import SliderWidget from \"../../components/SliderWidget\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\nconst TradeTableRow = (props) => {\n\n    const CloseTrade = () => {\n        axios.post(props.server + 'trade_page/close_trade/', {\n            broker_id: props.broker_id,\n            robot: props.robot,\n            trd_id: props.id,\n        })\n            .then(response => alert(response['data']))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <tr>\n            <td style={{fontSize: 12, verticalAlign:\"middle\" }}>{props.id}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\" }}>{props.broker_id}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.security}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.robot}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.quantity}</td>\n            <td><Button onClick={CloseTrade}>Close</Button></td>\n        </tr>\n    );\n};\n\nexport default TradeTableRow;","import {useContext, useEffect, useState} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport TradeTableRow from \"./TradeTableRow\";\n\n\nconst TradeTableData = (props) => {\n\n    const [tradeData, setTradeData] = useState([])\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            fetch(props.server + 'trade_page/get_open_trades/' + props.env)\n                .then(response => response.json())\n                .then(data => setTradeData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const tradeDataRow = tradeData.map((record)=>\n        <TradeTableRow\n            server={props.server}\n            key={record['id']}\n            id={record['id']}\n            broker_id={record['broker_id']}\n            security={record['security']}\n            robot={record['robot']}\n            quantity={record['quantity']}/>)\n\n    return (\n        <Card style={{width: '100%'}}>\n            <Table>\n                <thead style={{fontSize: 12}}>\n                <tr>\n                    <th style={{verticalAlign: \"middle\"}}>Platform ID</th>\n                    <th style={{verticalAlign: \"middle\"}}>Broker ID</th>\n                    <th style={{verticalAlign: \"middle\"}}>Security</th>\n                    <th style={{verticalAlign: \"middle\"}}>Robot</th>\n                    <th style={{verticalAlign: \"middle\"}}>Quantity</th>\n                    <th style={{verticalAlign: \"middle\"}}></th>\n                </tr>\n                </thead>\n\n                <tbody style={{height: '100%', overflow: 'scroll'}}>\n                {tradeDataRow}\n                </tbody>\n            </Table>\n\n        </Card>\n    );\n};\n\nexport default TradeTableData;","import Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport TradeTableData from \"./TradePage/TradeTableData\";\nimport {useContext} from \"react\";\nimport EnvContext from \"../context/env-context\";\nimport ServerContext from \"../context/server-context\";\n\n\nconst TradePage = () => {\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n\n    return (\n        <Container className={'border'} style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row style={{height: '60%', background: 'green'}}>\n\n            </Row>\n            <Row style={{height: '40%', background: 'blue'}}>\n                <TradeTableData env={env} server={server}/>\n            </Row>\n        </Container>\n    );\n};\n\nexport default TradePage;","import {Card} from \"react-bootstrap\";\n\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\n\nconst BalanceCalculation = (props) => {\n    const [loadState, setLoadState] = useState(false);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        setLoadState(true);\n\n        axios.post(props.server + 'robots/calculate_robot_balance/', {\n            process: 'Balance',\n            robot: 'ALL',\n            start_date: props.start_date,\n            end_date: props.end_date,\n        })\n            .then(response => setLoadState(false))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <>\n            <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                <Form.Group>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Calculate\n                    </Button>\n                </Form.Group>\n            </Form>\n            <Modal show={loadState}>\n                <Modal.Body style={{width: '200px', height: '300px'}}>\n                    <h2>Calculating ...</h2>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default BalanceCalculation;","import Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\n\nimport axios from \"axios\";\n\nconst NewBrokerAccount = (props) => {\n\n    const [broker, setBroker] = useState('');\n    const [accountNumber, setAccountNumber] = useState('');\n    const [token, setToken] = useState('');\n    const [env, setEnv] = useState('live');\n    const [currency, setCurrency] = useState('USD');\n\n    const onHide = () => {\n        props.hide();\n    };\n\n    const submitHandler = () => {\n        axios.post(props.server + 'accounts/new_account/', {\n            broker_name: broker,\n            account_number: accountNumber,\n            env: env,\n            token: token,\n            currency: currency,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setBroker('');\n        setAccountNumber('');\n        setToken('');\n        setEnv('live');\n        setCurrency('USD');\n        props.hide();\n    };\n\n    const brokerNameHandler = (event) => {\n        setBroker(event.target.value);\n    };\n\n    const accountNumberHandler = (event) => {\n        setAccountNumber(event.target.value);\n    };\n\n    const tokenHandler = (event) => {\n        setToken(event.target.value);\n    };\n\n    const envHandler = (event) => {\n        setEnv(event.target.value);\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    return (\n        <Modal show={props.show} onHide={onHide} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>New Account</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Group>\n                    <Form.Control onChange={brokerNameHandler} type=\"text\" placeholder=\"Broker Name\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control onChange={accountNumberHandler} type=\"text\" placeholder=\"Account Number\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control onChange={tokenHandler} type=\"text\" placeholder=\"Token\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Environment</Form.Label>\n                    <Form.Control onChange={envHandler} as=\"select\">\n                        <option value={'live'}>Live</option>\n                        <option value={'demo'}>Demo</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Currency</Form.Label>\n                    <Form.Control onChange={currencyHandler} as=\"select\">\n                        <option value={'USD'}>USD</option>\n                        <option value={'EUR'}>EUR</option>\n                    </Form.Control>\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onHide}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={submitHandler}>\n                    Save\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default NewBrokerAccount;","import { Navbar, Nav, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { Link } from 'react-router-dom'\n\nimport {useContext, useState} from \"react\";\n\nimport BalanceCalculation from \"../Pages/Robot/BalanceCalculation\";\n\nimport NewBrokerAccount from \"./NewBrokerAccount\";\nimport ServerContext from \"../context/server-context\";\n\nconst Navigation = (props) => {\n\n    const server = useContext(ServerContext)['server'];\n\n    const [showNewAccount, setShowNewAccount] = useState(false);\n\n    const envChange = (envValue) => {\n        props.onEnvChange(envValue);\n    };\n\n    // New account handlers\n    const newAccountHandler = () => {\n        setShowNewAccount(true);\n    };\n\n    const hideNewAccount = () => {\n        setShowNewAccount(false);\n    };\n\n    return (\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">FFM SYSTEM</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to={'/home'}>Home</Nav.Link>\n                    <Nav.Link as={Link} to={'/portfolio'}>Portfolio</Nav.Link>\n                    <Nav.Link as={Link} to={'/robot'}>Robot</Nav.Link>\n                    <Nav.Link as={Link} to={'/risk'}>Risk</Nav.Link>\n                    <Nav.Link as={Link} to={'/instruments'}>Instrument</Nav.Link>\n                    <Nav.Link as={Link} to={'/trade'}>Trade</Nav.Link>\n                    <NavDropdown title=\"Calculations\">\n                        <NavDropdown.Item>Robot Balance</NavDropdown.Item>\n                        <NavDropdown.Item></NavDropdown.Item>\n                        <NavDropdown.Divider/>\n                        <NavDropdown.Item>Portfolio Holdings</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"Broker Accounts\">\n                        <NavDropdown.Item onSelect={newAccountHandler}>New</NavDropdown.Item>\n                        <NavDropdown.Item>Update</NavDropdown.Item>\n                        <NavDropdown.Item>Delete</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n                <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\n                    <Button variant=\"outline-info\">Search</Button>\n                </Form>\n                <Dropdown onSelect={envChange} style={{marginLeft:'10px'}}>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        {props.env}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item eventKey=\"live\">Live</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"demo\">Demo</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <NewBrokerAccount show={showNewAccount} hide={hideNewAccount} server={server}/>\n            </Navbar>\n\n    );\n};\n\nexport default Navigation;","import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {useEffect, useState, useRef} from \"react\";\nimport axios from \"axios\";\nimport OptionLoader from \"../../components/Options\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst NewRobotForm = (props) => {\n    const [robotName, setRobotName] = useState('');\n    const [strategy, setStrategy] = useState('');\n    const [broker, setBroker] = useState('oanda');\n    const [env, setEnv] = useState('live');\n    const [account, setAccount] = useState('');\n    const [instrument, setInstrument] = useState('');\n\n    console.log(account);\n    console.log(instrument)\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const accountParams = {\n        'broker': broker,\n        'env': env,\n    };\n\n    const instrumentParams = {\n        'broker': broker,\n    };\n\n    const robotNameChangeHandler = (event) => {\n        setRobotName(event.target.value)\n    };\n\n    const robotStrategyHandler = (event) => {\n        setStrategy(event.target.value)\n    };\n\n    const envHandler = (event) => {\n        setEnv(event.target.value);\n    };\n\n    const instHandler = (event) => {\n        setInstrument(event.target.value);\n    };\n\n    const brokerHandler = (event) => {\n        setBroker(event.target.value);\n    };\n\n    const accountHandler = (event) => {\n        setAccount(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        // axios.post(props.server + 'robots/new_robot/', {\n        //     robot_name: robotName,\n        //     strategy: strategy,\n        //     security: instrument,\n        //     broker: broker,\n        //     env: env,\n        //     account: account,\n        // })\n        //         .then(response => console.log(response))\n        //         .catch((error) => {\n        //             console.error('Error Message:', error);\n        //         });\n        // setShow(false)\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                New Robot\n            </Button>\n\n            <Modal show={show} onHide={handleClose} animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Robot</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Robot Name</Form.Label>\n                            <Form.Control onChange={robotNameChangeHandler} type=\"text\" placeholder=\"Robot Name\"/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Strategy</Form.Label>\n                            <Form.Control onChange={robotStrategyHandler} as=\"select\">\n                                <option value={'Initiative'}>Initiative</option>\n                                <option value={'Responsive'}>Responsive</option>\n                                <option value={'Correction'}>Correction</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Broker</Form.Label>\n                            <Form.Control onChange={brokerHandler} as=\"select\">\n                                <option>oanda</option>\n                                <option>Fix</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Environment</Form.Label>\n                            <Form.Control onChange={envHandler} as=\"select\">\n                                <option value={'live'}>Live</option>\n                                <option value={'demo'}>Demo</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Instruments</Form.Label>\n                            <Form.Control onChange={instHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'instruments/get_instruments/'}\n                                    params={instrumentParams}\n                                    code={'instrument_name'}\n                                    value={'instrument_name'}\n                                />\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Account Number</Form.Label>\n                            <Form.Control onChange={accountHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'accounts/get_accounts_data/'}\n                                    params={accountParams}\n                                    code={'account_number'}\n                                    value={'account_number'}\n                                />\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewRobotForm;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\n\nconst RobotTable = (props) => {\n\n    const [robotData, setRobotData] = useState([])\n\n    const OpenUpdateRiskModal = () => {\n        console.log(\"Button Clicked\")\n    };\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robots/' + props.env)\n                .then(response => response['data'].map((data) =>\n                    <tr key={data['id']}>\n                        <td>{data['name']}</td>\n                        <td>{data['strategy']}</td>\n                        <td>{data['security']}</td>\n                        <td>{data['broker']}</td>\n                        <td>{data['env']}</td>\n                        <td>{data['status']}</td>\n                        <td>{data['account_number']}</td>\n                        <td><Button onClick={OpenUpdateRiskModal}>Update</Button></td>\n                    </tr>\n                ))\n                .then(data => setRobotData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Table>\n            <thead>\n            <tr>\n                <td>Name</td>\n                <td>Strategy</td>\n                <td>Security</td>\n                <td>Broker</td>\n                <td>Env</td>\n                <td>Status</td>\n                <td>Account Number</td>\n            </tr>\n            </thead>\n            <tbody>\n            {robotData}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default RobotTable;","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst RobotReturn = (props) => {\n    const [chartData, setChartData] = useState([]);\n\n    console.log(chartData[0])\n    useEffect(() => {\n            axios.get(props.server + 'robots/cumulative_ret/'+props.robot)\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: chartData,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Return</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Chart\n                    options={chartOptions.options}\n                    series={chartOptions.series}\n                    type={'line'}\n                    width=\"100%\"\n                    height=\"100%\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RobotReturn;","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nconst RobotRisk = (props) => {\n\n    const [chartData, setChartData] = useState([]);\n\n    console.log(chartData[0])\n    useEffect(() => {\n            axios.get(props.server + 'robots/drawdown/'+props.robot)\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: chartData,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Risk</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height:'100%'}}>\n                    <Col style={{height:'100%'}}>\n                        <Chart\n                    options={chartOptions.options}\n                    series={chartOptions.series}\n                    type={'bar'}\n                    width=\"100%\"\n                    height=\"100%\"\n                />\n                    </Col>\n                    <Col>\n\n                    </Col>\n                </Row>\n\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RobotRisk;","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\n\nconst RobotDetails = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Details</Card.Title>\n\n        </Card>\n    );\n};\n\nexport default RobotDetails;","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\n\nconst RobotBalance = (props) => {\n\n    const [chartData, setChartData] = useState([]);\n\n    console.log(chartData[chartData.length-1])\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_balance/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date,\n                }\n            })\n                .then(response => response['data'].map(data => data['close_balance']))\n                .then(data => setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false},\n                axisTicks: {\n                    show: false,\n                    borderType: 'solid',\n                    color: '#78909C',\n                    height: 6,\n                    offsetX: 0,\n                    offsetY: 0\n                },\n            },\n            grid: {\n                show: false,\n                borderColor: '#90A4AE',\n                strokeDashArray: 0,\n                position: 'back',\n                xaxis: {\n                    lines: {\n                        show: false\n                    }\n                },\n                yaxis: {\n                    lines: {\n                        show: false\n                    }\n                },\n                row: {\n                    colors: undefined,\n                    opacity: 0.5\n                },\n                column: {\n                    colors: undefined,\n                    opacity: 0.5\n                },\n                padding: {\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0\n                },\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: chartData,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Balance: {chartData[chartData.length - 1]}</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Chart\n                    options={chartOptions.options}\n                    series={chartOptions.series}\n                    type='line'\n                    width=\"100%\"\n                    height=\"100%\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RobotBalance;","import Card from \"react-bootstrap/Card\";\nimport Row from 'react-bootstrap/Row';\nimport Chart from \"react-apexcharts\";\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst RobotCashFlow = (props) => {\n\n    const [chartData, setChartData] = useState([]);\n\n    console.log(chartData[0])\n    useEffect(() => {\n            axios.get(props.server + 'robots/robot_cash_flow/'+props.robot)\n                .then(response => response['data'].map(data=>data['cash_flow']))\n                .then(data=>setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: chartData,\n            }\n        ]\n    };\n\n    // const a = cashFlow.map(data => data['cash_flow']);\n    // console.log(a)\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Cash Flow</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <div style={{padding:'0px'}}>\n                    <Chart\n                    options={chartOptions.options}\n                    series={chartOptions.series}\n                    type={'bar'}\n                    width=\"100%\"\n                    height=\"100%\"\n                />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RobotCashFlow;","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nimport BalanceCalculation from \"./BalanceCalculation\";\n\nconst RobotNav = (props) => {\n    const [robotsData, setRobotsData] = useState(props.robots);\n\n    const robotSelectHandler = (event) => {\n        props.robotChange(event.target.value);\n    };\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robots/' + props.env)\n                .then(response => setRobotsData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const robotsOptions = robotsData.map((record) =>\n        <option key={record['id']} value={record['name']}>{record['name']}</option>);\n\n    return (\n        <>\n            <Form.Group as={Row}>\n                <Form.Label className=\"form-label-first\" column sm={2}>\n                    Robot\n                </Form.Label>\n                <Col sm={10}>\n                    <Form.Control onChange={robotSelectHandler} as=\"select\">\n                        {robotsOptions}\n                    </Form.Control>\n                </Col>\n            </Form.Group>\n        </>\n    );\n};\n\nexport default RobotNav;","import React, {useState, useEffect, useContext} from \"react\";\n\nconst RobotContext = React.createContext();\n\nexport default RobotContext;","import {useState, useEffect, useContext} from \"react\";\n\nimport NewRobotForm from \"./Robot/NewRobotForm\";\nimport RobotTable from \"./Robot/RobotTable\";\nimport BalanceCalculation from \"./Robot/BalanceCalculation\";\nimport RobotReturn from \"./Robot/RobotReturn\";\nimport RobotRisk from \"./Robot/RobotRisk\";\nimport RobotDetails from \"./Robot/RobotDetails\";\nimport RobotBalance from \"./Robot/RobotBalance\";\nimport RobotCashFlow from \"./Robot/RobotCashFlow\";\nimport RobotNav from \"./Robot/RobotNav\";\n\nimport axios from \"axios\";\n\n// Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n// Context\nimport ServerContext from \"../context/server-context\";\nimport EnvContext from \"../context/env-context\";\nimport RobotContext from \"../context/robot-context\";\nimport {Card} from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\n\nconst RobotPage = (props) => {\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n    const defaultRobots = useContext(RobotContext)['robots'];\n\n    const [robot, setRobot] = useState(defaultRobots[0]['name']);\n    const [startDate, setStartDate] = useState([]);\n    const [endDate, setEndDate] = useState([]);\n\n    console.log(robot)\n\n    const changeRobot = (rob) => {\n        setRobot(rob);\n    };\n\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n\n    const endDateHandler = (event) => {\n        setEndDate(event.target.value);\n    };\n\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row style={{height: '60px', padding:'5px'}}>\n                <Col style={{height:'100%'}}>\n                    <RobotNav robots={defaultRobots}\n                          server={server}\n                          env={env}\n                          robotChange={changeRobot}\n                />\n                </Col>\n\n                <Col style={{height:'100%'}}>\n                    <Form.Group as={Row}>\n                        <Form.Label className=\"form-label-first\" column sm={2}>\n                            From\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"date\" onChange={startDateHandler}/>\n                        </Col>\n                    </Form.Group>\n                </Col>\n                <Col style={{height:'100%'}}>\n                    <Form.Group as={Row}>\n                        <Form.Label className=\"form-label-first\" column sm={2}>\n                            To\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"date\" onChange={endDateHandler}/>\n                        </Col>\n                    </Form.Group>\n                </Col>\n                <Col style={{height:'100%'}}>\n                    <Form.Group as={Row}>\n                        <Form.Label className=\"form-label-first\" column sm={2}>\n                            Balance\n                        </Form.Label>\n                        <Col sm={10}>\n                            <BalanceCalculation server={server} robot={robot} start_date={startDate} end_date={endDate}/>\n                        </Col>\n                    </Form.Group>\n                </Col>\n                <Col style={{height:'100%'}}>\n                    <NewRobotForm server={server} style={{height: '400px'}}/>\n                </Col>\n                <Col style={{height:'100%'}}>\n\n                </Col>\n            </Row>\n\n            {/*// General Info*/}\n            <Row style={{height: '200px', padding:'5px'}}>\n                <Col style={{height:'100%'}}>\n                    <RobotDetails server={server} env={env}/>\n                </Col>\n                <Col style={{height:'100%'}}>\n                    <RobotBalance robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                </Col>\n                <Col style={{height:'100%'}}>\n                    <RobotCashFlow robot={robot} server={server}/>\n                </Col>\n                <Col>\n\n                </Col>\n            </Row>\n\n            {/*// Risk and Return*/}\n            <Row style={{height:'500px', padding:'5px'}}>\n                <Col style={{height:'100%', width:'50%'}}>\n                    <RobotReturn robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                </Col>\n                <Col style={{height:'100%', width:'50%'}}>\n                    <RobotRisk robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                </Col>\n            </Row>\n            <Row style={{height:'500px', padding:'5px'}}>\n                <Col>\n                    <Card>\n                        <Card.Header as=\"h5\">\n\n                        </Card.Header>\n                        <RobotTable server={server} env={env}/>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default RobotPage;","const InstrumentPage = () => {\n    return (\n        <div>\n            <h2>Instrument Page</h2>\n        </div>\n    );\n};\n\nexport default InstrumentPage;","import './App.css';\nimport {useContext, useEffect, useState} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport RiskPage from \"./Pages/RiskPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport PortfolioPage from \"./Pages/PortfolioPage\";\nimport TradePage from \"./Pages/TradePage\";\nimport Navigation from \"./components/NavBar\";\nimport RobotPage from \"./Pages/RobotPage\";\nimport InstrumentPage from \"./Pages/InstrumentPage\";\n\n// Contexts\nimport ServerContext from \"./context/server-context\";\nimport EnvContext from \"./context/env-context\";\nimport PortfolioContext from \"./context/portfolio-context\";\nimport RobotContext from \"./context/robot-context\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction App() {\n    // 'http://127.0.0.1:8000/' 'https://pavliati.pythonanywhere.com/'\n    const [robotEnvData, setRobotEnvData] = useState('live');\n    const [portfolioData, setPortfolioData] = useState([]);\n    const [robotsData, setRobotsData] = useState([]);\n\n    const server = 'https://pavliati.pythonanywhere.com/'\n\n    const getEnvData = (env) => {\n        setRobotEnvData(env);\n    };\n\n    useEffect(() => {\n            axios.get(server + 'portfolios/get_portfolio_data/')\n                .then(response => setPortfolioData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, []\n    );\n\n    useEffect(() => {\n            axios.get(server + 'robots/get_robots/' + robotEnvData)\n                .then(response => setRobotsData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, []\n    );\n\n    return (\n        <ServerContext.Provider value={{server: server}}>\n            <EnvContext.Provider value={{environment: robotEnvData}}>\n                <RobotContext.Provider value={{robots: robotsData}}>\n                    <PortfolioContext.Provider value={{portfolioData}}>\n                    <div className=\"App\">\n\n                        <Navigation onEnvChange={getEnvData} env={robotEnvData}/>\n                        <Switch>\n                            <Route path=\"/risk\">\n                                <RiskPage/>\n                            </Route>\n                            <Route path=\"/home\">\n                                <HomePage/>\n                            </Route>\n                            <Route path=\"/trade\">\n                                <TradePage/>\n                            </Route>\n                            <Route path=\"/portfolio\">\n                                <PortfolioPage/>\n                            </Route>\n                            <Route path=\"/instruments\">\n                                <InstrumentPage/>\n                            </Route>\n                            <Route path=\"/robot\">\n                                <RobotPage/>\n                            </Route>\n                        </Switch>\n\n                    </div>\n                </PortfolioContext.Provider>\n                </RobotContext.Provider>\n            </EnvContext.Provider>\n        </ServerContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}