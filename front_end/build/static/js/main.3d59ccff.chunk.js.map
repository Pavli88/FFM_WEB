{"version":3,"sources":["context/env-context.js","components/SliderWidget.js","Pages/RiskPage/RiskTableRow.js","Pages/RiskPage/RiskTableData.js","context/server-context.js","Pages/RiskPage.js","Pages/HomePage/PerfDashBoard.js","components/Charts.js","Pages/HomePage/RobotStatCards.js","context/robot-context.js","Pages/HomePage/RobotExecution.js","Pages/HomePage.js","context/portfolio-context.js","Pages/PortfolioPage/NewPortfolioForm.js","Pages/PortfolioPage/PortfolioSettings.js","Pages/PortfolioPage/Holdings.js","components/Options.js","Pages/Robot/GetRobotPrice.js","Pages/PortfolioPage/PortfolioBuy.js","Pages/PortfolioPage/PortfolioTransactions.js","Pages/PortfolioPage/NewPortCashFlow.js","Pages/PortfolioPage/PortfolioNav.js","Pages/PortfolioPage/PortfolioDetails.js","Pages/PortfolioPage/PortfolioGroup.js","Pages/PortfolioPage/PortfolioRisk.js","Pages/PortfolioPage/PortfolioReturn.js","Pages/PortfolioPage/PortfolioCashFlow.js","Pages/PortfolioPage/CashHolding.js","Pages/PortfolioPage/PositionCalculation.js","Pages/PortfolioPage/CashHoldingCalc.js","Pages/PortfolioPage.js","Pages/TradePage/TradeTableRow.js","Pages/TradePage/TradeTableData.js","Pages/TradePage.js","Pages/Robot/BalanceCalculation.js","components/NewBrokerAccount.js","components/NavBar.js","Pages/Robot/NewRobotForm.js","Pages/Robot/Charts/CumulativeReturn.js","Pages/Robot/RobotReturn.js","Pages/Robot/RobotRisk.js","Pages/Robot/RobotDetails.js","Pages/Robot/Charts/BalanceChart.js","Pages/Robot/Charts/DailyPnlChart.js","Pages/Robot/RobotCashFlow.js","Pages/Robot/RobotBalance.js","Pages/Robot/RobotNav.js","Pages/Robot/RobotTrades.js","Pages/Robot/RobotPricing.js","Pages/Robot/RobotProcesses.js","Pages/RobotPage.js","Pages/InstrumentPage.js","App.js","reportWebVitals.js","index.js"],"names":["EnvContext","React","createContext","environment","SliderWidget","props","useState","defaultValue","value","setValue","Form","Group","style","margin","Row","Col","Label","verticalAlign","Control","onChange","event","target","type","min","max","step","RiskTableRow","robot","dailyRisk","setDailyRisk","tradeLimit","setTradeLimit","riskOnTrade","setRiskOnTrade","pLevel","qType","setQType","quantity","setQuantity","console","log","className","as","placeholder","Button","onClick","axios","post","server","daily_risk","nbm_trades","risk_per_trade","pyramiding_level","quantity_type","then","response","alert","catch","error","RiskTableData","env","useContext","riskData","setRiskData","useEffect","fetch","json","data","riskDataRow","map","Table","fontSize","ServerContext","RiskPage","Container","background","width","height","window","innerHeight","padding","fluid","Card","Title","PerformanceDashboard","perfData","setPerfData","get","perfRespData","record","borderRadius","Body","size","ApexChart","state","options","chart","toolbar","id","xaxis","categories","xdata","labels","show","yaxis","formatter","val","toFixed","dataLabels","enabled","series","name","ydata","chartType","RobotStatCards","balanceRequestData","robotBalanceData","setRobotBalanceData","params","robotRiskData","setRobotRiskData","widgetData","balance","risk","chartData","index","marginTop","marginBottom","marginRight","Header","overflow","RobotContext","RobotExecution","robots","setRobots","runRobot","process","task_name","arguments","stopRobot","robotData","HomePage","textAlign","PortfolioContext","NewPortfolioForm","portfolioName","setPortfolioName","portfolioCode","setPortfolioCode","portType","setPortType","currency","setCurrency","setShow","handleClose","submitHandler","preventDefault","port_name","port_type","port_currency","port_code","variant","Modal","onHide","closeButton","onSubmit","required","Footer","PortfolioSettings","Holdings","sm","OptionLoader","rawData","setRawData","url","code","GetRobotLastPrice","price","setPrice","date","setDate","getPrice","Math","round","PortfolioBuy","securityId","setSecurity","securityName","setSecurityName","unit","setUnit","robotPrice","setRobotPrice","robotQuantity","setRobotQuantity","instrumentParams","portfolio","sec","sec_type","sec_id","readOnly","selectIndex","nativeEvent","selectedIndex","text","document","getElementById","GetRobotPrice","PortfolioTransactions","portTransData","setPortTransData","overflowY","overflowX","NewPortCashFlow","setType","amount","PortfolioNav","PortfolioDetails","default","portData","setPortData","display","position","right","PortfolioGroup","PortfolioRisk","PortfolioCashFlow","dataSeries","setDataSeries","chartOptions","start_date","end_date","CashHoldings","setChartData","responsive","breakpoint","legend","chartOptions2","PositionCalculation","loadState","setLoadState","CashHoldingCalculation","PortfolioPage","Date","firstDay","getFullYear","getMonth","defaultRobots","portfolios","setPortfolio","toISOString","substr","startDate","setStartDate","endDate","setEndDate","portfolioOptions","column","CashHoldingCalc","PortfolioReturn","CashHolding","TradeTableRow","broker_id","security","trd_id","TradeTableData","tradeData","setTradeData","tradeDataRow","TradePage","BalanceCalculation","NewBrokerAccount","broker","setBroker","accountNumber","setAccountNumber","token","setToken","setEnv","hide","animation","broker_name","account_number","Navigation","showNewAccount","setShowNewAccount","Navbar","bg","Brand","href","Nav","Link","to","NavDropdown","title","Item","Divider","onSelect","inline","FormControl","Dropdown","envValue","onEnvChange","marginLeft","Toggle","Menu","eventKey","NewRobotForm","robotName","setRobotName","strategy","setStrategy","account","setAccount","instrument","setInstrument","accountParams","robot_name","maxLength","CumulativeReturnChart","axisBorder","color","offsetX","offsetY","axisTicks","borderType","align","floating","fontWeight","RobotReturn","CumulativeReturn","RobotRisk","RobotDetails","setRobotData","priceData","setPriceData","BalanceChart","grid","borderColor","strokeDashArray","lines","row","colors","undefined","opacity","top","bottom","left","DailyPnlChart","RobotCashFlow","RobotBalance","balanceData","setBalanceData","cashflowData","setCashFlowData","pnlData","setPnlData","dateData","setDateData","balance_list","cf_list","pnl_list","date_list","balanceChartTitle","length","xs","md","paddingLeft","paddingRight","RobotNav","robotsData","setRobotsData","robotsOptions","robotChange","RobotTrades","losingTradeNumber","winningTradeNumber","losingTrades","winningTrades","totalWinner","totalLoser","push","i","winPerc","lossPerc","avgWinner","avgLoser","abs","RobotPricing","RobotProcesses","RobotPage","setRobot","rob","Check","label","InstrumentPage","App","robotEnvData","setRobotEnvData","portfolioData","setPortfolioData","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3d59ccff.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EnvContext = React.createContext({\n    environment: 'live'\n});\n\nexport default EnvContext;","import {useState} from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst SliderWidget = (props) => {\n\n    const [value, setValue] = useState(props.defaultValue);\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    return (\n\n        <Form>\n            <Form.Group style={{margin: '0px'}}>\n                <Row>\n                    <Col>\n                        <Form.Label style={{verticalAlign:\"middle\"}}>{value}</Form.Label>\n                    </Col>\n                    <Col>\n                        <Form.Control onChange={handleChange} type=\"range\" min={props.min} max={props.max} step={props.step}\n                              value={value}/>\n                    </Col>\n                </Row>\n            </Form.Group>\n        </Form>\n\n    );\n};\n\nexport default SliderWidget;","import {useState} from \"react\";\nimport SliderWidget from \"../../components/SliderWidget\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\n\n// CSS\nimport \"../MainCSS.css\"\nimport Form from \"react-bootstrap/Form\";\n\nconst RiskTableRow = (props) => {\n\n    const [robot, setRobot] = useState(props.robot);\n    const [dailyRisk, setDailyRisk] = useState(props.dailyRisk);\n    const [tradeLimit, setTradeLimit] = useState(props.tradeLimit);\n    const [riskOnTrade, setRiskOnTrade] = useState(props.riskOnTrade);\n    const [pLevel, setPLevel] = useState(props.pLevel);\n    const [qType, setQType] = useState(props.qType);\n    const [quantity, setQuantity] = useState(props.quantity);\n\n    const UpdateRisk = () => {\n        axios.post(props.server + 'risk/update_robot_risk/', {\n            robot: robot,\n            daily_risk: dailyRisk,\n            nbm_trades: tradeLimit,\n            risk_per_trade: riskOnTrade,\n            pyramiding_level: pLevel,\n            quantity_type: qType,\n            quantity: quantity\n        })\n            .then(response => alert('Risk is updated for ' + robot))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n        console.log(robot)\n        console.log(tradeLimit)\n        console.log(riskOnTrade)\n    };\n\n    const tradeLimitHandler = (event) => {\n        setTradeLimit(event.target.value)\n    };\n\n    const tradeRiskHandler = (event) => {\n        setRiskOnTrade(event.target.value)\n    };\n\n    const dailyRiskHandler = (event) => {\n        setDailyRisk(event.target.value)\n    };\n\n    const quantityTypeHandler = (event) => {\n        setQType(event.target.value)\n    };\n\n    const quantityHandler = (event) => {\n        setQuantity(event.target.value)\n    };\n\n    console.log(qType, robot)\n\n    return (\n        <tr>\n            <td style={{verticalAlign: \"middle\"}}>{robot}</td>\n            <td style={{verticalAlign: \"middle\"}} onChange={dailyRiskHandler}><SliderWidget defaultValue={dailyRisk}\n                              min={0.00}\n                              max={0.20}\n                              step={0.005}/></td>\n            <td style={{verticalAlign: \"middle\"}} className=\"table-row\" onChange={tradeLimitHandler}><SliderWidget defaultValue={tradeLimit}\n                              min={0}\n                              max={20}\n                              step={1}/></td>\n            <td style={{verticalAlign: \"middle\"}} className=\"table-row\" onChange={tradeRiskHandler}><SliderWidget defaultValue={riskOnTrade}\n                              min={0.00}\n                              max={0.1}\n                              step={0.0025}/></td>\n            <td style={{verticalAlign: \"middle\"}}>\n                <Form.Control onChange={quantityTypeHandler} defaultValue={qType} as=\"select\">\n                    <option value={'Stop Based'}>Stop Based</option>\n                    <option value={'Fix'}>Fix</option>\n                </Form.Control>\n            </td>\n            <td style={{verticalAlign: \"middle\"}}>\n                <Form.Control onChange={quantityHandler} type=\"number\" placeholder={quantity}/>\n            </td>\n            <td style={{verticalAlign: \"middle\"}}><Button onClick={UpdateRisk}>Update</Button></td>\n        </tr>\n    );\n};\n\nexport default RiskTableRow;","import {useContext, useEffect, useState} from \"react\";\nimport EnvContext from \"../../context/env-context\";\nimport RiskTableRow from \"./RiskTableRow\";\n\n// Bootstrap\nimport Table from \"react-bootstrap/Table\";\n\n// CSS\nimport \"../MainCSS.css\"\n\nconst RiskTableData = (props) => {\n\n    const env = useContext(EnvContext)['environment'];\n\n    const [riskData, setRiskData] = useState([])\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            fetch(props.server + 'risk/get_robot_risk/' + env)\n                .then(response => response.json())\n                .then(data => setRiskData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const riskDataRow = riskData.map((data) =>\n        <RiskTableRow key={data['id']}\n                      robot={data['robot']}\n                      dailyRisk={data['daily_risk']}\n                      tradeLimit={data['daily_trade_limit']}\n                      riskOnTrade={data['risk_per_trade']}\n                      pLevel={data['pyramiding_level']}\n                      qType={data['quantity_type']}\n                      quantity={data['quantity']}\n                      server={props.server}/>\n    );\n\n    return (\n        <Table>\n            <thead style={{fontSize: 12}}>\n            <tr>\n                <th style={{verticalAlign: \"middle\"}}>Robot</th>\n                <th style={{verticalAlign: \"middle\"}}>Daily Loss Limit %</th>\n                <th style={{verticalAlign: \"middle\"}}>Max Number of Trades (Daily)</th>\n                <th style={{verticalAlign: \"middle\"}}>Risk per Trade %</th>\n                <th style={{verticalAlign: \"middle\"}}>Quantity Type</th>\n                <th style={{verticalAlign: \"middle\"}}>Quantity</th>\n                <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            {riskDataRow}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default RiskTableData;","import React from \"react\";\n\nconst ServerContext = React.createContext();\n\nexport default ServerContext;","import {useState, useEffect, useContext} from \"react\";\n\n// Bootstrap\nimport Button from \"react-bootstrap/Button\";\nimport Container from 'react-bootstrap/Container'\nimport Form from \"react-bootstrap/Form\";\nimport Table from 'react-bootstrap/Table'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport RiskTableData from \"./RiskPage/RiskTableData\";\nimport ServerContext from \"../context/server-context\";\n\n// CSS\nimport \"./MainCSS.css\"\n\nconst RiskPage = () => {\n\n    const server = useContext(ServerContext)['server'];\n\n    return (\n        <Container className={\"border\"} style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row>\n                <Col>\n                    <Container className={\"border\"} style={{height: '100%'}}>\n\n                    </Container>\n                </Col>\n                <Col>\n                    <Container>\n                        <Card className=\"card\">\n                            <Card.Title className=\"card-header-first\"> Robot Risk Parameters</Card.Title>\n                            <RiskTableData server={server}/>\n                        </Card>\n                    </Container>\n\n                </Col>\n            </Row>\n\n        </Container>\n    );\n};\n\nexport default RiskPage;","import Card from 'react-bootstrap/Card';\nimport Table from \"react-bootstrap/Table\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport './PerfDashBoard.css'\n\nconst PerformanceDashboard = (props) => {\n\n    // Fetching Robot balance data\n    const [perfData, setPerfData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'home/load_robot_stats/' + props.env)\n                .then(response => response['data'])\n                .then(data => setPerfData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const perfRespData = perfData.map((record) =>\n    <tr key={record['robot']['id']}>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-robot-name\">{record['robot']['name']}</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['balance']}</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['dtd_ret']} %</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['mtd_ret']} %</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['ytd_ret']} %</td>\n    </tr>);\n\n\n\n    return (\n        <Card className={'shadow-sm'} style={{borderRadius:'0px'}}>\n            <Card.Body style={{padding: '0px'}}>\n                <Table size=\"sm\">\n                    <thead>\n                    <tr>\n                        <th className=\"table-row-robot-name\">Robot</th>\n                        <th>Balance</th>\n                        <th>DTD</th>\n                        <th>MTD</th>\n                        <th>YTD</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {perfRespData}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n\n};\n\nexport default PerformanceDashboard;","import Chart from \"react-apexcharts\";\n\nconst ApexChart = (props) => {\n    const state = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: props.xdata,\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.ydata\n            }\n        ]\n    };\n\n    return (\n            <Chart\n                options={state.options}\n                series={state.series}\n                type={props.chartType}\n                width=\"100%\"\n                height=\"80%\"\n            />\n        );\n}\n\nexport default ApexChart;\n","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport ApexChart from \"../../components/Charts\";\n\n\nconst RobotStatCards = (props) => {\n\n    const balanceRequestData = {\n        'env': props.env,\n        'start_date': 21,\n        'end_date': 34,\n    };\n\n    // Fetching Robot balance data\n    const [robotBalanceData, setRobotBalanceData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robot_balance/' + props.env, {params:balanceRequestData})\n                .then(response => response['data'])\n                .then(data => setRobotBalanceData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    // Fetching robot risk data\n    const [robotRiskData, setRobotRiskData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'risk/get_robot_risk/' + props.env)\n                .then(response => response['data'])\n                .then(data => setRobotRiskData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const widgetData = {\n        balance: robotBalanceData,\n        risk: robotRiskData,\n    };\n    console.log(widgetData)\n\n    const chartOptions ={\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: props.xdata,\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.ydata\n            }\n        ]\n    };\n\n    const chartData = robotBalanceData.map((record, index) =>\n\n        <Card className={'shadow-sm'} key={record['robot']} style={{marginTop: '5px', marginBottom: '5px', marginRight: '5px', height: '300px'}}>\n            <Card.Header as=\"h6\">{record['robot']}</Card.Header>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%', width: '100%', margin: '0px'}}>\n                    <Col style={{padding: '0px'}}>\n                        <ApexChart chartType=\"line\" xdata={record['date']} ydata={record['balance']}/>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n\n    return (\n        <Container className={\"border\"} style={{padding: '0px', overflow: 'scroll', height:'800px'}}>\n            {chartData}\n        </Container>\n    );\n};\n\nexport default RobotStatCards;\n","import React, {useState, useEffect, useContext} from \"react\";\n\nconst RobotContext = React.createContext();\n\nexport default RobotContext;","import {useContext, useEffect, useState} from \"react\";\n\nimport RobotContext from \"../../context/robot-context\";\nimport Table from \"react-bootstrap/Table\";\n\n// CSS\nimport \"../MainCSS.css\"\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\nconst RobotExecution = (props) => {\n    console.log(\"ROBOT EXECUTION\")\n\n    const [robots, setRobots] = useState([]);\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            fetch(props.server + 'robots/get_robots/' + props.env)\n                .then(response => response.json())\n                .then(data => setRobots(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const runRobot = (event) => {\n        console.log(event.target.value)\n        axios.post(props.server + 'new_task/', {\n            process: \"robots.processes.run_robot.run_robot\",\n            task_name: \"front end test task\",\n            arguments: [\"step_trade\"],\n        })\n            .then(function (response) {\n                // if (response['data'] == 'New Portfolio was created!') {\n                //     // window.location.reload();\n                // } else {\n                //     alert(response['data']);\n                // }\n                console.log(response)\n                alert(response['data']['response']);\n            })\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    const stopRobot = (event) => {\n        axios.post(props.server + 'robots/update_robot/', {\n\n                'name': 'step_trade',\n                'status': 'inactive'\n\n        })\n            .then(function (response) {\n                // if (response['data'] == 'New Portfolio was created!') {\n                //     // window.location.reload();\n                // } else {\n                //     alert(response['data']);\n                // }\n                console.log(response)\n                alert(response['data']['response']);\n            })\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    const robotData = robots.map((value)=>\n\n                    <tr>\n                        <td>\n                            {value['name']}\n                        </td>\n                        <td>\n                            {value['status']}\n                        </td>\n                        <td>\n                            OPTION\n                        </td>\n                        <td>\n                            <Button onClick={runRobot}>{value['status']}</Button>\n                        </td>\n                        <td>\n                            <Button onClick={stopRobot}>Stop</Button>\n                        </td>\n                    </tr>);\n    console.log(robotData)\n    return (\n\n        <Table>\n            <thead style={{fontSize: 12}}>\n            <tr>\n                <th style={{verticalAlign: \"middle\"}}>Robot</th>\n                <th style={{verticalAlign: \"middle\"}}>Status</th>\n                <th style={{verticalAlign: \"middle\"}}>Options</th>\n                <th style={{verticalAlign: \"middle\"}}></th>\n                <th style={{verticalAlign: \"middle\"}}></th>\n            </tr>\n            </thead>\n            <tbody>\n            {robotData}\n            </tbody>\n        </Table>\n\n    );\n\n};\n\nexport default RobotExecution;","import Container from \"react-bootstrap/Container\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Card from 'react-bootstrap/Card';\n\nimport PerfDashBoard from \"./HomePage/PerfDashBoard\";\nimport {useContext} from \"react\";\n\nimport RobotStatCards from \"./HomePage/RobotStatCards\";\nimport RobotExecution from \"./HomePage/RobotExecution\";\n\n//CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './HomePage.css';\n\n\n// Contexts\nimport EnvContext from \"../context/env-context\";\nimport ServerContext from \"../context/server-context\";\nimport {yellow} from \"@material-ui/core/colors\";\n\nconst HomePage = (props) => {\n    // Context variables\n    const env = useContext(EnvContext)['environment'];\n    const server = useContext(ServerContext)['server'];\n\n    const balanceRequestData = {\n        'env': 'live',\n        'start_date': 21,\n        'end_date': 34,\n    };\n\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight}} fluid>\n            <Row style={{height: window.innerHeight}}>\n                <Col style={{height: '100%'}}>\n                    <Container>\n                        <Row style={{margin: '5px'}}>\n                            <h5 style={{textAlign: \"center\", width: '100%', margin: '0px'}}>Robots</h5>\n                        </Row>\n                        <RobotStatCards env={env} server={server}/>\n                    </Container>\n                </Col>\n                <Col style={{height: '100%'}}>\n                        <Row style={{margin: '5px'}}>\n                            <h5 style={{textAlign: \"center\", width: '100%', margin: '0px'}}>Performance</h5>\n                        </Row>\n                        <PerfDashBoard server={server} env={env}/>\n                        <RobotExecution server={server} env={env}/>\n                </Col>\n            </Row>\n            <Row>\n\n            </Row>\n        </Container>\n    );\n};\n\nexport default HomePage;","import React, {useState, useEffect, useContext} from \"react\";\n\nconst PortfolioContext = React.createContext();\n\nexport default PortfolioContext;","// Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nconst NewPortfolioForm = (props) => {\n\n    const [portfolioName, setPortfolioName] = useState('');\n    const [portfolioCode, setPortfolioCode] = useState('');\n    const [portType, setPortType] = useState('Trade');\n    const [currency, setCurrency] = useState('USD');\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const portfolioNameChangeHandler = (event) => {\n        setPortfolioName(event.target.value)\n    };\n\n    const portfolioCodeChangeHandler = (event) => {\n        setPortfolioCode(event.target.value);\n    };\n\n    const portTypeHandler = (event) => {\n        setPortType(event.target.value)\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    console.log(portfolioName, portType, currency)\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        axios.post(props.server + 'portfolios/new/', {\n            port_name: portfolioName,\n            port_type: portType,\n            port_currency: currency,\n            port_code: portfolioCode,\n        })\n            .then(function (response) {\n                if (response['data'] == 'New Portfolio was created!') {\n                    // window.location.reload();\n                } else {\n                    alert(response['data']);\n                }\n            })\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n        setShow(false);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                New Portfolio\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Portfolio</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio Name</Form.Label>\n                            <Form.Control onChange={portfolioNameChangeHandler} type=\"text\" placeholder=\"Portfolio Name\" required/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Code</Form.Label>\n                            <Form.Control onChange={portfolioCodeChangeHandler} type=\"text\" placeholder=\"Portfolio Code\" required/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Type</Form.Label>\n                            <Form.Control onChange={portTypeHandler} as=\"select\">\n                                <option value={'Trade'}>Trade</option>\n                                <option value={'Savings'}>Savings</option>\n                                <option value={'Investment'}>Investment</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Currency</Form.Label>\n                            <Form.Control onChange={currencyHandler} as=\"select\">\n                                <option value={'USD'}>USD</option>\n                                <option value={'HUF'}>HUF</option>\n                                <option value={'EUR'}>EUR</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewPortfolioForm;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioSettings = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Settings</Card.Title>\n            <h2>Price source</h2>\n\n        </Card>\n    );\n};\n\nexport default PortfolioSettings;","import Card from \"react-bootstrap/Card\";\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n// CSS\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst Holdings = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Holdings</Card.Title>\n            <Row style={{height: '100%'}}>\n                <Col sm={8}>\n                    <Container className=\"border\" style={{width:'100%', height: '100%', padding:'5px'}} fluid>\n\n                    </Container>\n                </Col>\n                <Col sm={4}>\n                    <Container className=\"border\" style={{width:'100%', height: '100%', padding:'5px'}} fluid>\n\n                    </Container>\n                </Col>\n            </Row>\n        </Card>\n    );\n};\n\nexport default Holdings;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst OptionLoader = (props) => {\n\n    const [rawData, setRawData] = useState('');\n\n    useEffect(() => {\n            axios.get(props.url, {params: props.params})\n                .then(response => response['data'].map((record) =>\n                    <option key={record['id']} value={record[props.code]}>{record[props.value]}</option>))\n                .then(data => setRawData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        rawData\n    );\n};\n\nexport default OptionLoader;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\n\nconst GetRobotLastPrice = (props) => {\n\n    const [price, setPrice] = useState(0.0);\n    const [date, setDate] = useState();\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_last_price/', {\n                params: {\n                    robot: props.robot,\n                    // start_date: props.start_date,\n                    // end_date: props.end_date,\n                }\n            })\n                .then(function(response){\n                    setPrice(response['data']['price']);\n                    setDate(response['data']['date']);\n                    props.getPrice(price);\n                })\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Form.Group>\n            <Form.Label>Price - {date}</Form.Label>\n            <h2>{Math.round((price) * 100) / 100}</h2>\n        </Form.Group>\n    );\n};\n\nexport default GetRobotLastPrice;\n","import Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport {useEffect, useState} from \"react\";\n\nimport OptionLoader from \"../../components/Options\";\nimport GetRobotPrice from \"../Robot/GetRobotPrice\";\n\nimport axios from \"axios\";\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nconst PortfolioBuy = (props) => {\n\n    const [show, setShow] = useState(false);\n    const [securityId, setSecurity] = useState('');\n    const [securityName, setSecurityName] = useState('');\n    const [unit, setUnit] = useState(0.0);\n    const [robotPrice, setRobotPrice] = useState(0.0);\n    const [robotQuantity, setRobotQuantity] = useState(0.0);\n\n    const instrumentParams = {\n        'env': props.env,\n    };\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const securityHandler = (event) => {\n        const selectIndex = event.nativeEvent.target.selectedIndex;\n\n        setSecurity(event.target.value);\n        setSecurityName(event.nativeEvent.target[selectIndex].text);\n        document.getElementById('unitInput').value = 0;\n        setRobotQuantity(0);\n        setUnit(0);\n    };\n\n    const unitHandler = (event) => {\n        setRobotQuantity(unit/robotPrice);\n        setUnit(event.target.value);\n\n    };\n\n    const getRobotPrice = (price) => {\n        setRobotPrice(price);\n        setRobotQuantity(unit/robotPrice);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        if (robotQuantity===0.0){\n            alert('Quantity can not be 0 !')\n        }else{\n            axios.post(props.server + 'portfolios/portfolio_trade/', {\n            portfolio: props.portfolio,\n            unit: robotQuantity,\n            price: robotPrice,\n            sec: securityName,\n            sec_type: 'Robot',\n            sec_id: securityId,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setShow(false);\n        };\n    };\n\n    return (\n        <>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                Buy Robot\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Buy Robot</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio</Form.Label>\n                            <Form.Control type=\"text\" placeholder={props.portfolio} value={props.portfolio} readOnly/>\n                        </Form.Group>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Robot</Form.Label>\n                                    <Form.Control onChange={securityHandler} as=\"select\">\n                                        <option></option>\n                                        <OptionLoader\n                                            url={props.server + 'robots/get_robots_with_instrument/'}\n                                            params={instrumentParams}\n                                            code={1}\n                                            value={2}/>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <GetRobotPrice server={props.server} robot={securityName} getPrice={getRobotPrice}/>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Unit to invest</Form.Label>\n                                    <Form.Control onChange={unitHandler} type=\"number\" min={0.0}\n                                                  defaultValue={0} id={'unitInput'}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Label>Portfolio Quantity</Form.Label>\n                                <h2>{Math.round(robotQuantity*100)/100}</h2>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default PortfolioBuy;","import Card from \"react-bootstrap/Card\";\n\nimport PortfolioBuy from \"./PortfolioBuy\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioTransactions = (props) => {\n\n    const [portTransData, setPortTransData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_portfolio_transactions/' + props.portfolio)\n                .then(response => response['data'].map((data) =>\n                    <tr key={data[0]}>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[1]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[2]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[3]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[4]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[5]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[6]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[7]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[8]}</td>\n                    </tr>\n                ))\n                .then(data => setPortTransData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Transactions</Card.Title>\n            <Row style={{width:'100%', margin:'0px'}}>\n\n            </Row>\n\n            <div style={{height:'100%',overflowY: 'scroll', overflowX: 'hidden'}}>\n                <Table>\n                <thead className=\"table-header-first\">\n                <tr>\n                    <td className=\"table-header-row\">Portfolio</td>\n                    <td className=\"table-header-row\">Quantity</td>\n                    <td className=\"table-header-row\">Price</td>\n                    <td className=\"table-header-row\">Market Value</td>\n                    <td className=\"table-header-row\">Trade Date</td>\n                    <td className=\"table-header-row\">Instrument</td>\n                    <td className=\"table-header-row\">Instrument Type</td>\n                    <td className=\"table-header-row\">Source</td>\n                </tr>\n                </thead>\n                <tbody >\n                {portTransData}\n                </tbody>\n            </Table>\n            </div>\n\n        </Card>\n    );\n};\n\nexport default PortfolioTransactions;","import Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst NewPortCashFlow = (props) => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [value, setValue] = useState(0.0);\n    const [type, setType] = useState('INFLOW');\n    const [currency, setCurrency] = useState('USD');\n\n    const valueHandler = (event) => {\n        setValue(event.target.value);\n    };\n\n    const cashTypeHandler = (event) => {\n        setType(event.target.value);\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        console.log('form submited')\n        axios.post(props.server + 'portfolios/new_cash_flow/', {\n            port_name: props.portfolio,\n            amount: value,\n            type: type,\n            currency: currency,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setCurrency('USD');\n        setShow(false);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                Funding\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Funding</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio</Form.Label>\n                            <Form.Control type=\"text\" placeholder={props.portfolio} value={props.portfolio} readOnly />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Cash Flow</Form.Label>\n                            <Form.Control onChange={valueHandler} type=\"number\" placeholder=\"Value\"/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Currency</Form.Label>\n                            <Form.Control onChange={currencyHandler} as=\"select\">\n                                <option value={'USD'}>USD</option>\n                                <option value={'EUR'}>EUR</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Type</Form.Label>\n                            <Form.Control onChange={cashTypeHandler} as=\"select\">\n                                <option value={'INFLOW'}>Inflow</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewPortCashFlow;","import Card from \"react-bootstrap/Card\";\nimport NewPortCashFlow from \"./NewPortCashFlow\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioNav = (props) => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">NAV</Card.Title>\n        </Card>\n    );\n};\n\nexport default PortfolioNav;","import Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst PortfolioDetails = (props) => {\n\n    const [portData, setPortData] = useState([props.default]);\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_portfolio_data/'+ props.portfolio)\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setPortData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Portfolio Details</Card.Title>\n            <Card.Body>\n                <Row>\n                    <Col>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Portfolio Code</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['portfolio_code']}</p>\n                        </div>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Type</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['portfolio_type']}</p>\n                        </div>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Currency</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['currency']}</p>\n                        </div>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Inception Date</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['inception_date']}</p>\n                        </div>\n                        <div style={{display: 'flex', width: '100%'}}>\n                        <p>Status</p>\n                        <p style={{position: 'absolute', right: '20px'}}>{portData[0]['status']}</p>\n                    </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PortfolioDetails;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioGroup = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Portfolio Group</Card.Title>\n        </Card>\n    );\n};\n\nexport default PortfolioGroup;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioRisk = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Risk</Card.Title>\n\n\n        </Card>\n    );\n};\n\nexport default PortfolioRisk;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioRisk = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Return</Card.Title>\n\n\n        </Card>\n    );\n};\n\nexport default PortfolioRisk;","import Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../MainCSS.css\"\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst PortfolioCashFlow = (props) => {\n\n    const [dataSeries, setDataSeries] = useState([]);\n\n    let chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: true}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: dataSeries,\n            }\n        ]\n    };\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_cash_flow/', {\n                params: {\n                    portfolio: props.portfolio,\n                    start_date: props.start_date,\n                    end_date: props.end_date,\n                }\n            }).then(response => {\n                setDataSeries(response['data']['amount'].map(data => data));\n            }).catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Cash Flow History</Card.Title>\n            <Card.Body>\n                <Row style={{height:'100%', width:'100%', margin:'0px'}}>\n                    <Col style={{height:'100%'}}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"/>\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PortfolioCashFlow;","import Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../MainCSS.css\"\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst CashHoldings = (props) => {\n\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_cash_holdings/', {\n                params: {\n                    portfolio: props.portfolio,\n                    date: props.end_date,\n                }\n            })\n                .then(response => response['data'].map(data=>data['amount']))\n                .then(data=>setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const chartOptions = {\n        options: {\n              chart: {\n                type: 'donut',\n              },\n              responsive: [{\n                breakpoint: 480,\n                options: {\n                  chart: {\n                    width: 200\n                  },\n                  legend: {\n                    position: 'bottom'\n                  }\n                }\n              }],\n            },\n\n        series: [50.0, 50.0\n\n        ]\n    };\n\n    const chartOptions2 = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"USD\",\n                data: [200,],\n            },\n            {\n                name: \"EUR\",\n                data: [300,],\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Cash Holdings</Card.Title>\n            <Card.Body>\n                <Row style={{height:'50%', width:'100%'}}>\n                    <Col style={{height:'100%'}}>\n                        <div style={{padding:'20px'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'donut'}\n                                width=\"100%\"\n                                height=\"100%\"/>\n\n                        </div>\n                    </Col>\n                </Row>\n                <Row style={{height:'50%', width:'100%'}}>\n                    <Col style={{height:'100%'}}>\n                        <div style={{padding:'20px'}}>\n                            <Chart\n                                options={chartOptions2.options}\n                                series={chartOptions2.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"/>\n\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CashHoldings;","import {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\n\nconst PositionCalculation = (props) => {\n    const [loadState, setLoadState] = useState(false);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        setLoadState(true);\n\n        axios.post(props.server + 'portfolios/positions/', {\n            portfolio: 'ALL',\n            start_date: props.start_date,\n            end_date: props.end_date,\n        })\n            .then(response => setLoadState(false))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <>\n            <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                <Form.Group>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Position\n                    </Button>\n                </Form.Group>\n            </Form>\n            <Modal show={loadState}>\n                <Modal.Body style={{width: '200px', height: '300px'}}>\n                    <div style={{width:'100%'}}>\n                        <h5>Portfolio position calculation</h5>\n                        <h5>Rundate {props.start_date} and {props.end_date}</h5>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default PositionCalculation;","import {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\n\nconst CashHoldingCalculation = (props) => {\n    const [loadState, setLoadState] = useState(false);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        setLoadState(true);\n\n        axios.post(props.server + 'portfolios/cash_holding/', {\n            portfolio: 'ALL',\n            start_date: props.start_date,\n            end_date: props.end_date,\n        })\n            .then(response => setLoadState(false))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <>\n            <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                <Form.Group>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Cash Holding\n                    </Button>\n                </Form.Group>\n            </Form>\n            <Modal show={loadState}>\n                <Modal.Body style={{width: '100%', height: '300px'}}>\n                    <div style={{width:'100%'}}>\n                        <h5>Portfolio cash holding calculation</h5>\n                        <h5>Rundate {props.start_date} and {props.end_date}</h5>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default CashHoldingCalculation;","import {useContext, useEffect, useState} from \"react\";\n\nimport ServerContext from \"../context/server-context\";\nimport EnvContext from \"../context/env-context\";\nimport PortfolioContext from \"../context/portfolio-context\";\nimport axios from \"axios\";\n\nimport NewPortfolioForm from \"./PortfolioPage/NewPortfolioForm\";\nimport PortfolioSettings from \"./PortfolioPage/PortfolioSettings\";\nimport Holdings from \"./PortfolioPage/Holdings\";\nimport PortfolioTransactions from \"./PortfolioPage/PortfolioTransactions\";\nimport PortfolioNav from \"./PortfolioPage/PortfolioNav\";\nimport PortfolioDetails from \"./PortfolioPage/PortfolioDetails\";\nimport PortfolioGroup from \"./PortfolioPage/PortfolioGroup\";\nimport PortfolioRisk from \"./PortfolioPage/PortfolioRisk\";\nimport PortfolioReturn from \"./PortfolioPage/PortfolioReturn\";\nimport PortfolioCashFlow from \"./PortfolioPage/PortfolioCashFlow\";\nimport CashHolding from \"./PortfolioPage/CashHolding\";\n\n// Calculations\nimport PositionCalculation from \"./PortfolioPage/PositionCalculation\";\nimport CashHoldingCalculation from \"./PortfolioPage/CashHoldingCalc\";\n\n// Bootstrap\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport OptionLoader from \"../components/Options\";\n\n// CSS\nimport \"./PortfolioPage.css\"\n\nimport PortfolioBuy from \"./PortfolioPage/PortfolioBuy\";\nimport NewPortCashFlow from \"./PortfolioPage/NewPortCashFlow\";\n\n// Contexts\nimport RobotContext from \"../context/robot-context\";\n\nconst PortfolioPage = (props) => {\n    // Date variables\n    const date = new Date();\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const defaultRobots = useContext(RobotContext)['robots'];\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n    const portfolios = useContext(PortfolioContext)['portfolioData'];\n    const [portfolio, setPortfolio] = useState(portfolios[0]['portfolio_code']);\n    const [startDate, setStartDate] = useState(firstDay.toISOString().substr(0,10));\n    const [endDate, setEndDate] = useState(date.toISOString().substr(0,10));\n\n    console.log(defaultRobots)\n\n    const portfolioOptions = portfolios.map((record) =>\n        <option key={record['id']} value={record['portfolio_code']}>{record['portfolio_name']}</option>)\n\n    const portSelectHandler = (event) => {\n        setPortfolio(event.target.value);\n    };\n\n    const portSelect = (port) => {\n        setPortfolio(port);\n    };\n\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n\n    const endDateHandler = (event) => {\n        setEndDate(event.target.value);\n    };\n\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row style={{height: '60px', padding:'5px'}}>\n                <Col style={{display: 'flex'}}>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row}>\n                                <Form.Label className=\"form-label-first\" column sm={2}>\n                                    Portfolio\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control onChange={portSelectHandler} as=\"select\">\n                                        {portfolioOptions}\n                                    </Form.Control>\n\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group as={Row}>\n                                <Form.Label className=\"form-label-first\" column sm={2}>\n                                    From\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control type=\"date\" onChange={startDateHandler} defaultValue={firstDay.toISOString().substr(0,10)}/>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group as={Row}>\n                                <Form.Label className=\"form-label-first\" column sm={2}>\n                                    To\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control type=\"date\" onChange={endDateHandler} defaultValue={date.toISOString().substr(0,10)}/>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <Col>\n                                    <NewPortfolioForm server={server}/>\n                                </Col>\n                                <Col>\n                                    <NewPortCashFlow portfolio={portfolio} server={server}/>\n                                </Col>\n                                <Col>\n                                    <PortfolioBuy portfolio={portfolio} server={server}\n                                                  env={env}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Col>\n                                    Calculations\n                                </Col>\n                                <Col>\n                                    <PositionCalculation server={server} start_date={startDate} end_date={endDate}/>\n                                </Col>\n                                <Col>\n                                    <CashHoldingCalculation server={server} start_date={startDate} end_date={endDate}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Row style={{height: '300px', padding: '5px'}}>\n                        <Col style={{height: '100%'}}>\n                            <PortfolioDetails portfolio={portfolio} server={server} default={portfolios[0]}/>\n                        </Col>\n                        <Col>\n                            <PortfolioNav portfolio={portfolio} server={server}/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col>\n                            <PortfolioRisk/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col>\n                            <PortfolioReturn/>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    <Row style={{height: '300px', padding: '5px'}}>\n                        <Col style={{height: '100%'}}>\n                            <PortfolioGroup/>\n                        </Col>\n                        <Col>\n                            <PortfolioSettings/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col style={{height:'100%'}} sm={8}>\n                            <Holdings/>\n                        </Col>\n                        <Col style={{height:'100%'}} sm={4}>\n                            <CashHolding portfolio={portfolio} server={server} end_date={endDate}/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col style={{height:'100%'}} sm={8}>\n                            <PortfolioTransactions portfolio={portfolio} server={server}/>\n                        </Col>\n                        <Col style={{height:'100%'}} sm={4}>\n                            <PortfolioCashFlow portfolio={portfolio} server={server} start_date={startDate} end_date={endDate}/>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default PortfolioPage;","import SliderWidget from \"../../components/SliderWidget\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\nimport PriceParagraph from \"./PriceParagraph\";\n\nconst TradeTableRow = (props) => {\n\n    // const newWebSocket = new WebSocket('ws://127.0.0.1:8000/trade/ws/')\n    // newWebSocket.send('XAG_USD')\n\n    // console.log(\"New trade\", newWebSocket)\n\n    const CloseTrade = () => {\n        axios.post(props.server + 'trade_page/close_trade/', {\n            broker_id: props.broker_id,\n            robot: props.robot,\n            trd_id: props.id,\n        })\n            .then(response => alert(response['data']))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <tr>\n            <td style={{fontSize: 12, verticalAlign:\"middle\" }}>{props.id}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\" }}>{props.broker_id}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.security}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.robot}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.quantity}</td>\n            {/*<td><PriceParagraph socketConnection={newWebSocket}/></td>*/}\n            <td><Button onClick={CloseTrade}>Close</Button></td>\n        </tr>\n    );\n};\n\nexport default TradeTableRow;","import {useContext, useEffect, useState} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport TradeTableRow from \"./TradeTableRow\";\n\n\nconst TradeTableData = (props) => {\n\n    const [tradeData, setTradeData] = useState([])\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            fetch(props.server + 'trade_page/get_open_trades/' + props.env)\n                .then(response => response.json())\n                .then(data => setTradeData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const tradeDataRow = tradeData.map((record)=>\n        <TradeTableRow\n            server={props.server}\n            key={record['id']}\n            id={record['id']}\n            broker_id={record['broker_id']}\n            security={record['security']}\n            robot={record['robot']}\n            quantity={record['quantity']}/>)\n\n    return (\n        <Card style={{width: '100%'}}>\n            <Table>\n                <thead style={{fontSize: 12}}>\n                <tr>\n                    <th style={{verticalAlign: \"middle\"}}>Platform ID</th>\n                    <th style={{verticalAlign: \"middle\"}}>Broker ID</th>\n                    <th style={{verticalAlign: \"middle\"}}>Security</th>\n                    <th style={{verticalAlign: \"middle\"}}>Robot</th>\n                    <th style={{verticalAlign: \"middle\"}}>Quantity</th>\n                    <th style={{verticalAlign: \"middle\"}}>Price</th>\n                    <th style={{verticalAlign: \"middle\"}}></th>\n                </tr>\n                </thead>\n\n                <tbody style={{height: '100%', overflow: 'scroll'}}>\n                {tradeDataRow}\n                </tbody>\n            </Table>\n\n        </Card>\n    );\n};\n\nexport default TradeTableData;","// React Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from 'react-bootstrap/Button'\n\nimport TradeTableData from \"./TradePage/TradeTableData\";\nimport PriceParagraph from \"./TradePage/PriceParagraph\";\n\nimport {useContext, useState} from \"react\";\n\n// Contexts\nimport EnvContext from \"../context/env-context\";\nimport ServerContext from \"../context/server-context\";\nimport axios from \"axios\";\n\nconst TradePage = () => {\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n\n    // This part connects a websocket with the back end from the front end\n    // const newWebSocket = new WebSocket('http://127.0.0.1:8000/trade/price_stream/')\n    //\n    // console.log(newWebSocket)\n    //\n    // const testSocket = () => {\n    //     // This code sends data to the websocket form front end\n    //     newWebSocket.send(\"start\")\n    //     console.log('Streaming request is sent from front end to back end.')\n    // };\n    //\n    // const closeSocket = () => {\n    //     // This code closes the websocket connection with the back end\n    //     newWebSocket.send(\"stop\")\n    //     // newWebSocket.close()\n    //     console.log('Streaming is stopped')\n    // };\n\n    const testSocket2 = () => {\n        axios.get(server + 'new_process/',)\n                .then()\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n    };\n\n    return (\n        <Container className={'border'} style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row style={{height: '60%'}}>\n                <Button variant=\"primary\" onClick={testSocket2}>TEST SOCKET</Button>\n                {/*<PriceParagraph socketConnection={newWebSocket}/>*/}\n            </Row>\n            <Row style={{height: '40%', background: 'blue'}}>\n                <TradeTableData env={env} server={server}/>\n            </Row>\n        </Container>\n    );\n};\n\nexport default TradePage;","import {Card} from \"react-bootstrap\";\n\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\n\nconst BalanceCalculation = (props) => {\n    const [loadState, setLoadState] = useState(false);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        setLoadState(true);\n\n        axios.post(props.server + 'robots/calculate_robot_balance/', {\n            process: 'Balance',\n            robot: props.robot,\n            start_date: props.start_date,\n            end_date: props.end_date,\n        })\n            .then(response => setLoadState(false))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <>\n            <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                <Form.Group>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Balance\n                    </Button>\n                </Form.Group>\n            </Form>\n            <Modal show={loadState}>\n                <Modal.Body style={{width: '200px', height: '300px'}}>\n                    <h2>Calculating ...</h2>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default BalanceCalculation;","import Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\n\nimport axios from \"axios\";\n\nconst NewBrokerAccount = (props) => {\n\n    const [broker, setBroker] = useState('');\n    const [accountNumber, setAccountNumber] = useState('');\n    const [token, setToken] = useState('');\n    const [env, setEnv] = useState('live');\n    const [currency, setCurrency] = useState('USD');\n\n    const onHide = () => {\n        props.hide();\n    };\n\n    const submitHandler = () => {\n        axios.post(props.server + 'accounts/new_account/', {\n            broker_name: broker,\n            account_number: accountNumber,\n            env: env,\n            token: token,\n            currency: currency,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setBroker('');\n        setAccountNumber('');\n        setToken('');\n        setEnv('live');\n        setCurrency('USD');\n        props.hide();\n    };\n\n    const brokerNameHandler = (event) => {\n        setBroker(event.target.value);\n    };\n\n    const accountNumberHandler = (event) => {\n        setAccountNumber(event.target.value);\n    };\n\n    const tokenHandler = (event) => {\n        setToken(event.target.value);\n    };\n\n    const envHandler = (event) => {\n        setEnv(event.target.value);\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    return (\n        <Modal show={props.show} onHide={onHide} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>New Account</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Group>\n                    <Form.Control onChange={brokerNameHandler} type=\"text\" placeholder=\"Broker Name\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control onChange={accountNumberHandler} type=\"text\" placeholder=\"Account Number\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control onChange={tokenHandler} type=\"text\" placeholder=\"Token\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Environment</Form.Label>\n                    <Form.Control onChange={envHandler} as=\"select\">\n                        <option value={'live'}>Live</option>\n                        <option value={'demo'}>Demo</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Currency</Form.Label>\n                    <Form.Control onChange={currencyHandler} as=\"select\">\n                        <option value={'USD'}>USD</option>\n                        <option value={'EUR'}>EUR</option>\n                    </Form.Control>\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onHide}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={submitHandler}>\n                    Save\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default NewBrokerAccount;","import { Navbar, Nav, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { Link } from 'react-router-dom'\n\nimport {useContext, useState} from \"react\";\n\nimport BalanceCalculation from \"../Pages/Robot/BalanceCalculation\";\n\nimport NewBrokerAccount from \"./NewBrokerAccount\";\nimport ServerContext from \"../context/server-context\";\n\nconst Navigation = (props) => {\n\n    const server = useContext(ServerContext)['server'];\n\n    const [showNewAccount, setShowNewAccount] = useState(false);\n\n    const envChange = (envValue) => {\n        props.onEnvChange(envValue);\n    };\n\n    // New account handlers\n    const newAccountHandler = () => {\n        setShowNewAccount(true);\n    };\n\n    const hideNewAccount = () => {\n        setShowNewAccount(false);\n    };\n\n    return (\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">FFM SYSTEM</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to={'/home'}>Home</Nav.Link>\n                    <Nav.Link as={Link} to={'/portfolio'}>Portfolio</Nav.Link>\n                    <Nav.Link as={Link} to={'/robot'}>Robot</Nav.Link>\n                    <Nav.Link as={Link} to={'/risk'}>Risk</Nav.Link>\n                    <Nav.Link as={Link} to={'/instruments'}>Instrument</Nav.Link>\n                    <Nav.Link as={Link} to={'/trade'}>Trade</Nav.Link>\n                    <NavDropdown title=\"Calculations\">\n                        <NavDropdown.Item>Robot Balance</NavDropdown.Item>\n                        <NavDropdown.Item></NavDropdown.Item>\n                        <NavDropdown.Divider/>\n                        <NavDropdown.Item>Portfolio Holdings</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"Broker Accounts\">\n                        <NavDropdown.Item onSelect={newAccountHandler}>New</NavDropdown.Item>\n                        <NavDropdown.Item>Update</NavDropdown.Item>\n                        <NavDropdown.Item>Delete</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n                <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\n                    <Button variant=\"outline-info\">Search</Button>\n                </Form>\n                <Dropdown onSelect={envChange} style={{marginLeft:'10px'}}>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        {props.env}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item eventKey=\"live\">Live</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"demo\">Demo</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <NewBrokerAccount show={showNewAccount} hide={hideNewAccount} server={server}/>\n            </Navbar>\n\n    );\n};\n\nexport default Navigation;","import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {useEffect, useState, useRef} from \"react\";\nimport axios from \"axios\";\nimport OptionLoader from \"../../components/Options\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst NewRobotForm = (props) => {\n    const [robotName, setRobotName] = useState('');\n    const [strategy, setStrategy] = useState('');\n    const [broker, setBroker] = useState('oanda');\n    const [env, setEnv] = useState('live');\n    const [account, setAccount] = useState('');\n    const [instrument, setInstrument] = useState('');\n\n    console.log(account);\n    console.log(instrument)\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const accountParams = {\n        'broker': broker,\n        'env': env,\n    };\n\n    const instrumentParams = {\n        'broker': broker,\n    };\n\n    const robotNameChangeHandler = (event) => {\n        setRobotName(event.target.value)\n    };\n\n    const robotStrategyHandler = (event) => {\n        setStrategy(event.target.value)\n    };\n\n    const envHandler = (event) => {\n        setEnv(event.target.value);\n    };\n\n    const instHandler = (event) => {\n        setInstrument(event.target.value);\n    };\n\n    const brokerHandler = (event) => {\n        setBroker(event.target.value);\n    };\n\n    const accountHandler = (event) => {\n        setAccount(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        axios.post(props.server + 'robots/new_robot/', {\n            robot_name: robotName,\n            strategy: strategy,\n            security: instrument,\n            broker: broker,\n            env: env,\n            account: account,\n        })\n                .then(response => console.log(response))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setShow(false)\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                New Robot\n            </Button>\n\n            <Modal show={show} onHide={handleClose} animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Robot</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Robot Name</Form.Label>\n                            <Form.Control onChange={robotNameChangeHandler} type=\"text\" placeholder=\"Robot Name\" maxLength={20}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Strategy</Form.Label>\n                            <Form.Control onChange={robotStrategyHandler} as=\"select\">\n                                <option value={'Initiative'}>Initiative</option>\n                                <option value={'Responsive'}>Responsive</option>\n                                <option value={'Correction'}>Correction</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Broker</Form.Label>\n                            <Form.Control onChange={brokerHandler} as=\"select\">\n                                <option>oanda</option>\n                                <option>Fix</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Environment</Form.Label>\n                            <Form.Control onChange={envHandler} as=\"select\">\n                                <option value={'live'}>Live</option>\n                                <option value={'demo'}>Demo</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Instruments</Form.Label>\n                            <Form.Control onChange={instHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'instruments/get_instruments/'}\n                                    params={instrumentParams}\n                                    code={'instrument_name'}\n                                    value={'instrument_name'}\n                                />\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Account Number</Form.Label>\n                            <Form.Control onChange={accountHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'accounts/get_accounts_data/'}\n                                    params={accountParams}\n                                    code={'account_number'}\n                                    value={'account_number'}\n                                />\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewRobotForm;","import Chart from \"react-apexcharts\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Card from \"react-bootstrap/Card\";\n\nconst CumulativeReturnChart = (props) => {\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false},\n                axisBorder: {\n                    show: false,\n                    color: '#78909C',\n                    height: 1,\n                    width: '100%',\n                    offsetX: 0,\n                    offsetY: 0\n                },\n                axisTicks: {\n                    show: false,\n                    borderType: 'solid',\n                    color: '#78909C',\n                    height: 6,\n                    offsetX: 0,\n                    offsetY: 0\n                },\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        title: {\n            text: 'Cumulative Return',\n            align: 'left',\n            margin: 10,\n            offsetX: 0,\n            offsetY: 0,\n            floating: false,\n            style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                // fontFamily: undefined,\n                color: '#263238'\n            },\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.data,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Return</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'line'}\n                                width=\"100%\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n\n};\n\nexport default CumulativeReturnChart;","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n// Charts\nimport CumulativeReturnChart from \"./Charts/CumulativeReturn\";\n\nconst RobotReturn = (props) => {\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/cumulative_ret/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date\n                }\n            })\n                .then(response => response['data'].map(data => data))\n                .then(data => setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <CumulativeReturnChart data={chartData}/>\n    );\n};\n\nexport default RobotReturn;","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nconst RobotRisk = (props) => {\n\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/drawdown/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date\n                }\n            })\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: chartData,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Risk</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <Chart\n                            options={chartOptions.options}\n                            series={chartOptions.series}\n                            type={'bar'}\n                            width=\"100%\"\n                            height=\"100%\"\n                        />\n                    </Col>\n                </Row>\n\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RobotRisk;","import Card from \"react-bootstrap/Card\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/Container\";\n\nconst RobotDetails = (props) => {\n\n    const [robotData, setRobotData] = useState([props.default]);\n    const [priceData, setPriceData] = useState([]);\n    console.log(priceData)\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robot/'+props.robot)\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setRobotData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_last_price/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date,\n                }\n            })\n                .then(function(response){\n                    const data = response['data'];\n                    setPriceData(data);\n                })\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Row style={{height: '100px', padding: '5px', margin: '5px'}}>\n            <Card className=\"card\" style={{margin: '0px'}}>\n                {/*<Card.Title className=\"card-header-first\">Details</Card.Title>*/}\n                <Card.Body style={{padding: '5px'}}>\n                    <Row style={{height: '100%', width: '100%', margin: '0px'}}>\n                        <Col style={{height: '100%'}}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Strategy</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['strategy']}</p>\n                            </Col>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Security</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['security']}</p>\n                            </Col>\n                        </Col>\n                        <Col style={{height: '100%'}}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Inception Date</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['inception_date']}</p>\n                            </Col>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Broker</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['broker']}</p>\n                            </Col>\n\n                        </Col>\n                        <Col style={{height: '100%'}}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Account Number</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['account_number']}</p>\n                            </Col>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Last Price on {priceData['date']}</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{Math.round(priceData['price'] * 100) / 100}</p>\n                            </Col>\n                        </Col>\n                    </Row>\n                </Card.Body>\n\n            </Card>\n        </Row>\n    );\n};\n\nexport default RobotDetails;","import Chart from \"react-apexcharts\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst BalanceChart = (props) => {\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false},\n                axisBorder: {\n                    show: false,\n                    color: '#78909C',\n                    height: 1,\n                    width: '100%',\n                    offsetX: 0,\n                    offsetY: 0\n                },\n                axisTicks: {\n                    show: false,\n                    borderType: 'solid',\n                    color: '#78909C',\n                    height: 6,\n                    offsetX: 0,\n                    offsetY: 0\n                },\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            grid: {\n                show: false,\n                borderColor: '#90A4AE',\n                strokeDashArray: 0,\n                position: 'back',\n                xaxis: {\n                    lines: {\n                        show: false\n                    }\n                },\n                yaxis: {\n                    lines: {\n                        show: false\n                    }\n                },\n                row: {\n                    colors: undefined,\n                    opacity: 0.5\n                },\n                column: {\n                    colors: undefined,\n                    opacity: 0.5\n                },\n                padding: {\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0\n                },\n            },\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        title: {\n            text: 'Cumulative Return',\n            align: 'left',\n            margin: 10,\n            offsetX: 0,\n            offsetY: 0,\n            floating: false,\n            style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                // fontFamily: undefined,\n                color: '#263238'\n            },\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.data,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">{props.title}</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'line'}\n                                width=\"100%\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BalanceChart;","import Chart from \"react-apexcharts\";\nimport Row from 'react-bootstrap/Row';\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\n\nconst DailyPnlChart = (props) => {\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n\n            xaxis: {\n                categories: [],\n                labels: {show: false},\n                axisBorder: {\n                    show: false,\n                    color: '#78909C',\n                    height: 1,\n                    width: '100%',\n                    offsetX: 0,\n                    offsetY: 0\n                },\n                axisTicks: {\n                    show: false,\n                    borderType: 'solid',\n                    color: '#78909C',\n                    height: 6,\n                    offsetX: 0,\n                    offsetY: 0\n                },\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            grid: {\n                show: false,\n                borderColor: '#90A4AE',\n                strokeDashArray: 0,\n                position: 'back',\n                xaxis: {\n                    lines: {\n                        show: false\n                    }\n                },\n                yaxis: {\n                    lines: {\n                        show: false\n                    }\n                },\n                row: {\n                    colors: undefined,\n                    opacity: 0.5\n                },\n                column: {\n                    colors: undefined,\n                    opacity: 0.5\n                },\n                padding: {\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0\n                },\n            },\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        title: {\n            text: 'Cumulative Return',\n            align: 'left',\n            margin: 0,\n            offsetX: 100,\n            offsetY: 100,\n            floating: false,\n            style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                // fontFamily: undefined,\n                color: '#263238'\n            },\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.data,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Daily P&L</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DailyPnlChart;","import Card from \"react-bootstrap/Card\";\nimport Row from 'react-bootstrap/Row';\nimport Chart from \"react-apexcharts\";\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\n\nconst RobotCashFlow = (props) => {\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.data,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Cash Flow History</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RobotCashFlow;","import Card from \"react-bootstrap/Card\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\n\nimport BalanceChart from \"./Charts/BalanceChart\";\nimport DailyPnlChart from \"./Charts/DailyPnlChart\";\nimport RobotCashFlow from \"./RobotCashFlow\";\n\nconst RobotBalance = (props) => {\n\n    const [balanceData, setBalanceData] = useState([]);\n    const [cashflowData, setCashFlowData] = useState([]);\n    const [pnlData, setPnlData] = useState([]);\n    const [dateData, setDateData] = useState([]);\n\n    // console.log(chartData)\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_balance/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date,\n                }\n            })\n                .then(function(response){\n                    const data = response['data'];\n                    const balance_list = data.map(data => data['close_balance']);\n                    const cf_list = data.map(data => data['cash_flow']);\n                    const pnl_list = data.map(data => data['realized_pnl']);\n                    const date_list = data.map(data => data['date']);\n\n                    setBalanceData(balance_list);\n                    setCashFlowData(cf_list);\n                    setPnlData(pnl_list);\n                    setDateData(date_list);\n                })\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const balanceChartTitle='Latest calculated balance on ' + dateData[dateData.length - 1] + ' was ' + balanceData[balanceData.length - 1]\n\n    return (\n        <Row style={{height: '300px', padding:'5px', margin:'5px', display: 'flex'}}>\n            <Col xs={6} md={4} style={{height:'100%', paddingLeft:'0px'}}>\n               <BalanceChart data={balanceData} title={balanceChartTitle}/>\n                    {/*<Card.Title*/}\n                    {/*    className=\"card-header-first\">Latest calculated balance on {dateData[dateData.length - 1]} is {balanceData[balanceData.length - 1]}</Card.Title>*/}\n            </Col>\n            <Col xs={6} md={4} style={{height:'100%'}}>\n                <DailyPnlChart data={pnlData}/>\n            </Col>\n            <Col xs={6} md={4} style={{height:'100%', paddingRight:'0px'}}>\n                <RobotCashFlow data={cashflowData}/>\n            </Col>\n        </Row>\n    );\n};\n\nexport default RobotBalance;\n","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nimport BalanceCalculation from \"./BalanceCalculation\";\n\nconst RobotNav = (props) => {\n    const [robotsData, setRobotsData] = useState(props.robots);\n\n    const robotSelectHandler = (event) => {\n        props.robotChange(event.target.value);\n    };\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robots/' + props.env)\n                .then(response => setRobotsData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const robotsOptions = robotsData.map((record) =>\n        <option key={record['id']} value={record['name']}>{record['name']}</option>);\n\n    return (\n        <>\n            <Form.Group as={Row}>\n                <Form.Label className=\"form-label-first\" column sm={2}>\n                    Robot\n                </Form.Label>\n                <Col sm={10}>\n                    <Form.Control onChange={robotSelectHandler} as=\"select\">\n                        {robotsOptions}\n                    </Form.Control>\n                </Col>\n            </Form.Group>\n        </>\n    );\n};\n\nexport default RobotNav;","import Card from \"react-bootstrap/Card\";\nimport Row from 'react-bootstrap/Row';\nimport Chart from \"react-apexcharts\";\nimport Col from 'react-bootstrap/Col';\n\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst RobotTrades = (props) => {\n\n    const [chartData, setChartData] = useState([]);\n\n    let losingTradeNumber = 0;\n    let winningTradeNumber = 0;\n    let losingTrades = [];\n    let winningTrades = [];\n    let totalWinner = 0.0;\n    let totalLoser= 0.0;\n\n    for (const val of chartData) {\n        if (val < 0) {\n            losingTradeNumber=+losingTradeNumber+1;\n            losingTrades.push(val);\n        } else if (val > 0){\n            winningTradeNumber=+winningTradeNumber+1;\n            winningTrades.push(val);\n        };\n\n    };\n\n    for (let i = 0; i < losingTrades.length; i++) {\n        totalLoser += losingTrades[i];\n    };\n\n    for (let i = 0; i < winningTrades.length; i++) {\n        totalWinner += winningTrades[i];\n    };\n\n    let winPerc = Math.round((winningTradeNumber) / (losingTradeNumber + winningTradeNumber)*100)/100;\n    let lossPerc = Math.round(losingTradeNumber / (losingTradeNumber + winningTradeNumber)*100)/100;\n    let avgWinner = Math.round(totalWinner/winningTrades.length*100)/100;\n    let avgLoser = Math.round(totalLoser/losingTrades.length*100)/100;\n\n    console.log(winPerc)\n    console.log(lossPerc)\n    useEffect(() => {\n            axios.get(props.server + 'robots/trades/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date\n                }\n            })\n                .then(response => response['data'].map(data => data['pnl']))\n                .then(data => setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: chartData,\n            }\n        ]\n    };\n\n    // const a = cashFlow.map(data => data['cash_flow']);\n    // console.log(a)\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Trades</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height:'100%', width:'100%', margin:'0px'}}>\n                    <Col style={{height:'100%'}} sm={8}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"/>\n\n                        </div>\n                    </Col>\n                    <Col sm={4} style={{height:'100%'}}>\n                        <Row>\n                            <h2>Statistics</h2>\n                        </Row>\n                        <Row style={{padding:'5px', marginRight:'25px', position:'centered'}}>\n                            <Col>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Total Trades</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{losingTradeNumber + winningTradeNumber}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Winning Trades</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{winningTradeNumber}</p>\n                                </div>\n                               <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Loosing Trades</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{losingTradeNumber}</p>\n                                </div>\n                               <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Winning %</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{winPerc}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Loosing %</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{lossPerc}</p>\n                                </div>\n                            </Col>\n                            <Col>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Total Winning P&L</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{Math.round(totalWinner*100)/100}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Total Losing P&L</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{Math.round(totalLoser*100)/100}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Avg Winning Trade</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{avgWinner}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Avg Losing Trade</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{avgLoser}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Payoff Ratio</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px',\n                                    }}>{Math.round(Math.abs(avgWinner/avgLoser)*100)/100}</p>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row style={{\n                            width: '100%',\n                            padding: '5px',\n                            position: 'absolute',\n                            bottom: '0px'\n                        }}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                    <p style={{fontWeight:'bold'}}>Profit Factor</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '15px',\n                                        fontWeight:'bold'\n                                    }}>{Math.round((winPerc * avgWinner) / (lossPerc / avgLoser) * -100) / 100}</p>\n                            </Col>\n                            <Col>\n                                 <p style={{fontWeight:'bold', position:'absolute', left:'0px'}}>Total Profit</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '45px',\n                                        fontWeight:'bold'\n                                    }}>{Math.round((totalWinner+totalLoser) * 100) / 100}</p>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n);\n};\n\nexport default RobotTrades;","import {Card} from \"react-bootstrap\";\n\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\n\nconst RobotPricing = (props) => {\n    const [loadState, setLoadState] = useState(false);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        setLoadState(true);\n\n        axios.post(props.server + 'robots/pricing/', {\n            robot: props.robot,\n            start_date: props.start_date,\n            end_date: props.end_date,\n        })\n            .then(response => console.log(response['data'][0]))\n            .then(data => setLoadState(false))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <>\n            <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                <Form.Group>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Pricing\n                    </Button>\n                </Form.Group>\n            </Form>\n            <Modal show={loadState}>\n                <Modal.Body style={{width: '200px', height: '300px'}}>\n                    <h2>Pricing Robots...</h2>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default RobotPricing;","import Card from \"react-bootstrap/Card\";\n\nconst RobotProcesses = (props) => {\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Processes</Card.Title>\n\n            <Card.Body style={{padding: '0px'}}>\n\n            </Card.Body>\n        </Card>\n    );\n\n};\n\nexport default RobotProcesses;","import {useState, useEffect, useContext} from \"react\";\n\nimport NewRobotForm from \"./Robot/NewRobotForm\";\nimport RobotTable from \"./Robot/RobotTable\";\nimport BalanceCalculation from \"./Robot/BalanceCalculation\";\nimport RobotReturn from \"./Robot/RobotReturn\";\nimport RobotRisk from \"./Robot/RobotRisk\";\nimport RobotDetails from \"./Robot/RobotDetails\";\nimport RobotBalance from \"./Robot/RobotBalance\";\nimport RobotCashFlow from \"./Robot/RobotCashFlow\";\nimport RobotNav from \"./Robot/RobotNav\";\nimport RobotTrades from \"./Robot/RobotTrades\";\nimport RobotPricing from \"./Robot/RobotPricing\";\nimport RobotProcesses from \"./Robot/RobotProcesses\";\n\nimport axios from \"axios\";\n\n// Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n// Context\nimport ServerContext from \"../context/server-context\";\nimport EnvContext from \"../context/env-context\";\nimport RobotContext from \"../context/robot-context\";\nimport {Card} from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\n\nconst RobotPage = (props) => {\n    // Date variables\n    const date = new Date();\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n    const defaultRobots = useContext(RobotContext)['robots'];\n\n    const [robot, setRobot] = useState(defaultRobots[0]['name']);\n    const [startDate, setStartDate] = useState(firstDay.toISOString().substr(0,10));\n    const [endDate, setEndDate] = useState(date.toISOString().substr(0,10));\n\n    const changeRobot = (rob) => {\n        setRobot(rob);\n    };\n\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n\n    const endDateHandler = (event) => {\n\n        if (event.target.value < startDate) {\n            alert('End date can not be less then start date!');\n        }else {\n            setEndDate(event.target.value);\n        };\n    };\n\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row style={{height: '60px', padding: '5px', display: 'flex', margin: '5px'}}>\n                <Col style={{padding: '0px', height: '100%', display: 'flex'}}>\n                    <Col style={{height: '100%', display: 'block'}}>\n                        <RobotNav robots={defaultRobots}\n                                  server={server}\n                                  env={env}\n                                  robotChange={changeRobot}\n                        />\n                    </Col>\n                    <Col style={{height: '100%'}}>\n                        <Form.Group as={Row}>\n                            <Form.Label className=\"form-label-first\" column sm={2}>\n                                From\n                            </Form.Label>\n                            <Col sm={10}>\n                                <Form.Control type=\"date\" onChange={startDateHandler} defaultValue={startDate}/>\n                            </Col>\n                        </Form.Group>\n                    </Col>\n                    <Col style={{height: '100%'}}>\n                        <Form.Group as={Row}>\n                            <Form.Label className=\"form-label-first\" column sm={2}>\n                                To\n                            </Form.Label>\n                            <Col sm={10}>\n                                <Form.Control type=\"date\" onChange={endDateHandler} defaultValue={endDate}/>\n                            </Col>\n                        </Form.Group>\n                    </Col>\n                </Col>\n                <Col style={{padding: '0px', height: '100%', width:'100%', display: 'flex'}}>\n                    <Row style={{width: '100%'}}>\n                        <Col style={{display: 'flex'}}>\n                            <Col>\n                                <Form.Group className=\"mb-2\">\n                                    <Form.Check type=\"checkbox\" label=\"All\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Check type=\"checkbox\" label=\"Since Inception\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col style={{height: '100%'}}>\n                                <BalanceCalculation server={server} robot={robot} start_date={startDate}\n                                                    end_date={endDate}/>\n                            </Col>\n                            <Col style={{height: '100%'}}>\n                                <RobotPricing server={server} robot={robot} start_date={startDate}\n                                              end_date={endDate}/>\n                            </Col>\n                        </Col>\n                        <Col style={{display: 'flex'}}>\n                            <Col style={{height: '100%'}}>\n                                <NewRobotForm server={server} style={{height: '400px'}}/>\n                            </Col>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n\n            {/*// General Info*/}\n\n            <RobotDetails server={server} robot={robot} default={defaultRobots[0]}/>\n\n            <RobotBalance robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n\n            {/*// Risk and Return*/}\n            <Row style={{height:'500px', padding:'5px'}}>\n                <Col style={{height:'100%', width:'50%'}}>\n                    <RobotReturn robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                </Col>\n                <Col style={{height:'100%', width:'50%'}}>\n                    <RobotRisk robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                </Col>\n            </Row>\n            <Row style={{height:'500px', padding:'5px'}}>\n                <Col style={{height:'100%'}}>\n                    <RobotTrades robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                </Col>\n                <Col >\n                    <Row style={{height:'100%'}}>\n                        <Col style={{height: '100%'}}>\n                            <RobotProcesses robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            {/*<Row style={{height:'500px', padding:'5px'}}>*/}\n            {/*    <Col>*/}\n            {/*        <Card>*/}\n            {/*            <RobotTable server={server} env={env}/>*/}\n            {/*        </Card>*/}\n            {/*    </Col>*/}\n            {/*</Row>*/}\n        </Container>\n    );\n};\n\nexport default RobotPage;","import PriceParagraph from \"./TradePage/PriceParagraph\";\n\nconst InstrumentPage = () => {\n    // const newWebSocket = new WebSocket('ws://127.0.0.1:8000/trade/price_stream/')\n\n    return (\n        <div>\n            {/*<PriceParagraph socketConnection={newWebSocket}/>*/}\n            <h2>Instrument Page</h2>\n        </div>\n    );\n};\n\nexport default InstrumentPage;","import './App.css';\nimport {useContext, useEffect, useState} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport RiskPage from \"./Pages/RiskPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport PortfolioPage from \"./Pages/PortfolioPage\";\nimport TradePage from \"./Pages/TradePage\";\nimport Navigation from \"./components/NavBar\";\nimport RobotPage from \"./Pages/RobotPage\";\nimport InstrumentPage from \"./Pages/InstrumentPage\";\n\n// Contexts\nimport ServerContext from \"./context/server-context\";\nimport EnvContext from \"./context/env-context\";\nimport PortfolioContext from \"./context/portfolio-context\";\nimport RobotContext from \"./context/robot-context\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction App() {\n    // 'http://127.0.0.1:8000/' 'https://pavliati.pythonanywhere.com/'\n    const [robotEnvData, setRobotEnvData] = useState('live');\n    const [portfolioData, setPortfolioData] = useState([]);\n    const [robotsData, setRobotsData] = useState([]);\n\n    const server = 'https://pavliati.pythonanywhere.com/'\n\n    console.log(server)\n\n    const getEnvData = (env) => {\n        setRobotEnvData(env);\n    };\n\n    useEffect(() => {\n            axios.get(server + 'portfolios/get_portfolio_data/all')\n                .then(response => setPortfolioData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, []\n    );\n\n    useEffect(() => {\n            axios.get(server + 'robots/get_robots/' + robotEnvData)\n                .then(response => setRobotsData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, []\n    );\n\n    return (\n        <ServerContext.Provider value={{server: server}}>\n            <EnvContext.Provider value={{environment: robotEnvData}}>\n                <RobotContext.Provider value={{robots: robotsData}}>\n                    <PortfolioContext.Provider value={{portfolioData}}>\n                    <div className=\"App\">\n\n                        <Navigation onEnvChange={getEnvData} env={robotEnvData}/>\n                        <Switch>\n                            <Route path=\"/risk\">\n                                <RiskPage/>\n                            </Route>\n                            <Route path=\"/home\">\n                                <HomePage/>\n                            </Route>\n                            <Route path=\"/trade\">\n                                <TradePage/>\n                            </Route>\n                            <Route path=\"/portfolio\">\n                                <PortfolioPage/>\n                            </Route>\n                            <Route path=\"/instruments\">\n                                <InstrumentPage/>\n                            </Route>\n                            <Route path=\"/robot\">\n                                <RobotPage/>\n                            </Route>\n                        </Switch>\n\n                    </div>\n                </PortfolioContext.Provider>\n                </RobotContext.Provider>\n            </EnvContext.Provider>\n        </ServerContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}