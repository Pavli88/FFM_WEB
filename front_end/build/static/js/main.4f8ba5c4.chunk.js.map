{"version":3,"sources":["context/env-context.js","components/SliderWidget.js","Pages/RiskPage/RiskTableRow.js","Pages/RiskPage/RiskTableData.js","context/server-context.js","Pages/RiskPage.js","Pages/HomePage/PerfDashBoard.js","components/Charts.js","Pages/HomePage/RobotStatCards.js","Pages/HomePage.js","context/portfolio-context.js","Pages/PortfolioPage/NewPortfolioForm.js","Pages/PortfolioPage/PortfolioSettings.js","Pages/PortfolioPage/Holdings.js","components/Options.js","Pages/Robot/GetRobotPrice.js","Pages/PortfolioPage/PortfolioBuy.js","Pages/PortfolioPage/PortfolioTransactions.js","Pages/PortfolioPage/NewPortCashFlow.js","Pages/PortfolioPage/PortfolioNav.js","Pages/PortfolioPage/PortfolioDetails.js","Pages/PortfolioPage/PortfolioGroup.js","Pages/PortfolioPage/PortfolioRisk.js","Pages/PortfolioPage/PortfolioReturn.js","Pages/PortfolioPage/PortfolioCashFlow.js","Pages/PortfolioPage/CashHolding.js","Pages/PortfolioPage/PositionCalculation.js","Pages/PortfolioPage/CashHoldingCalc.js","context/robot-context.js","Pages/PortfolioPage.js","Pages/TradePage/PriceParagraph.js","Pages/TradePage/TradeTableRow.js","Pages/TradePage/TradeTableData.js","Pages/TradePage.js","Pages/Robot/BalanceCalculation.js","components/NewBrokerAccount.js","components/NavBar.js","Pages/Robot/NewRobotForm.js","Pages/Robot/Charts/CumulativeReturn.js","Pages/Robot/RobotReturn.js","Pages/Robot/RobotRisk.js","Pages/Robot/RobotDetails.js","Pages/Robot/Charts/BalanceChart.js","Pages/Robot/Charts/DailyPnlChart.js","Pages/Robot/RobotCashFlow.js","Pages/Robot/RobotBalance.js","Pages/Robot/RobotNav.js","Pages/Robot/RobotTrades.js","Pages/Robot/RobotPricing.js","Pages/Robot/RobotProcesses.js","Pages/RobotPage.js","Pages/InstrumentPage.js","App.js","reportWebVitals.js","index.js"],"names":["EnvContext","React","createContext","environment","SliderWidget","props","useState","defaultValue","value","setValue","Form","Group","style","margin","Row","Col","Label","verticalAlign","Control","onChange","event","target","type","min","max","step","RiskTableRow","robot","dailyRisk","setDailyRisk","tradeLimit","setTradeLimit","riskOnTrade","setRiskOnTrade","pLevel","qType","setQType","quantity","setQuantity","console","log","className","as","placeholder","Button","onClick","axios","post","server","daily_risk","nbm_trades","risk_per_trade","pyramiding_level","quantity_type","then","response","alert","catch","error","RiskTableData","env","useContext","riskData","setRiskData","useEffect","fetch","json","data","riskDataRow","map","Table","fontSize","ServerContext","RiskPage","Container","background","width","height","window","innerHeight","padding","fluid","Card","Title","PerformanceDashboard","perfData","setPerfData","get","perfRespData","record","borderRadius","Body","size","ApexChart","state","options","chart","toolbar","id","xaxis","categories","xdata","labels","show","yaxis","formatter","val","toFixed","dataLabels","enabled","series","name","ydata","chartType","RobotStatCards","balanceRequestData","robotBalanceData","setRobotBalanceData","params","robotRiskData","setRobotRiskData","widgetData","balance","risk","chartData","index","marginTop","marginBottom","marginRight","Header","overflow","HomePage","textAlign","paddingTop","paddingBottom","paddingLeft","paddingRight","PortfolioContext","NewPortfolioForm","portfolioName","setPortfolioName","portfolioCode","setPortfolioCode","portType","setPortType","currency","setCurrency","setShow","handleClose","submitHandler","preventDefault","port_name","port_type","port_currency","port_code","variant","Modal","onHide","closeButton","onSubmit","required","Footer","PortfolioSettings","Holdings","sm","OptionLoader","rawData","setRawData","url","code","GetRobotLastPrice","price","setPrice","date","setDate","getPrice","Math","round","PortfolioBuy","securityId","setSecurity","securityName","setSecurityName","unit","setUnit","robotPrice","setRobotPrice","robotQuantity","setRobotQuantity","instrumentParams","portfolio","sec","sec_type","sec_id","readOnly","selectIndex","nativeEvent","selectedIndex","text","document","getElementById","GetRobotPrice","PortfolioTransactions","portTransData","setPortTransData","overflowY","overflowX","NewPortCashFlow","setType","amount","PortfolioNav","PortfolioDetails","default","portData","setPortData","display","position","right","PortfolioGroup","PortfolioRisk","PortfolioCashFlow","dataSeries","setDataSeries","chartOptions","start_date","end_date","CashHoldings","setChartData","responsive","breakpoint","legend","chartOptions2","PositionCalculation","loadState","setLoadState","CashHoldingCalculation","RobotContext","PortfolioPage","Date","firstDay","getFullYear","getMonth","defaultRobots","portfolios","setPortfolio","toISOString","substr","startDate","setStartDate","endDate","setEndDate","portfolioOptions","column","CashHoldingCalc","PortfolioReturn","CashHolding","PriceParagraph","ask","setAsk","socketConnection","onmessage","responseData","JSON","parse","TradeTableRow","broker_id","security","trd_id","TradeTableData","tradeData","setTradeData","tradeDataRow","TradePage","newWebSocket","WebSocket","send","BalanceCalculation","process","NewBrokerAccount","broker","setBroker","accountNumber","setAccountNumber","token","setToken","setEnv","hide","animation","broker_name","account_number","Navigation","showNewAccount","setShowNewAccount","Navbar","bg","Brand","href","Nav","Link","to","NavDropdown","title","Item","Divider","onSelect","inline","FormControl","Dropdown","envValue","onEnvChange","marginLeft","Toggle","Menu","eventKey","NewRobotForm","robotName","setRobotName","strategy","setStrategy","account","setAccount","instrument","setInstrument","accountParams","robot_name","maxLength","CumulativeReturnChart","axisBorder","color","offsetX","offsetY","axisTicks","borderType","align","floating","fontWeight","RobotReturn","CumulativeReturn","RobotRisk","RobotDetails","robotData","setRobotData","priceData","setPriceData","BalanceChart","grid","borderColor","strokeDashArray","lines","row","colors","undefined","opacity","top","bottom","left","DailyPnlChart","RobotCashFlow","RobotBalance","balanceData","setBalanceData","cashflowData","setCashFlowData","pnlData","setPnlData","dateData","setDateData","balance_list","cf_list","pnl_list","date_list","balanceChartTitle","length","xs","md","RobotNav","robots","robotsData","setRobotsData","robotsOptions","robotChange","RobotTrades","losingTradeNumber","winningTradeNumber","losingTrades","winningTrades","totalWinner","totalLoser","push","i","winPerc","lossPerc","avgWinner","avgLoser","abs","RobotPricing","RobotProcesses","RobotPage","setRobot","rob","Check","label","InstrumentPage","App","robotEnvData","setRobotEnvData","portfolioData","setPortfolioData","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4f8ba5c4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EnvContext = React.createContext({\n    environment: 'live'\n});\n\nexport default EnvContext;","import {useState} from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst SliderWidget = (props) => {\n\n    const [value, setValue] = useState(props.defaultValue);\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    return (\n\n        <Form>\n            <Form.Group style={{margin: '0px'}}>\n                <Row>\n                    <Col>\n                        <Form.Label style={{verticalAlign:\"middle\"}}>{value}</Form.Label>\n                    </Col>\n                    <Col>\n                        <Form.Control onChange={handleChange} type=\"range\" min={props.min} max={props.max} step={props.step}\n                              value={value}/>\n                    </Col>\n                </Row>\n            </Form.Group>\n        </Form>\n\n    );\n};\n\nexport default SliderWidget;","import {useState} from \"react\";\nimport SliderWidget from \"../../components/SliderWidget\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\n\n// CSS\nimport \"../MainCSS.css\"\nimport Form from \"react-bootstrap/Form\";\n\nconst RiskTableRow = (props) => {\n\n    const [robot, setRobot] = useState(props.robot);\n    const [dailyRisk, setDailyRisk] = useState(props.dailyRisk);\n    const [tradeLimit, setTradeLimit] = useState(props.tradeLimit);\n    const [riskOnTrade, setRiskOnTrade] = useState(props.riskOnTrade);\n    const [pLevel, setPLevel] = useState(props.pLevel);\n    const [qType, setQType] = useState(props.qType);\n    const [quantity, setQuantity] = useState(props.quantity);\n\n    const UpdateRisk = () => {\n        axios.post(props.server + 'risk/update_robot_risk/', {\n            robot: robot,\n            daily_risk: dailyRisk,\n            nbm_trades: tradeLimit,\n            risk_per_trade: riskOnTrade,\n            pyramiding_level: pLevel,\n            quantity_type: qType,\n            quantity: quantity\n        })\n            .then(response => alert('Risk is updated for ' + robot))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n        console.log(robot)\n        console.log(tradeLimit)\n        console.log(riskOnTrade)\n    };\n\n    const tradeLimitHandler = (event) => {\n        setTradeLimit(event.target.value)\n    };\n\n    const tradeRiskHandler = (event) => {\n        setRiskOnTrade(event.target.value)\n    };\n\n    const dailyRiskHandler = (event) => {\n        setDailyRisk(event.target.value)\n    };\n\n    const quantityTypeHandler = (event) => {\n        setQType(event.target.value)\n    };\n\n    const quantityHandler = (event) => {\n        setQuantity(event.target.value)\n    };\n\n    console.log(qType, robot)\n\n    return (\n        <tr>\n            <td style={{verticalAlign: \"middle\"}}>{robot}</td>\n            <td style={{verticalAlign: \"middle\"}} onChange={dailyRiskHandler}><SliderWidget defaultValue={dailyRisk}\n                              min={0.00}\n                              max={0.20}\n                              step={0.005}/></td>\n            <td style={{verticalAlign: \"middle\"}} className=\"table-row\" onChange={tradeLimitHandler}><SliderWidget defaultValue={tradeLimit}\n                              min={0}\n                              max={20}\n                              step={1}/></td>\n            <td style={{verticalAlign: \"middle\"}} className=\"table-row\" onChange={tradeRiskHandler}><SliderWidget defaultValue={riskOnTrade}\n                              min={0.00}\n                              max={0.1}\n                              step={0.0025}/></td>\n            <td style={{verticalAlign: \"middle\"}}>\n                <Form.Control onChange={quantityTypeHandler} defaultValue={qType} as=\"select\">\n                    <option value={'Stop Based'}>Stop Based</option>\n                    <option value={'Fix'}>Fix</option>\n                </Form.Control>\n            </td>\n            <td style={{verticalAlign: \"middle\"}}>\n                <Form.Control onChange={quantityHandler} type=\"number\" placeholder={quantity}/>\n            </td>\n            <td style={{verticalAlign: \"middle\"}}><Button onClick={UpdateRisk}>Update</Button></td>\n        </tr>\n    );\n};\n\nexport default RiskTableRow;","import {useContext, useEffect, useState} from \"react\";\nimport EnvContext from \"../../context/env-context\";\nimport RiskTableRow from \"./RiskTableRow\";\n\n// Bootstrap\nimport Table from \"react-bootstrap/Table\";\n\n// CSS\nimport \"../MainCSS.css\"\n\nconst RiskTableData = (props) => {\n\n    const env = useContext(EnvContext)['environment'];\n\n    const [riskData, setRiskData] = useState([])\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            fetch(props.server + 'risk/get_robot_risk/' + env)\n                .then(response => response.json())\n                .then(data => setRiskData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const riskDataRow = riskData.map((data) =>\n        <RiskTableRow key={data['id']}\n                      robot={data['robot']}\n                      dailyRisk={data['daily_risk']}\n                      tradeLimit={data['daily_trade_limit']}\n                      riskOnTrade={data['risk_per_trade']}\n                      pLevel={data['pyramiding_level']}\n                      qType={data['quantity_type']}\n                      quantity={data['quantity']}\n                      server={props.server}/>\n    );\n\n    return (\n        <Table>\n            <thead style={{fontSize: 12}}>\n            <tr>\n                <th style={{verticalAlign: \"middle\"}}>Robot</th>\n                <th style={{verticalAlign: \"middle\"}}>Daily Loss Limit %</th>\n                <th style={{verticalAlign: \"middle\"}}>Max Number of Trades (Daily)</th>\n                <th style={{verticalAlign: \"middle\"}}>Risk per Trade %</th>\n                <th style={{verticalAlign: \"middle\"}}>Quantity Type</th>\n                <th style={{verticalAlign: \"middle\"}}>Quantity</th>\n                <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            {riskDataRow}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default RiskTableData;","import React from \"react\";\n\nconst ServerContext = React.createContext();\n\nexport default ServerContext;","import {useState, useEffect, useContext} from \"react\";\n\n// Bootstrap\nimport Button from \"react-bootstrap/Button\";\nimport Container from 'react-bootstrap/Container'\nimport Form from \"react-bootstrap/Form\";\nimport Table from 'react-bootstrap/Table'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport RiskTableData from \"./RiskPage/RiskTableData\";\nimport ServerContext from \"../context/server-context\";\n\n// CSS\nimport \"./MainCSS.css\"\n\nconst RiskPage = () => {\n\n    const server = useContext(ServerContext)['server'];\n\n    return (\n        <Container className={\"border\"} style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row>\n                <Col>\n                    <Container className={\"border\"} style={{height: '100%'}}>\n\n                    </Container>\n                </Col>\n                <Col>\n                    <Container>\n                        <Card className=\"card\">\n                            <Card.Title className=\"card-header-first\"> Robot Risk Parameters</Card.Title>\n                            <RiskTableData server={server}/>\n                        </Card>\n                    </Container>\n\n                </Col>\n            </Row>\n\n        </Container>\n    );\n};\n\nexport default RiskPage;","import Card from 'react-bootstrap/Card';\nimport Table from \"react-bootstrap/Table\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport './PerfDashBoard.css'\n\nconst PerformanceDashboard = (props) => {\n\n    // Fetching Robot balance data\n    const [perfData, setPerfData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'home/load_robot_stats/' + props.env)\n                .then(response => response['data'])\n                .then(data => setPerfData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const perfRespData = perfData.map((record) =>\n    <tr key={record['robot']['id']}>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-robot-name\">{record['robot']['name']}</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['balance']}</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['dtd_ret']} %</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['mtd_ret']} %</td>\n        <td style={{fontSize: 12, verticalAlign:\"middle\"}} className=\"table-row-other\">{record['ytd_ret']} %</td>\n    </tr>);\n\n\n\n    return (\n        <Card className={'shadow-sm'} style={{borderRadius:'0px'}}>\n            <Card.Body style={{padding: '0px'}}>\n                <Table size=\"sm\">\n                    <thead>\n                    <tr>\n                        <th className=\"table-row-robot-name\">Robot</th>\n                        <th>Balance</th>\n                        <th>DTD</th>\n                        <th>MTD</th>\n                        <th>YTD</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {perfRespData}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n\n};\n\nexport default PerformanceDashboard;","import Chart from \"react-apexcharts\";\n\nconst ApexChart = (props) => {\n    const state = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: props.xdata,\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.ydata\n            }\n        ]\n    };\n\n    return (\n            <Chart\n                options={state.options}\n                series={state.series}\n                type={props.chartType}\n                width=\"100%\"\n                height=\"80%\"\n            />\n        );\n}\n\nexport default ApexChart;\n","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport ApexChart from \"../../components/Charts\";\n\n\nconst RobotStatCards = (props) => {\n\n    const balanceRequestData = {\n        'env': props.env,\n        'start_date': 21,\n        'end_date': 34,\n    };\n\n    // Fetching Robot balance data\n    const [robotBalanceData, setRobotBalanceData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robot_balance/' + props.env, {params:balanceRequestData})\n                .then(response => response['data'])\n                .then(data => setRobotBalanceData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    // Fetching robot risk data\n    const [robotRiskData, setRobotRiskData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'risk/get_robot_risk/' + props.env)\n                .then(response => response['data'])\n                .then(data => setRobotRiskData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const widgetData = {\n        balance: robotBalanceData,\n        risk: robotRiskData,\n    };\n    console.log(widgetData)\n\n    const chartOptions ={\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: props.xdata,\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.ydata\n            }\n        ]\n    };\n\n    const chartData = robotBalanceData.map((record, index) =>\n\n        <Card className={'shadow-sm'} key={record['robot']} style={{marginTop: '5px', marginBottom: '5px', marginRight: '5px', height: '300px'}}>\n            <Card.Header as=\"h6\">{record['robot']}</Card.Header>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%', width: '100%', margin: '0px'}}>\n                    <Col style={{padding: '0px'}}>\n                        <ApexChart chartType=\"line\" xdata={record['date']} ydata={record['balance']}/>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n\n    return (\n        <Container className={\"border\"} style={{padding: '0px', overflow: 'scroll', height:'800px'}}>\n            {chartData}\n        </Container>\n    );\n};\n\nexport default RobotStatCards;\n","import Container from \"react-bootstrap/Container\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Card from 'react-bootstrap/Card';\n\nimport PerfDashBoard from \"./HomePage/PerfDashBoard\";\nimport {useContext} from \"react\";\n\nimport RobotStatCards from \"./HomePage/RobotStatCards\";\n\n//CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './HomePage.css';\n\n\n// Contexts\nimport EnvContext from \"../context/env-context\";\nimport ServerContext from \"../context/server-context\";\nimport {yellow} from \"@material-ui/core/colors\";\n\nconst HomePage = (props) => {\n    // Context variables\n    const env = useContext(EnvContext)['environment'];\n    const server = useContext(ServerContext)['server'];\n\n    const balanceRequestData = {\n        'env': 'live',\n        'start_date': 21,\n        'end_date': 34,\n    };\n\n    return (\n            <Container style={{background:'#FBFAFA', width: \"100%\", height: window.innerHeight}} fluid>\n            <Row style={{height: window.innerHeight}}>\n                <Col style={{height: '100%'}}>\n                    <Container>\n                        <Row style={{margin: '5px'}}>\n                            <h5 style={{textAlign: \"center\",width: '100%', margin: '0px'}}>Robots</h5>\n                        </Row>\n                        <RobotStatCards env={env} server={server}/>\n                    </Container>\n                </Col>\n                <Col style={{height: '100%'}}>\n                    <Container>\n                        <Row style={{margin: '5px'}}>\n                            <h5 style={{textAlign: \"center\", width: '100%', margin: '0px'}}>Performance</h5>\n                        </Row>\n                        <PerfDashBoard server={server} env={env}/>\n\n                    </Container>\n                    <Container>\n                        <Row style={{margin: '5px'}}>\n                            <h5 style={{textAlign: \"center\", width: '100%', margin: '0px'}}>Accounts</h5>\n                        </Row>\n                        <Row style={{height: '400px', paddingTop: '5px', paddingBottom: '5px'}}>\n                            <Col style={{paddingLeft: '5px', paddingRight: '5px'}}>\n                                <Card style={{height: '100%', width: '100%', margin: '0px'}}/>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default HomePage;","import React, {useState, useEffect, useContext} from \"react\";\n\nconst PortfolioContext = React.createContext();\n\nexport default PortfolioContext;","// Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nconst NewPortfolioForm = (props) => {\n\n    const [portfolioName, setPortfolioName] = useState('');\n    const [portfolioCode, setPortfolioCode] = useState('');\n    const [portType, setPortType] = useState('Trade');\n    const [currency, setCurrency] = useState('USD');\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const portfolioNameChangeHandler = (event) => {\n        setPortfolioName(event.target.value)\n    };\n\n    const portfolioCodeChangeHandler = (event) => {\n        setPortfolioCode(event.target.value);\n    };\n\n    const portTypeHandler = (event) => {\n        setPortType(event.target.value)\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    console.log(portfolioName, portType, currency)\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        axios.post(props.server + 'portfolios/new/', {\n            port_name: portfolioName,\n            port_type: portType,\n            port_currency: currency,\n            port_code: portfolioCode,\n        })\n            .then(function (response) {\n                if (response['data'] == 'New Portfolio was created!') {\n                    // window.location.reload();\n                } else {\n                    alert(response['data']);\n                }\n            })\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n        setShow(false);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                New Portfolio\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Portfolio</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio Name</Form.Label>\n                            <Form.Control onChange={portfolioNameChangeHandler} type=\"text\" placeholder=\"Portfolio Name\" required/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Code</Form.Label>\n                            <Form.Control onChange={portfolioCodeChangeHandler} type=\"text\" placeholder=\"Portfolio Code\" required/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Type</Form.Label>\n                            <Form.Control onChange={portTypeHandler} as=\"select\">\n                                <option value={'Trade'}>Trade</option>\n                                <option value={'Savings'}>Savings</option>\n                                <option value={'Investment'}>Investment</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Currency</Form.Label>\n                            <Form.Control onChange={currencyHandler} as=\"select\">\n                                <option value={'USD'}>USD</option>\n                                <option value={'HUF'}>HUF</option>\n                                <option value={'EUR'}>EUR</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewPortfolioForm;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioSettings = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Settings</Card.Title>\n            <h2>Price source</h2>\n\n        </Card>\n    );\n};\n\nexport default PortfolioSettings;","import Card from \"react-bootstrap/Card\";\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n// CSS\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst Holdings = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Holdings</Card.Title>\n            <Row style={{height: '100%'}}>\n                <Col sm={8}>\n                    <Container className=\"border\" style={{width:'100%', height: '100%', padding:'5px'}} fluid>\n\n                    </Container>\n                </Col>\n                <Col sm={4}>\n                    <Container className=\"border\" style={{width:'100%', height: '100%', padding:'5px'}} fluid>\n\n                    </Container>\n                </Col>\n            </Row>\n        </Card>\n    );\n};\n\nexport default Holdings;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst OptionLoader = (props) => {\n\n    const [rawData, setRawData] = useState('');\n\n    useEffect(() => {\n            axios.get(props.url, {params: props.params})\n                .then(response => response['data'].map((record) =>\n                    <option key={record['id']} value={record[props.code]}>{record[props.value]}</option>))\n                .then(data => setRawData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        rawData\n    );\n};\n\nexport default OptionLoader;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\n\nconst GetRobotLastPrice = (props) => {\n\n    const [price, setPrice] = useState(0.0);\n    const [date, setDate] = useState();\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_last_price/', {\n                params: {\n                    robot: props.robot,\n                    // start_date: props.start_date,\n                    // end_date: props.end_date,\n                }\n            })\n                .then(function(response){\n                    setPrice(response['data']['price']);\n                    setDate(response['data']['date']);\n                    props.getPrice(price);\n                })\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Form.Group>\n            <Form.Label>Price - {date}</Form.Label>\n            <h2>{Math.round((price) * 100) / 100}</h2>\n        </Form.Group>\n    );\n};\n\nexport default GetRobotLastPrice;\n","import Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport {useEffect, useState} from \"react\";\n\nimport OptionLoader from \"../../components/Options\";\nimport GetRobotPrice from \"../Robot/GetRobotPrice\";\n\nimport axios from \"axios\";\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nconst PortfolioBuy = (props) => {\n\n    const [show, setShow] = useState(false);\n    const [securityId, setSecurity] = useState('');\n    const [securityName, setSecurityName] = useState('');\n    const [unit, setUnit] = useState(0.0);\n    const [robotPrice, setRobotPrice] = useState(0.0);\n    const [robotQuantity, setRobotQuantity] = useState(0.0);\n\n    const instrumentParams = {\n        'env': props.env,\n    };\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const securityHandler = (event) => {\n        const selectIndex = event.nativeEvent.target.selectedIndex;\n\n        setSecurity(event.target.value);\n        setSecurityName(event.nativeEvent.target[selectIndex].text);\n        document.getElementById('unitInput').value = 0;\n        setRobotQuantity(0);\n        setUnit(0);\n    };\n\n    const unitHandler = (event) => {\n        setRobotQuantity(unit/robotPrice);\n        setUnit(event.target.value);\n\n    };\n\n    const getRobotPrice = (price) => {\n        setRobotPrice(price);\n        setRobotQuantity(unit/robotPrice);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        if (robotQuantity===0.0){\n            alert('Quantity can not be 0 !')\n        }else{\n            axios.post(props.server + 'portfolios/portfolio_trade/', {\n            portfolio: props.portfolio,\n            unit: robotQuantity,\n            price: robotPrice,\n            sec: securityName,\n            sec_type: 'Robot',\n            sec_id: securityId,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setShow(false);\n        };\n    };\n\n    return (\n        <>\n\n            <Button variant=\"primary\" onClick={handleShow}>\n                Buy Robot\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Buy Robot</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio</Form.Label>\n                            <Form.Control type=\"text\" placeholder={props.portfolio} value={props.portfolio} readOnly/>\n                        </Form.Group>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Robot</Form.Label>\n                                    <Form.Control onChange={securityHandler} as=\"select\">\n                                        <option></option>\n                                        <OptionLoader\n                                            url={props.server + 'robots/get_robots_with_instrument/'}\n                                            params={instrumentParams}\n                                            code={1}\n                                            value={2}/>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <GetRobotPrice server={props.server} robot={securityName} getPrice={getRobotPrice}/>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Unit to invest</Form.Label>\n                                    <Form.Control onChange={unitHandler} type=\"number\" min={0.0}\n                                                  defaultValue={0} id={'unitInput'}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Label>Portfolio Quantity</Form.Label>\n                                <h2>{Math.round(robotQuantity*100)/100}</h2>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default PortfolioBuy;","import Card from \"react-bootstrap/Card\";\n\nimport PortfolioBuy from \"./PortfolioBuy\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioTransactions = (props) => {\n\n    const [portTransData, setPortTransData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_portfolio_transactions/' + props.portfolio)\n                .then(response => response['data'].map((data) =>\n                    <tr key={data[0]}>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[1]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[2]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[3]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[4]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[5]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[6]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[7]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[8]}</td>\n                    </tr>\n                ))\n                .then(data => setPortTransData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Transactions</Card.Title>\n            <Row style={{width:'100%', margin:'0px'}}>\n\n            </Row>\n\n            <div style={{height:'100%',overflowY: 'scroll', overflowX: 'hidden'}}>\n                <Table>\n                <thead className=\"table-header-first\">\n                <tr>\n                    <td className=\"table-header-row\">Portfolio</td>\n                    <td className=\"table-header-row\">Quantity</td>\n                    <td className=\"table-header-row\">Price</td>\n                    <td className=\"table-header-row\">Market Value</td>\n                    <td className=\"table-header-row\">Trade Date</td>\n                    <td className=\"table-header-row\">Instrument</td>\n                    <td className=\"table-header-row\">Instrument Type</td>\n                    <td className=\"table-header-row\">Source</td>\n                </tr>\n                </thead>\n                <tbody >\n                {portTransData}\n                </tbody>\n            </Table>\n            </div>\n\n        </Card>\n    );\n};\n\nexport default PortfolioTransactions;","import Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst NewPortCashFlow = (props) => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [value, setValue] = useState(0.0);\n    const [type, setType] = useState('INFLOW');\n    const [currency, setCurrency] = useState('USD');\n\n    const valueHandler = (event) => {\n        setValue(event.target.value);\n    };\n\n    const cashTypeHandler = (event) => {\n        setType(event.target.value);\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        console.log('form submited')\n        axios.post(props.server + 'portfolios/new_cash_flow/', {\n            port_name: props.portfolio,\n            amount: value,\n            type: type,\n            currency: currency,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setCurrency('USD');\n        setShow(false);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                Funding\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Funding</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio</Form.Label>\n                            <Form.Control type=\"text\" placeholder={props.portfolio} value={props.portfolio} readOnly />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Cash Flow</Form.Label>\n                            <Form.Control onChange={valueHandler} type=\"number\" placeholder=\"Value\"/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Currency</Form.Label>\n                            <Form.Control onChange={currencyHandler} as=\"select\">\n                                <option value={'USD'}>USD</option>\n                                <option value={'EUR'}>EUR</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Type</Form.Label>\n                            <Form.Control onChange={cashTypeHandler} as=\"select\">\n                                <option value={'INFLOW'}>Inflow</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewPortCashFlow;","import Card from \"react-bootstrap/Card\";\nimport NewPortCashFlow from \"./NewPortCashFlow\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioNav = (props) => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">NAV</Card.Title>\n        </Card>\n    );\n};\n\nexport default PortfolioNav;","import Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst PortfolioDetails = (props) => {\n\n    const [portData, setPortData] = useState([props.default]);\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_portfolio_data/'+ props.portfolio)\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setPortData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Portfolio Details</Card.Title>\n            <Card.Body>\n                <Row>\n                    <Col>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Portfolio Code</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['portfolio_code']}</p>\n                        </div>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Type</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['portfolio_type']}</p>\n                        </div>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Currency</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['currency']}</p>\n                        </div>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Inception Date</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['inception_date']}</p>\n                        </div>\n                        <div style={{display: 'flex', width: '100%'}}>\n                        <p>Status</p>\n                        <p style={{position: 'absolute', right: '20px'}}>{portData[0]['status']}</p>\n                    </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PortfolioDetails;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioGroup = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Portfolio Group</Card.Title>\n        </Card>\n    );\n};\n\nexport default PortfolioGroup;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioRisk = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Risk</Card.Title>\n\n\n        </Card>\n    );\n};\n\nexport default PortfolioRisk;","import Card from \"react-bootstrap/Card\";\n\nimport \"../PortfolioPage.css\"\nimport \"../MainCSS.css\"\n\nconst PortfolioRisk = () => {\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Return</Card.Title>\n\n\n        </Card>\n    );\n};\n\nexport default PortfolioRisk;","import Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../MainCSS.css\"\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst PortfolioCashFlow = (props) => {\n\n    const [dataSeries, setDataSeries] = useState([]);\n\n    let chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: true}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: dataSeries,\n            }\n        ]\n    };\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_cash_flow/', {\n                params: {\n                    portfolio: props.portfolio,\n                    start_date: props.start_date,\n                    end_date: props.end_date,\n                }\n            }).then(response => {\n                setDataSeries(response['data']['amount'].map(data => data));\n            }).catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Cash Flow History</Card.Title>\n            <Card.Body>\n                <Row style={{height:'100%', width:'100%', margin:'0px'}}>\n                    <Col style={{height:'100%'}}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"/>\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PortfolioCashFlow;","import Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../MainCSS.css\"\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst CashHoldings = (props) => {\n\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_cash_holdings/', {\n                params: {\n                    portfolio: props.portfolio,\n                    date: props.end_date,\n                }\n            })\n                .then(response => response['data'].map(data=>data['amount']))\n                .then(data=>setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const chartOptions = {\n        options: {\n              chart: {\n                type: 'donut',\n              },\n              responsive: [{\n                breakpoint: 480,\n                options: {\n                  chart: {\n                    width: 200\n                  },\n                  legend: {\n                    position: 'bottom'\n                  }\n                }\n              }],\n            },\n\n        series: [50.0, 50.0\n\n        ]\n    };\n\n    const chartOptions2 = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"USD\",\n                data: [200,],\n            },\n            {\n                name: \"EUR\",\n                data: [300,],\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Cash Holdings</Card.Title>\n            <Card.Body>\n                <Row style={{height:'50%', width:'100%'}}>\n                    <Col style={{height:'100%'}}>\n                        <div style={{padding:'20px'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'donut'}\n                                width=\"100%\"\n                                height=\"100%\"/>\n\n                        </div>\n                    </Col>\n                </Row>\n                <Row style={{height:'50%', width:'100%'}}>\n                    <Col style={{height:'100%'}}>\n                        <div style={{padding:'20px'}}>\n                            <Chart\n                                options={chartOptions2.options}\n                                series={chartOptions2.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"/>\n\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CashHoldings;","import {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\n\nconst PositionCalculation = (props) => {\n    const [loadState, setLoadState] = useState(false);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        setLoadState(true);\n\n        axios.post(props.server + 'portfolios/positions/', {\n            portfolio: 'ALL',\n            start_date: props.start_date,\n            end_date: props.end_date,\n        })\n            .then(response => setLoadState(false))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <>\n            <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                <Form.Group>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Position\n                    </Button>\n                </Form.Group>\n            </Form>\n            <Modal show={loadState}>\n                <Modal.Body style={{width: '200px', height: '300px'}}>\n                    <div style={{width:'100%'}}>\n                        <h5>Portfolio position calculation</h5>\n                        <h5>Rundate {props.start_date} and {props.end_date}</h5>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default PositionCalculation;","import {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\n\nconst CashHoldingCalculation = (props) => {\n    const [loadState, setLoadState] = useState(false);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        setLoadState(true);\n\n        axios.post(props.server + 'portfolios/cash_holding/', {\n            portfolio: 'ALL',\n            start_date: props.start_date,\n            end_date: props.end_date,\n        })\n            .then(response => setLoadState(false))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <>\n            <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                <Form.Group>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Cash Holding\n                    </Button>\n                </Form.Group>\n            </Form>\n            <Modal show={loadState}>\n                <Modal.Body style={{width: '100%', height: '300px'}}>\n                    <div style={{width:'100%'}}>\n                        <h5>Portfolio cash holding calculation</h5>\n                        <h5>Rundate {props.start_date} and {props.end_date}</h5>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default CashHoldingCalculation;","import React, {useState, useEffect, useContext} from \"react\";\n\nconst RobotContext = React.createContext();\n\nexport default RobotContext;","import {useContext, useEffect, useState} from \"react\";\n\nimport ServerContext from \"../context/server-context\";\nimport EnvContext from \"../context/env-context\";\nimport PortfolioContext from \"../context/portfolio-context\";\nimport axios from \"axios\";\n\nimport NewPortfolioForm from \"./PortfolioPage/NewPortfolioForm\";\nimport PortfolioSettings from \"./PortfolioPage/PortfolioSettings\";\nimport Holdings from \"./PortfolioPage/Holdings\";\nimport PortfolioTransactions from \"./PortfolioPage/PortfolioTransactions\";\nimport PortfolioNav from \"./PortfolioPage/PortfolioNav\";\nimport PortfolioDetails from \"./PortfolioPage/PortfolioDetails\";\nimport PortfolioGroup from \"./PortfolioPage/PortfolioGroup\";\nimport PortfolioRisk from \"./PortfolioPage/PortfolioRisk\";\nimport PortfolioReturn from \"./PortfolioPage/PortfolioReturn\";\nimport PortfolioCashFlow from \"./PortfolioPage/PortfolioCashFlow\";\nimport CashHolding from \"./PortfolioPage/CashHolding\";\n\n// Calculations\nimport PositionCalculation from \"./PortfolioPage/PositionCalculation\";\nimport CashHoldingCalculation from \"./PortfolioPage/CashHoldingCalc\";\n\n// Bootstrap\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport OptionLoader from \"../components/Options\";\n\n// CSS\nimport \"./PortfolioPage.css\"\n\nimport PortfolioBuy from \"./PortfolioPage/PortfolioBuy\";\nimport NewPortCashFlow from \"./PortfolioPage/NewPortCashFlow\";\n\n// Contexts\nimport RobotContext from \"../context/robot-context\";\n\nconst PortfolioPage = (props) => {\n    // Date variables\n    const date = new Date();\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const defaultRobots = useContext(RobotContext)['robots'];\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n    const portfolios = useContext(PortfolioContext)['portfolioData'];\n    const [portfolio, setPortfolio] = useState(portfolios[0]['portfolio_code']);\n    const [startDate, setStartDate] = useState(firstDay.toISOString().substr(0,10));\n    const [endDate, setEndDate] = useState(date.toISOString().substr(0,10));\n\n    console.log(defaultRobots)\n\n    const portfolioOptions = portfolios.map((record) =>\n        <option key={record['id']} value={record['portfolio_code']}>{record['portfolio_name']}</option>)\n\n    const portSelectHandler = (event) => {\n        setPortfolio(event.target.value);\n    };\n\n    const portSelect = (port) => {\n        setPortfolio(port);\n    };\n\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n\n    const endDateHandler = (event) => {\n        setEndDate(event.target.value);\n    };\n\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row style={{height: '60px', padding:'5px'}}>\n                <Col style={{display: 'flex'}}>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row}>\n                                <Form.Label className=\"form-label-first\" column sm={2}>\n                                    Portfolio\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control onChange={portSelectHandler} as=\"select\">\n                                        {portfolioOptions}\n                                    </Form.Control>\n\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group as={Row}>\n                                <Form.Label className=\"form-label-first\" column sm={2}>\n                                    From\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control type=\"date\" onChange={startDateHandler} defaultValue={firstDay.toISOString().substr(0,10)}/>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group as={Row}>\n                                <Form.Label className=\"form-label-first\" column sm={2}>\n                                    To\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control type=\"date\" onChange={endDateHandler} defaultValue={date.toISOString().substr(0,10)}/>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <Col>\n                                    <NewPortfolioForm server={server}/>\n                                </Col>\n                                <Col>\n                                    <NewPortCashFlow portfolio={portfolio} server={server}/>\n                                </Col>\n                                <Col>\n                                    <PortfolioBuy portfolio={portfolio} server={server}\n                                                  env={env}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col>\n                            <Row>\n                                <Col>\n                                    Calculations\n                                </Col>\n                                <Col>\n                                    <PositionCalculation server={server} start_date={startDate} end_date={endDate}/>\n                                </Col>\n                                <Col>\n                                    <CashHoldingCalculation server={server} start_date={startDate} end_date={endDate}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Row style={{height: '300px', padding: '5px'}}>\n                        <Col style={{height: '100%'}}>\n                            <PortfolioDetails portfolio={portfolio} server={server} default={portfolios[0]}/>\n                        </Col>\n                        <Col>\n                            <PortfolioNav portfolio={portfolio} server={server}/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col>\n                            <PortfolioRisk/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col>\n                            <PortfolioReturn/>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    <Row style={{height: '300px', padding: '5px'}}>\n                        <Col style={{height: '100%'}}>\n                            <PortfolioGroup/>\n                        </Col>\n                        <Col>\n                            <PortfolioSettings/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col style={{height:'100%'}} sm={8}>\n                            <Holdings/>\n                        </Col>\n                        <Col style={{height:'100%'}} sm={4}>\n                            <CashHolding portfolio={portfolio} server={server} end_date={endDate}/>\n                        </Col>\n                    </Row>\n                    <Row style={{height: '500px', padding: '5px'}}>\n                        <Col style={{height:'100%'}} sm={8}>\n                            <PortfolioTransactions portfolio={portfolio} server={server}/>\n                        </Col>\n                        <Col style={{height:'100%'}} sm={4}>\n                            <PortfolioCashFlow portfolio={portfolio} server={server} start_date={startDate} end_date={endDate}/>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default PortfolioPage;","import {useState} from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nconst PriceParagraph = (props) => {\n    const [price, setPrice] = useState(1.0);\n    const [ask, setAsk] = useState(1.0);\n\n    props.socketConnection.onmessage = function (event){\n        let responseData = JSON.parse(event.data)\n            setPrice(responseData['bid']);\n            setAsk(responseData['ask']);\n        console.log(JSON.parse(event.data))\n    };\n\n    return (\n        <div>\n            <p>BID: {price}</p>\n            <p>ASK: {ask}</p>\n        </div>\n    );\n\n};\n\nexport default PriceParagraph;","import SliderWidget from \"../../components/SliderWidget\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\nimport PriceParagraph from \"./PriceParagraph\";\n\nconst TradeTableRow = (props) => {\n\n    // const newWebSocket = new WebSocket('ws://127.0.0.1:8000/trade/ws/')\n    // newWebSocket.send('XAG_USD')\n\n    // console.log(\"New trade\", newWebSocket)\n\n    const CloseTrade = () => {\n        axios.post(props.server + 'trade_page/close_trade/', {\n            broker_id: props.broker_id,\n            robot: props.robot,\n            trd_id: props.id,\n        })\n            .then(response => alert(response['data']))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <tr>\n            <td style={{fontSize: 12, verticalAlign:\"middle\" }}>{props.id}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\" }}>{props.broker_id}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.security}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.robot}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.quantity}</td>\n            {/*<td><PriceParagraph socketConnection={newWebSocket}/></td>*/}\n            <td><Button onClick={CloseTrade}>Close</Button></td>\n        </tr>\n    );\n};\n\nexport default TradeTableRow;","import {useContext, useEffect, useState} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport TradeTableRow from \"./TradeTableRow\";\n\n\nconst TradeTableData = (props) => {\n\n    const [tradeData, setTradeData] = useState([])\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            fetch(props.server + 'trade_page/get_open_trades/' + props.env)\n                .then(response => response.json())\n                .then(data => setTradeData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const tradeDataRow = tradeData.map((record)=>\n        <TradeTableRow\n            server={props.server}\n            key={record['id']}\n            id={record['id']}\n            broker_id={record['broker_id']}\n            security={record['security']}\n            robot={record['robot']}\n            quantity={record['quantity']}/>)\n\n    return (\n        <Card style={{width: '100%'}}>\n            <Table>\n                <thead style={{fontSize: 12}}>\n                <tr>\n                    <th style={{verticalAlign: \"middle\"}}>Platform ID</th>\n                    <th style={{verticalAlign: \"middle\"}}>Broker ID</th>\n                    <th style={{verticalAlign: \"middle\"}}>Security</th>\n                    <th style={{verticalAlign: \"middle\"}}>Robot</th>\n                    <th style={{verticalAlign: \"middle\"}}>Quantity</th>\n                    <th style={{verticalAlign: \"middle\"}}>Price</th>\n                    <th style={{verticalAlign: \"middle\"}}></th>\n                </tr>\n                </thead>\n\n                <tbody style={{height: '100%', overflow: 'scroll'}}>\n                {tradeDataRow}\n                </tbody>\n            </Table>\n\n        </Card>\n    );\n};\n\nexport default TradeTableData;","// React Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from 'react-bootstrap/Button'\n\nimport TradeTableData from \"./TradePage/TradeTableData\";\nimport PriceParagraph from \"./TradePage/PriceParagraph\";\n\nimport {useContext, useState} from \"react\";\n\n// Contexts\nimport EnvContext from \"../context/env-context\";\nimport ServerContext from \"../context/server-context\";\nimport axios from \"axios\";\n\nconst TradePage = () => {\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n\n    // This part connects a websocket with the back end from the front end\n    const newWebSocket = new WebSocket('ws://127.0.0.1:8000/trade/price_stream/')\n\n    console.log(newWebSocket)\n\n    const testSocket = () => {\n        // This code sends data to the websocket form front end\n        newWebSocket.send(\"start\")\n        console.log('Streaming request is sent from front end to back end.')\n    };\n\n    const closeSocket = () => {\n        // This code closes the websocket connection with the back end\n        newWebSocket.send(\"stop\")\n        // newWebSocket.close()\n        console.log('Streaming is stopped')\n    };\n\n    const testSocket2 = () => {\n        axios.get(server + 'robots/test_socket/',)\n                .then()\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n    };\n\n    return (\n        <Container className={'border'} style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row style={{height: '60%'}}>\n                <Button variant=\"primary\" onClick={testSocket}>WS</Button>\n                <Button variant=\"primary\" onClick={closeSocket}>WS Close</Button>\n                <Button variant=\"primary\" onClick={testSocket2}>TEST SOCKET</Button>\n                <PriceParagraph socketConnection={newWebSocket}/>\n            </Row>\n            <Row style={{height: '40%', background: 'blue'}}>\n                <TradeTableData env={env} server={server}/>\n            </Row>\n        </Container>\n    );\n};\n\nexport default TradePage;","import {Card} from \"react-bootstrap\";\n\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\n\nconst BalanceCalculation = (props) => {\n    const [loadState, setLoadState] = useState(false);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        setLoadState(true);\n\n        axios.post(props.server + 'robots/calculate_robot_balance/', {\n            process: 'Balance',\n            robot: props.robot,\n            start_date: props.start_date,\n            end_date: props.end_date,\n        })\n            .then(response => setLoadState(false))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <>\n            <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                <Form.Group>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Balance\n                    </Button>\n                </Form.Group>\n            </Form>\n            <Modal show={loadState}>\n                <Modal.Body style={{width: '200px', height: '300px'}}>\n                    <h2>Calculating ...</h2>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default BalanceCalculation;","import Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\n\nimport axios from \"axios\";\n\nconst NewBrokerAccount = (props) => {\n\n    const [broker, setBroker] = useState('');\n    const [accountNumber, setAccountNumber] = useState('');\n    const [token, setToken] = useState('');\n    const [env, setEnv] = useState('live');\n    const [currency, setCurrency] = useState('USD');\n\n    const onHide = () => {\n        props.hide();\n    };\n\n    const submitHandler = () => {\n        axios.post(props.server + 'accounts/new_account/', {\n            broker_name: broker,\n            account_number: accountNumber,\n            env: env,\n            token: token,\n            currency: currency,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setBroker('');\n        setAccountNumber('');\n        setToken('');\n        setEnv('live');\n        setCurrency('USD');\n        props.hide();\n    };\n\n    const brokerNameHandler = (event) => {\n        setBroker(event.target.value);\n    };\n\n    const accountNumberHandler = (event) => {\n        setAccountNumber(event.target.value);\n    };\n\n    const tokenHandler = (event) => {\n        setToken(event.target.value);\n    };\n\n    const envHandler = (event) => {\n        setEnv(event.target.value);\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    return (\n        <Modal show={props.show} onHide={onHide} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>New Account</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Group>\n                    <Form.Control onChange={brokerNameHandler} type=\"text\" placeholder=\"Broker Name\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control onChange={accountNumberHandler} type=\"text\" placeholder=\"Account Number\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control onChange={tokenHandler} type=\"text\" placeholder=\"Token\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Environment</Form.Label>\n                    <Form.Control onChange={envHandler} as=\"select\">\n                        <option value={'live'}>Live</option>\n                        <option value={'demo'}>Demo</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Currency</Form.Label>\n                    <Form.Control onChange={currencyHandler} as=\"select\">\n                        <option value={'USD'}>USD</option>\n                        <option value={'EUR'}>EUR</option>\n                    </Form.Control>\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onHide}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={submitHandler}>\n                    Save\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default NewBrokerAccount;","import { Navbar, Nav, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { Link } from 'react-router-dom'\n\nimport {useContext, useState} from \"react\";\n\nimport BalanceCalculation from \"../Pages/Robot/BalanceCalculation\";\n\nimport NewBrokerAccount from \"./NewBrokerAccount\";\nimport ServerContext from \"../context/server-context\";\n\nconst Navigation = (props) => {\n\n    const server = useContext(ServerContext)['server'];\n\n    const [showNewAccount, setShowNewAccount] = useState(false);\n\n    const envChange = (envValue) => {\n        props.onEnvChange(envValue);\n    };\n\n    // New account handlers\n    const newAccountHandler = () => {\n        setShowNewAccount(true);\n    };\n\n    const hideNewAccount = () => {\n        setShowNewAccount(false);\n    };\n\n    return (\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">FFM SYSTEM</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to={'/home'}>Home</Nav.Link>\n                    <Nav.Link as={Link} to={'/portfolio'}>Portfolio</Nav.Link>\n                    <Nav.Link as={Link} to={'/robot'}>Robot</Nav.Link>\n                    <Nav.Link as={Link} to={'/risk'}>Risk</Nav.Link>\n                    <Nav.Link as={Link} to={'/instruments'}>Instrument</Nav.Link>\n                    <Nav.Link as={Link} to={'/trade'}>Trade</Nav.Link>\n                    <NavDropdown title=\"Calculations\">\n                        <NavDropdown.Item>Robot Balance</NavDropdown.Item>\n                        <NavDropdown.Item></NavDropdown.Item>\n                        <NavDropdown.Divider/>\n                        <NavDropdown.Item>Portfolio Holdings</NavDropdown.Item>\n                    </NavDropdown>\n                    <NavDropdown title=\"Broker Accounts\">\n                        <NavDropdown.Item onSelect={newAccountHandler}>New</NavDropdown.Item>\n                        <NavDropdown.Item>Update</NavDropdown.Item>\n                        <NavDropdown.Item>Delete</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n                <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\n                    <Button variant=\"outline-info\">Search</Button>\n                </Form>\n                <Dropdown onSelect={envChange} style={{marginLeft:'10px'}}>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        {props.env}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item eventKey=\"live\">Live</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"demo\">Demo</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <NewBrokerAccount show={showNewAccount} hide={hideNewAccount} server={server}/>\n            </Navbar>\n\n    );\n};\n\nexport default Navigation;","import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {useEffect, useState, useRef} from \"react\";\nimport axios from \"axios\";\nimport OptionLoader from \"../../components/Options\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst NewRobotForm = (props) => {\n    const [robotName, setRobotName] = useState('');\n    const [strategy, setStrategy] = useState('');\n    const [broker, setBroker] = useState('oanda');\n    const [env, setEnv] = useState('live');\n    const [account, setAccount] = useState('');\n    const [instrument, setInstrument] = useState('');\n\n    console.log(account);\n    console.log(instrument)\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const accountParams = {\n        'broker': broker,\n        'env': env,\n    };\n\n    const instrumentParams = {\n        'broker': broker,\n    };\n\n    const robotNameChangeHandler = (event) => {\n        setRobotName(event.target.value)\n    };\n\n    const robotStrategyHandler = (event) => {\n        setStrategy(event.target.value)\n    };\n\n    const envHandler = (event) => {\n        setEnv(event.target.value);\n    };\n\n    const instHandler = (event) => {\n        setInstrument(event.target.value);\n    };\n\n    const brokerHandler = (event) => {\n        setBroker(event.target.value);\n    };\n\n    const accountHandler = (event) => {\n        setAccount(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        axios.post(props.server + 'robots/new_robot/', {\n            robot_name: robotName,\n            strategy: strategy,\n            security: instrument,\n            broker: broker,\n            env: env,\n            account: account,\n        })\n                .then(response => console.log(response))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setShow(false)\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                New Robot\n            </Button>\n\n            <Modal show={show} onHide={handleClose} animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Robot</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Robot Name</Form.Label>\n                            <Form.Control onChange={robotNameChangeHandler} type=\"text\" placeholder=\"Robot Name\" maxLength={20}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Strategy</Form.Label>\n                            <Form.Control onChange={robotStrategyHandler} as=\"select\">\n                                <option value={'Initiative'}>Initiative</option>\n                                <option value={'Responsive'}>Responsive</option>\n                                <option value={'Correction'}>Correction</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Broker</Form.Label>\n                            <Form.Control onChange={brokerHandler} as=\"select\">\n                                <option>oanda</option>\n                                <option>Fix</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Environment</Form.Label>\n                            <Form.Control onChange={envHandler} as=\"select\">\n                                <option value={'live'}>Live</option>\n                                <option value={'demo'}>Demo</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Instruments</Form.Label>\n                            <Form.Control onChange={instHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'instruments/get_instruments/'}\n                                    params={instrumentParams}\n                                    code={'instrument_name'}\n                                    value={'instrument_name'}\n                                />\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Account Number</Form.Label>\n                            <Form.Control onChange={accountHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'accounts/get_accounts_data/'}\n                                    params={accountParams}\n                                    code={'account_number'}\n                                    value={'account_number'}\n                                />\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewRobotForm;","import Chart from \"react-apexcharts\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Card from \"react-bootstrap/Card\";\n\nconst CumulativeReturnChart = (props) => {\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false},\n                axisBorder: {\n                    show: false,\n                    color: '#78909C',\n                    height: 1,\n                    width: '100%',\n                    offsetX: 0,\n                    offsetY: 0\n                },\n                axisTicks: {\n                    show: false,\n                    borderType: 'solid',\n                    color: '#78909C',\n                    height: 6,\n                    offsetX: 0,\n                    offsetY: 0\n                },\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        title: {\n            text: 'Cumulative Return',\n            align: 'left',\n            margin: 10,\n            offsetX: 0,\n            offsetY: 0,\n            floating: false,\n            style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                // fontFamily: undefined,\n                color: '#263238'\n            },\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.data,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Return</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'line'}\n                                width=\"100%\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n\n};\n\nexport default CumulativeReturnChart;","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n// Charts\nimport CumulativeReturnChart from \"./Charts/CumulativeReturn\";\n\nconst RobotReturn = (props) => {\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/cumulative_ret/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date\n                }\n            })\n                .then(response => response['data'].map(data => data))\n                .then(data => setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <CumulativeReturnChart data={chartData}/>\n    );\n};\n\nexport default RobotReturn;","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nconst RobotRisk = (props) => {\n\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/drawdown/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date\n                }\n            })\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: chartData,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Risk</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <Chart\n                            options={chartOptions.options}\n                            series={chartOptions.series}\n                            type={'bar'}\n                            width=\"100%\"\n                            height=\"100%\"\n                        />\n                    </Col>\n                </Row>\n\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RobotRisk;","import Card from \"react-bootstrap/Card\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/Container\";\n\nconst RobotDetails = (props) => {\n\n    const [robotData, setRobotData] = useState([props.default]);\n    const [priceData, setPriceData] = useState([]);\n    console.log(priceData)\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robot/'+props.robot)\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setRobotData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_last_price/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date,\n                }\n            })\n                .then(function(response){\n                    const data = response['data'];\n                    setPriceData(data);\n                })\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Row style={{height: '100px', padding: '5px', margin: '5px'}}>\n            <Card className=\"card\" style={{margin: '0px'}}>\n                {/*<Card.Title className=\"card-header-first\">Details</Card.Title>*/}\n                <Card.Body style={{padding: '5px'}}>\n                    <Row style={{height: '100%', width: '100%', margin: '0px'}}>\n                        <Col style={{height: '100%'}}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Strategy</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['strategy']}</p>\n                            </Col>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Security</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['security']}</p>\n                            </Col>\n                        </Col>\n                        <Col style={{height: '100%'}}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Inception Date</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['inception_date']}</p>\n                            </Col>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Broker</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['broker']}</p>\n                            </Col>\n\n                        </Col>\n                        <Col style={{height: '100%'}}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Account Number</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['account_number']}</p>\n                            </Col>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Last Price on {priceData['date']}</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{Math.round(priceData['price'] * 100) / 100}</p>\n                            </Col>\n                        </Col>\n                    </Row>\n                </Card.Body>\n\n            </Card>\n        </Row>\n    );\n};\n\nexport default RobotDetails;","import Chart from \"react-apexcharts\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst BalanceChart = (props) => {\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false},\n                axisBorder: {\n                    show: false,\n                    color: '#78909C',\n                    height: 1,\n                    width: '100%',\n                    offsetX: 0,\n                    offsetY: 0\n                },\n                axisTicks: {\n                    show: false,\n                    borderType: 'solid',\n                    color: '#78909C',\n                    height: 6,\n                    offsetX: 0,\n                    offsetY: 0\n                },\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            grid: {\n                show: false,\n                borderColor: '#90A4AE',\n                strokeDashArray: 0,\n                position: 'back',\n                xaxis: {\n                    lines: {\n                        show: false\n                    }\n                },\n                yaxis: {\n                    lines: {\n                        show: false\n                    }\n                },\n                row: {\n                    colors: undefined,\n                    opacity: 0.5\n                },\n                column: {\n                    colors: undefined,\n                    opacity: 0.5\n                },\n                padding: {\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0\n                },\n            },\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        title: {\n            text: 'Cumulative Return',\n            align: 'left',\n            margin: 10,\n            offsetX: 0,\n            offsetY: 0,\n            floating: false,\n            style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                // fontFamily: undefined,\n                color: '#263238'\n            },\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.data,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">{props.title}</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'line'}\n                                width=\"100%\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BalanceChart;","import Chart from \"react-apexcharts\";\nimport Row from 'react-bootstrap/Row';\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\n\nconst DailyPnlChart = (props) => {\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n\n            xaxis: {\n                categories: [],\n                labels: {show: false},\n                axisBorder: {\n                    show: false,\n                    color: '#78909C',\n                    height: 1,\n                    width: '100%',\n                    offsetX: 0,\n                    offsetY: 0\n                },\n                axisTicks: {\n                    show: false,\n                    borderType: 'solid',\n                    color: '#78909C',\n                    height: 6,\n                    offsetX: 0,\n                    offsetY: 0\n                },\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            grid: {\n                show: false,\n                borderColor: '#90A4AE',\n                strokeDashArray: 0,\n                position: 'back',\n                xaxis: {\n                    lines: {\n                        show: false\n                    }\n                },\n                yaxis: {\n                    lines: {\n                        show: false\n                    }\n                },\n                row: {\n                    colors: undefined,\n                    opacity: 0.5\n                },\n                column: {\n                    colors: undefined,\n                    opacity: 0.5\n                },\n                padding: {\n                    top: 0,\n                    right: 0,\n                    bottom: 0,\n                    left: 0\n                },\n            },\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        title: {\n            text: 'Cumulative Return',\n            align: 'left',\n            margin: 0,\n            offsetX: 100,\n            offsetY: 100,\n            floating: false,\n            style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                // fontFamily: undefined,\n                color: '#263238'\n            },\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.data,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Daily P&L</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DailyPnlChart;","import Card from \"react-bootstrap/Card\";\nimport Row from 'react-bootstrap/Row';\nimport Chart from \"react-apexcharts\";\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Col from \"react-bootstrap/Col\";\n\nconst RobotCashFlow = (props) => {\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.data,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Cash Flow History</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RobotCashFlow;","import Card from \"react-bootstrap/Card\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\n\nimport BalanceChart from \"./Charts/BalanceChart\";\nimport DailyPnlChart from \"./Charts/DailyPnlChart\";\nimport RobotCashFlow from \"./RobotCashFlow\";\n\nconst RobotBalance = (props) => {\n\n    const [balanceData, setBalanceData] = useState([]);\n    const [cashflowData, setCashFlowData] = useState([]);\n    const [pnlData, setPnlData] = useState([]);\n    const [dateData, setDateData] = useState([]);\n\n    // console.log(chartData)\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_balance/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date,\n                }\n            })\n                .then(function(response){\n                    const data = response['data'];\n                    const balance_list = data.map(data => data['close_balance']);\n                    const cf_list = data.map(data => data['cash_flow']);\n                    const pnl_list = data.map(data => data['realized_pnl']);\n                    const date_list = data.map(data => data['date']);\n\n                    setBalanceData(balance_list);\n                    setCashFlowData(cf_list);\n                    setPnlData(pnl_list);\n                    setDateData(date_list);\n                })\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const balanceChartTitle='Latest calculated balance on ' + dateData[dateData.length - 1] + ' was ' + balanceData[balanceData.length - 1]\n\n    return (\n        <Row style={{height: '300px', padding:'5px', margin:'5px', display: 'flex'}}>\n            <Col xs={6} md={4} style={{height:'100%', paddingLeft:'0px'}}>\n               <BalanceChart data={balanceData} title={balanceChartTitle}/>\n                    {/*<Card.Title*/}\n                    {/*    className=\"card-header-first\">Latest calculated balance on {dateData[dateData.length - 1]} is {balanceData[balanceData.length - 1]}</Card.Title>*/}\n            </Col>\n            <Col xs={6} md={4} style={{height:'100%'}}>\n                <DailyPnlChart data={pnlData}/>\n            </Col>\n            <Col xs={6} md={4} style={{height:'100%', paddingRight:'0px'}}>\n                <RobotCashFlow data={cashflowData}/>\n            </Col>\n        </Row>\n    );\n};\n\nexport default RobotBalance;\n","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nimport BalanceCalculation from \"./BalanceCalculation\";\n\nconst RobotNav = (props) => {\n    const [robotsData, setRobotsData] = useState(props.robots);\n\n    const robotSelectHandler = (event) => {\n        props.robotChange(event.target.value);\n    };\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robots/' + props.env)\n                .then(response => setRobotsData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const robotsOptions = robotsData.map((record) =>\n        <option key={record['id']} value={record['name']}>{record['name']}</option>);\n\n    return (\n        <>\n            <Form.Group as={Row}>\n                <Form.Label className=\"form-label-first\" column sm={2}>\n                    Robot\n                </Form.Label>\n                <Col sm={10}>\n                    <Form.Control onChange={robotSelectHandler} as=\"select\">\n                        {robotsOptions}\n                    </Form.Control>\n                </Col>\n            </Form.Group>\n        </>\n    );\n};\n\nexport default RobotNav;","import Card from \"react-bootstrap/Card\";\nimport Row from 'react-bootstrap/Row';\nimport Chart from \"react-apexcharts\";\nimport Col from 'react-bootstrap/Col';\n\n\nimport \"../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst RobotTrades = (props) => {\n\n    const [chartData, setChartData] = useState([]);\n\n    let losingTradeNumber = 0;\n    let winningTradeNumber = 0;\n    let losingTrades = [];\n    let winningTrades = [];\n    let totalWinner = 0.0;\n    let totalLoser= 0.0;\n\n    for (const val of chartData) {\n        if (val < 0) {\n            losingTradeNumber=+losingTradeNumber+1;\n            losingTrades.push(val);\n        } else if (val > 0){\n            winningTradeNumber=+winningTradeNumber+1;\n            winningTrades.push(val);\n        };\n\n    };\n\n    for (let i = 0; i < losingTrades.length; i++) {\n        totalLoser += losingTrades[i];\n    };\n\n    for (let i = 0; i < winningTrades.length; i++) {\n        totalWinner += winningTrades[i];\n    };\n\n    let winPerc = Math.round((winningTradeNumber) / (losingTradeNumber + winningTradeNumber)*100)/100;\n    let lossPerc = Math.round(losingTradeNumber / (losingTradeNumber + winningTradeNumber)*100)/100;\n    let avgWinner = Math.round(totalWinner/winningTrades.length*100)/100;\n    let avgLoser = Math.round(totalLoser/losingTrades.length*100)/100;\n\n    console.log(winPerc)\n    console.log(lossPerc)\n    useEffect(() => {\n            axios.get(props.server + 'robots/trades/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date\n                }\n            })\n                .then(response => response['data'].map(data => data['pnl']))\n                .then(data => setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: chartData,\n            }\n        ]\n    };\n\n    // const a = cashFlow.map(data => data['cash_flow']);\n    // console.log(a)\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Trades</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height:'100%', width:'100%', margin:'0px'}}>\n                    <Col style={{height:'100%'}} sm={8}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"/>\n\n                        </div>\n                    </Col>\n                    <Col sm={4} style={{height:'100%'}}>\n                        <Row>\n                            <h2>Statistics</h2>\n                        </Row>\n                        <Row style={{padding:'5px', marginRight:'25px', position:'centered'}}>\n                            <Col>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Total Trades</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{losingTradeNumber + winningTradeNumber}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Winning Trades</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{winningTradeNumber}</p>\n                                </div>\n                               <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Loosing Trades</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{losingTradeNumber}</p>\n                                </div>\n                               <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Winning %</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{winPerc}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Loosing %</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{lossPerc}</p>\n                                </div>\n                            </Col>\n                            <Col>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Total Winning P&L</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{Math.round(totalWinner*100)/100}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Total Losing P&L</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{Math.round(totalLoser*100)/100}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Avg Winning Trade</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{avgWinner}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Avg Losing Trade</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{avgLoser}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Payoff Ratio</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px',\n                                    }}>{Math.round(Math.abs(avgWinner/avgLoser)*100)/100}</p>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row style={{\n                            width: '100%',\n                            padding: '5px',\n                            position: 'absolute',\n                            bottom: '0px'\n                        }}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                    <p style={{fontWeight:'bold'}}>Profit Factor</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '15px',\n                                        fontWeight:'bold'\n                                    }}>{Math.round((winPerc * avgWinner) / (lossPerc / avgLoser) * -100) / 100}</p>\n                            </Col>\n                            <Col>\n                                 <p style={{fontWeight:'bold', position:'absolute', left:'0px'}}>Total Profit</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '45px',\n                                        fontWeight:'bold'\n                                    }}>{Math.round((totalWinner+totalLoser) * 100) / 100}</p>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n);\n};\n\nexport default RobotTrades;","import {Card} from \"react-bootstrap\";\n\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\n\nconst RobotPricing = (props) => {\n    const [loadState, setLoadState] = useState(false);\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        setLoadState(true);\n\n        axios.post(props.server + 'robots/pricing/', {\n            robot: props.robot,\n            start_date: props.start_date,\n            end_date: props.end_date,\n        })\n            .then(response => console.log(response['data'][0]))\n            .then(data => setLoadState(false))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <>\n            <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                <Form.Group>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Pricing\n                    </Button>\n                </Form.Group>\n            </Form>\n            <Modal show={loadState}>\n                <Modal.Body style={{width: '200px', height: '300px'}}>\n                    <h2>Pricing Robots...</h2>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default RobotPricing;","import Card from \"react-bootstrap/Card\";\n\nconst RobotProcesses = (props) => {\n\n    return (\n        <Card className=\"card\">\n            <Card.Title className=\"card-header-first\">Processes</Card.Title>\n\n            <Card.Body style={{padding: '0px'}}>\n\n            </Card.Body>\n        </Card>\n    );\n\n};\n\nexport default RobotProcesses;","import {useState, useEffect, useContext} from \"react\";\n\nimport NewRobotForm from \"./Robot/NewRobotForm\";\nimport RobotTable from \"./Robot/RobotTable\";\nimport BalanceCalculation from \"./Robot/BalanceCalculation\";\nimport RobotReturn from \"./Robot/RobotReturn\";\nimport RobotRisk from \"./Robot/RobotRisk\";\nimport RobotDetails from \"./Robot/RobotDetails\";\nimport RobotBalance from \"./Robot/RobotBalance\";\nimport RobotCashFlow from \"./Robot/RobotCashFlow\";\nimport RobotNav from \"./Robot/RobotNav\";\nimport RobotTrades from \"./Robot/RobotTrades\";\nimport RobotPricing from \"./Robot/RobotPricing\";\nimport RobotProcesses from \"./Robot/RobotProcesses\";\n\nimport axios from \"axios\";\n\n// Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n// Context\nimport ServerContext from \"../context/server-context\";\nimport EnvContext from \"../context/env-context\";\nimport RobotContext from \"../context/robot-context\";\nimport {Card} from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\n\nconst RobotPage = (props) => {\n    // Date variables\n    const date = new Date();\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n    const defaultRobots = useContext(RobotContext)['robots'];\n\n    const [robot, setRobot] = useState(defaultRobots[0]['name']);\n    const [startDate, setStartDate] = useState(firstDay.toISOString().substr(0,10));\n    const [endDate, setEndDate] = useState(date.toISOString().substr(0,10));\n\n    const changeRobot = (rob) => {\n        setRobot(rob);\n    };\n\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n\n    const endDateHandler = (event) => {\n\n        if (event.target.value < startDate) {\n            alert('End date can not be less then start date!');\n        }else {\n            setEndDate(event.target.value);\n        };\n    };\n\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row style={{height: '60px', padding: '5px', display: 'flex', margin: '5px'}}>\n                <Col style={{padding: '0px', height: '100%', display: 'flex'}}>\n                    <Col style={{height: '100%', display: 'block'}}>\n                        <RobotNav robots={defaultRobots}\n                                  server={server}\n                                  env={env}\n                                  robotChange={changeRobot}\n                        />\n                    </Col>\n                    <Col style={{height: '100%'}}>\n                        <Form.Group as={Row}>\n                            <Form.Label className=\"form-label-first\" column sm={2}>\n                                From\n                            </Form.Label>\n                            <Col sm={10}>\n                                <Form.Control type=\"date\" onChange={startDateHandler} defaultValue={startDate}/>\n                            </Col>\n                        </Form.Group>\n                    </Col>\n                    <Col style={{height: '100%'}}>\n                        <Form.Group as={Row}>\n                            <Form.Label className=\"form-label-first\" column sm={2}>\n                                To\n                            </Form.Label>\n                            <Col sm={10}>\n                                <Form.Control type=\"date\" onChange={endDateHandler} defaultValue={endDate}/>\n                            </Col>\n                        </Form.Group>\n                    </Col>\n                </Col>\n                <Col style={{padding: '0px', height: '100%', width:'100%', display: 'flex'}}>\n                    <Row style={{width: '100%'}}>\n                        <Col style={{display: 'flex'}}>\n                            <Col>\n                                <Form.Group className=\"mb-2\">\n                                    <Form.Check type=\"checkbox\" label=\"All\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Check type=\"checkbox\" label=\"Since Inception\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col style={{height: '100%'}}>\n                                <BalanceCalculation server={server} robot={robot} start_date={startDate}\n                                                    end_date={endDate}/>\n                            </Col>\n                            <Col style={{height: '100%'}}>\n                                <RobotPricing server={server} robot={robot} start_date={startDate}\n                                              end_date={endDate}/>\n                            </Col>\n                        </Col>\n                        <Col style={{display: 'flex'}}>\n                            <Col style={{height: '100%'}}>\n                                <NewRobotForm server={server} style={{height: '400px'}}/>\n                            </Col>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n\n            {/*// General Info*/}\n\n            <RobotDetails server={server} robot={robot} default={defaultRobots[0]}/>\n\n            <RobotBalance robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n\n            {/*// Risk and Return*/}\n            <Row style={{height:'500px', padding:'5px'}}>\n                <Col style={{height:'100%', width:'50%'}}>\n                    <RobotReturn robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                </Col>\n                <Col style={{height:'100%', width:'50%'}}>\n                    <RobotRisk robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                </Col>\n            </Row>\n            <Row style={{height:'500px', padding:'5px'}}>\n                <Col style={{height:'100%'}}>\n                    <RobotTrades robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                </Col>\n                <Col >\n                    <Row style={{height:'100%'}}>\n                        <Col style={{height: '100%'}}>\n                            <RobotProcesses robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            {/*<Row style={{height:'500px', padding:'5px'}}>*/}\n            {/*    <Col>*/}\n            {/*        <Card>*/}\n            {/*            <RobotTable server={server} env={env}/>*/}\n            {/*        </Card>*/}\n            {/*    </Col>*/}\n            {/*</Row>*/}\n        </Container>\n    );\n};\n\nexport default RobotPage;","import PriceParagraph from \"./TradePage/PriceParagraph\";\n\nconst InstrumentPage = () => {\n    // const newWebSocket = new WebSocket('ws://127.0.0.1:8000/trade/price_stream/')\n\n    return (\n        <div>\n            {/*<PriceParagraph socketConnection={newWebSocket}/>*/}\n            <h2>Instrument Page</h2>\n        </div>\n    );\n};\n\nexport default InstrumentPage;","import './App.css';\nimport {useContext, useEffect, useState} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport RiskPage from \"./Pages/RiskPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport PortfolioPage from \"./Pages/PortfolioPage\";\nimport TradePage from \"./Pages/TradePage\";\nimport Navigation from \"./components/NavBar\";\nimport RobotPage from \"./Pages/RobotPage\";\nimport InstrumentPage from \"./Pages/InstrumentPage\";\n\n// Contexts\nimport ServerContext from \"./context/server-context\";\nimport EnvContext from \"./context/env-context\";\nimport PortfolioContext from \"./context/portfolio-context\";\nimport RobotContext from \"./context/robot-context\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction App() {\n    // 'http://127.0.0.1:8000/' 'https://pavliati.pythonanywhere.com/'\n    const [robotEnvData, setRobotEnvData] = useState('live');\n    const [portfolioData, setPortfolioData] = useState([]);\n    const [robotsData, setRobotsData] = useState([]);\n\n    const server = 'https://pavliati.pythonanywhere.com/'\n\n    console.log(server)\n\n    const getEnvData = (env) => {\n        setRobotEnvData(env);\n    };\n\n    useEffect(() => {\n            axios.get(server + 'portfolios/get_portfolio_data/all')\n                .then(response => setPortfolioData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, []\n    );\n\n    useEffect(() => {\n            axios.get(server + 'robots/get_robots/' + robotEnvData)\n                .then(response => setRobotsData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, []\n    );\n\n    return (\n        <ServerContext.Provider value={{server: server}}>\n            <EnvContext.Provider value={{environment: robotEnvData}}>\n                <RobotContext.Provider value={{robots: robotsData}}>\n                    <PortfolioContext.Provider value={{portfolioData}}>\n                    <div className=\"App\">\n\n                        <Navigation onEnvChange={getEnvData} env={robotEnvData}/>\n                        <Switch>\n                            <Route path=\"/risk\">\n                                <RiskPage/>\n                            </Route>\n                            <Route path=\"/home\">\n                                <HomePage/>\n                            </Route>\n                            <Route path=\"/trade\">\n                                <TradePage/>\n                            </Route>\n                            <Route path=\"/portfolio\">\n                                <PortfolioPage/>\n                            </Route>\n                            <Route path=\"/instruments\">\n                                <InstrumentPage/>\n                            </Route>\n                            <Route path=\"/robot\">\n                                <RobotPage/>\n                            </Route>\n                        </Switch>\n\n                    </div>\n                </PortfolioContext.Provider>\n                </RobotContext.Provider>\n            </EnvContext.Provider>\n        </ServerContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}