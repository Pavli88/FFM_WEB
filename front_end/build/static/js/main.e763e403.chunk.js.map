{"version":3,"sources":["context/env-context.js","Pages/RiskPage/RiskTableRow.js","Pages/RiskPage/RiskTableData.js","context/server-context.js","Pages/RiskPage.js","Pages/HomePage/PerfDashBoard.js","context/robot-context.js","components/Options.js","components/Charts/BarCharting.js","Pages/HomePage/DashBoard/TopLevel.js","components/CardWidget.js","Pages/HomePage/DashBoard/PnLPanel.js","components/Charts/PieCharts.js","Pages/HomePage/DashBoard/BalanceDashboard.js","Pages/HomePage.js","Pages/PortfolioPage/NewPortfolioForm.js","Pages/PortfolioPage/Calculations/PositionCalculation.js","Pages/PortfolioPage/Calculations/CashHoldingCalc.js","Pages/Robot/GetRobotPrice.js","Pages/PortfolioPage/PortfolioBuy.js","Pages/PortfolioPage/NewPortCashFlow.js","components/NewBrokerAccount.js","context/portfolio-context.js","Pages/PortfolioPage/SubPages/PortfolioRisk/PortfolioRiskPage.js","Pages/PortfolioPage/SubPages/PortfolioHoldings/Holdings.js","Pages/PortfolioPage/SubPages/PortfolioHoldings/PortfolioHoldingsPage.js","Pages/PortfolioPage/SubPages/PortfolioDashboard/PortfolioDetails.js","Pages/PortfolioPage/SubPages/PortfolioDashboard/PortfolioDescreption.js","Pages/PortfolioPage/SubPages/PortfolioHoldings/CashHolding.js","Pages/PortfolioPage/SubPages/PortfolioDashboard/PortfolioDashBoardPage.js","Pages/PortfolioPage/SubPages/PortfolioSettings/PortfolioSettingsPage.js","Pages/PortfolioPage/SubPages/PortfolioTransactions/PortfolioTransactions.js","Pages/PortfolioPage/SubPages/PortfolioTransactions/PortfolioTransactionsPage.js","Pages/PortfolioPage.js","Pages/TradePage/TradeTableRow.js","Pages/TradePage/TradeTableData.js","Pages/TradePage/TradeExecutor.js","Pages/TradePage.js","components/Notifications.js","components/NavBar.js","Pages/Robot/NewRobotForm.js","Pages/Robot/RobotBalanceCalculation.js","Pages/Robot/RobotNav.js","Pages/Robot/Calculations/RobotPricingForm.js","Pages/Robot/SubPages/RobotDashboard/RobotDetails.js","Pages/Robot/SubPages/RobotDashboard/RobotDashBoardPage.js","Pages/Robot/SubPages/RobotTransactions/RobotTrades.js","Pages/Robot/SubPages/RobotTransactions/RobotTransactionTableRow.js","Pages/Robot/SubPages/RobotTransactions/RobotTransactionsTable.js","Pages/Robot/SubPages/RobotTransactions/RobotTransactionsPage.js","Pages/Robot/SubPages/RobotRisk/RobotDrawDown.js","Pages/Robot/SubPages/RobotRisk/RobotRiskPage.js","Pages/Robot/Charts/CumulativeReturn.js","Pages/Robot/SubPages/RobotReturn/RobotReturn.js","Pages/Robot/SubPages/RobotReturn/RobotDailyReturns.js","Pages/Robot/SubPages/RobotReturn/RobotReturnPage.js","Pages/RobotPage.js","Pages/InstrumentPage.js","App.js","reportWebVitals.js","index.js"],"names":["EnvContext","React","createContext","environment","RiskTableRow","props","useState","robot","dailyRisk","setDailyRisk","tradeLimit","setTradeLimit","riskOnTrade","setRiskOnTrade","pLevel","qType","setQType","quantity","setQuantity","sl","setSl","winExp","setWinExp","style","verticalAlign","Form","Control","onChange","event","target","value","type","placeholder","defaultValue","as","Button","onClick","axios","post","server","daily_risk","nbm_trades","risk_per_trade","pyramiding_level","quantity_type","win_exp","then","response","alert","catch","error","console","RiskTableData","env","useContext","riskData","setRiskData","useEffect","fetch","json","data","log","riskDataRow","map","Table","fontSize","ServerContext","RiskPage","Container","className","background","width","height","window","innerHeight","padding","fluid","Row","Col","Card","Title","PerformanceDashboard","perfData","setPerfData","get","perfRespData","record","color","margin","overflowY","overflowX","RobotContext","OptionLoader","rawData","setRawData","url","params","code","BarCharting","chartOptions","options","chart","toolbar","id","xaxis","categories","labels","show","yaxis","formatter","val","toFixed","dataLabels","enabled","series","name","title","Body","TopLevel","arr","responseData","setResponseData","dailyPnlData","reduce","acc","sum","res","push","CardWidget","display","justifyContent","children","PnLPanel","date","Date","toISOString","substr","dtdData","setDtdData","mtdData","setMtdData","ytdData","setYtdData","start_date","PieCharts","Math","round","BalanceDashBoard","chData","setChData","labelData","setLabelData","totalBalance","a","b","item","HomePage","startDate","textAlign","NewPortfolioForm","portfolioName","setPortfolioName","portfolioCode","setPortfolioCode","portType","setPortType","currency","setCurrency","handleClose","hide","submitHandler","preventDefault","port_name","port_type","port_currency","port_code","Modal","onHide","Header","closeButton","onSubmit","Group","Label","required","Footer","variant","PositionCalculation","firstDay","getFullYear","getMonth","setStartDate","endDate","setEndDate","setResponse","portfolio","setPortfolio","treeData","index","TreeItem","nodeId","toString","label","index2","item2","changePortfolio","checked","end_date","size","column","sm","TreeView","aria-label","defaultCollapseIcon","defaultExpandIcon","sx","flexGrow","maxWidth","controlId","Check","CashHoldingCalculation","treeNodes","GetRobotLastPrice","price","setPrice","setDate","getPrice","PortfolioBuy","securityId","setSecurity","securityName","setSecurityName","unit","setUnit","robotPrice","setRobotPrice","robotQuantity","setRobotQuantity","instrumentParams","sec","sec_type","sec_id","readOnly","selectIndex","nativeEvent","selectedIndex","text","document","getElementById","GetRobotPrice","min","NewPortCashFlow","setValue","setType","amount","NewBrokerAccount","broker","setBroker","accountNumber","setAccountNumber","token","setToken","setEnv","animation","broker_name","account_number","PortfolioContext","PortfolioRiskPage","Holdings","PortfolioHoldingsPage","PortfolioDetails","default","portData","setPortData","position","right","PortfolioDescription","CashHoldings","Subtitle","PortfolioDashBoardPage","CashHolding","PortfolioSettingsPage","PortfolioTransactions","portTransData","setPortTransData","PortfolioTransactionsPage","PortfolioPage","portfolios","portfolioOptions","showNewPortfolio","setShowNewPortfolio","showNewRobotTrade","setNewRobotTrade","showNewPortCashFlow","setNewPortCashFlow","showPosCalc","setPosCalc","showCashCalc","setCashCalc","iconShape","to","path","CashHoldingCalc","TradeTableRow","broker_id","security","trd_id","TradeTableData","tradeData","setTradeData","tradeDataRow","overflow","TradeExecutor","TradePage","Notifications","messages","setMessages","tradeMessages","processMessages","forEach","interval","setInterval","clearInterval","removeMsg","msg","store","addNotification","message","insert","container","animationIn","animationOut","onRemoval","Navigation","showNewAccount","setShowNewAccount","Navbar","bg","Brand","href","Nav","Link","NavDropdown","Item","onSelect","inline","FormControl","Dropdown","envValue","onEnvChange","Toggle","Menu","eventKey","NewRobotForm","robotName","setRobotName","strategy","setStrategy","account","setAccount","instrument","setInstrument","accountParams","robot_name","maxLength","RobotBalanceCalculation","setLoadState","process","RobotNav","robots","robotsData","setRobotsData","robotsOptions","alignItems","robotChange","RobotPricingForm","setRobot","RobotDetails","robotData","setRobotData","priceData","setPriceData","RobotDashBoardPage","RobotTrades","losingTradeNumber","winningTradeNumber","losingTrades","winningTrades","totalWinner","totalLoser","i","length","winPerc","lossPerc","avgWinner","avgLoser","marginRight","abs","bottom","fontWeight","left","RobotTransactionTableRow","status","pnl","open_price","close_price","open_time","close_time","side","RobotTransactionsTable","transactionRows","RobotTransactionsPage","transactionData","setTransactionData","pnlData","RobotDrawDown","chartData","setChartData","RobotRiskPage","CumulativeReturnChart","axisBorder","offsetX","offsetY","axisTicks","borderType","align","floating","RobotReturn","CumulativeReturn","RobotDailyReturns","dailyReturnList","RobotReturnPage","RobotPage","defaultRobots","showNewRobot","setNewRobot","showRobotBalanceCalc","setRobotBalanceCalc","showRobotPricingCalc","setRobotPricingCalc","rob","InstrumentPage","App","robotEnvData","setRobotEnvData","portfolioData","setPortfolioData","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e763e403.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EnvContext = React.createContext({\n    environment: 'live'\n});\n\nexport default EnvContext;","import {useState} from \"react\";\nimport SliderWidget from \"../../components/SliderWidget\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\n\n// CSS\nimport \"../MainCSS.css\"\nimport Form from \"react-bootstrap/Form\";\n\nconst RiskTableRow = (props) => {\n\n    const [robot, setRobot] = useState(props.robot);\n    const [dailyRisk, setDailyRisk] = useState(props.dailyRisk);\n    const [tradeLimit, setTradeLimit] = useState(props.tradeLimit);\n    const [riskOnTrade, setRiskOnTrade] = useState(props.riskOnTrade);\n    const [pLevel, setPLevel] = useState(props.pLevel);\n    const [qType, setQType] = useState(props.qType);\n    const [quantity, setQuantity] = useState(props.quantity);\n    const [sl, setSl] = useState(props.sl);\n    const [winExp, setWinExp] = useState(props.winExp);\n\n    const UpdateRisk = () => {\n        axios.post(props.server + 'risk/update_robot_risk/', {\n            robot: robot,\n            daily_risk: dailyRisk,\n            nbm_trades: tradeLimit,\n            risk_per_trade: riskOnTrade,\n            pyramiding_level: pLevel,\n            quantity_type: qType,\n            quantity: quantity,\n            sl: sl,\n            win_exp: winExp\n        })\n            .then(response => alert('Risk is updated for ' + robot))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    const tradeLimitHandler = (event) => {\n        setTradeLimit(event.target.value)\n    };\n\n    const tradeRiskHandler = (event) => {\n        setRiskOnTrade(event.target.value)\n    };\n\n    const dailyRiskHandler = (event) => {\n        setDailyRisk(event.target.value)\n    };\n\n    const quantityTypeHandler = (event) => {\n        setQType(event.target.value)\n    };\n\n    const quantityHandler = (event) => {\n        setQuantity(event.target.value)\n    };\n\n    const slHandler = (event) => {\n        setSl(event.target.value)\n    };\n\n    const winExpHandler = (event) => {\n        setWinExp(event.target.value)\n    };\n\n    return (\n        <tr>\n            <td style={{verticalAlign: \"middle\"}}>{robot}</td>\n            <td style={{verticalAlign: \"middle\"}}>\n                <Form.Control onChange={dailyRiskHandler} type=\"number\" placeholder={dailyRisk}/>\n            </td>\n            <td style={{verticalAlign: \"middle\"}}>\n                <Form.Control onChange={tradeLimitHandler} type=\"number\" placeholder={tradeLimit}/>\n            </td>\n            <td style={{verticalAlign: \"middle\"}}>\n                <Form.Control onChange={tradeRiskHandler} type=\"number\" placeholder={riskOnTrade}/>\n            </td>\n            <td style={{verticalAlign: \"middle\"}}>\n                <Form.Control onChange={quantityTypeHandler} defaultValue={qType} as=\"select\">\n                    <option value={'Stop Based'}>Stop Based</option>\n                    <option value={'Fix'}>Fix</option>\n                </Form.Control>\n            </td>\n            <td style={{verticalAlign: \"middle\"}}>\n                <Form.Control onChange={quantityHandler} type=\"number\" placeholder={quantity}/>\n            </td>\n            <td style={{verticalAlign: \"middle\"}}>\n                <Form.Control onChange={slHandler} type=\"number\" placeholder={sl}/>\n            </td>\n            <td style={{verticalAlign: \"middle\"}}>\n                <Form.Control onChange={winExpHandler} type=\"number\" placeholder={winExp}/>\n            </td>\n            <td style={{verticalAlign: \"middle\"}}><Button onClick={UpdateRisk}>Update</Button></td>\n        </tr>\n    );\n};\n\nexport default RiskTableRow;","import {useContext, useEffect, useState} from \"react\";\nimport EnvContext from \"../../context/env-context\";\nimport RiskTableRow from \"./RiskTableRow\";\n\n// Bootstrap\nimport Table from \"react-bootstrap/Table\";\n\n// CSS\nimport \"../MainCSS.css\"\n\nconst RiskTableData = (props) => {\n\n    const env = useContext(EnvContext)['environment'];\n\n    const [riskData, setRiskData] = useState([])\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            fetch(props.server + 'risk/get_robot_risk/' + env)\n                .then(response => response.json())\n                .then(data => setRiskData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n    console.log(riskData)\n    const riskDataRow = riskData.map((data) =>\n        <RiskTableRow key={data['id']}\n                      robot={data['robot']}\n                      dailyRisk={data['daily_risk']}\n                      tradeLimit={data['daily_trade_limit']}\n                      riskOnTrade={data['risk_per_trade']}\n                      pLevel={data['pyramiding_level']}\n                      qType={data['quantity_type']}\n                      quantity={data['quantity']}\n                      sl={data['sl']}\n                      winExp={data['win_exp']}\n                      server={props.server}/>\n    );\n\n    return (\n        <Table>\n            <thead style={{fontSize: 12}}>\n            <tr>\n                <th style={{verticalAlign: \"middle\"}}>Robot</th>\n                <th style={{verticalAlign: \"middle\"}}>Daily Loss Limit %</th>\n                <th style={{verticalAlign: \"middle\"}}>Max Number of Trades (Daily)</th>\n                <th style={{verticalAlign: \"middle\"}}>Risk Exposure %</th>\n                <th style={{verticalAlign: \"middle\"}}>Quantity Type</th>\n                <th style={{verticalAlign: \"middle\"}}>Quantity</th>\n                <th style={{verticalAlign: \"middle\"}}>SL</th>\n                <th style={{verticalAlign: \"middle\"}}>Win Exp %</th>\n                <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            {riskDataRow}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default RiskTableData;","import React from \"react\";\n\nconst ServerContext = React.createContext();\n\nexport default ServerContext;","import {useState, useEffect, useContext} from \"react\";\n\n// Bootstrap\nimport Button from \"react-bootstrap/Button\";\nimport Container from 'react-bootstrap/Container'\nimport Form from \"react-bootstrap/Form\";\nimport Table from 'react-bootstrap/Table'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport RiskTableData from \"./RiskPage/RiskTableData\";\nimport ServerContext from \"../context/server-context\";\n\n// CSS\nimport \"./MainCSS.css\"\n\nconst RiskPage = () => {\n\n    const server = useContext(ServerContext)['server'];\n\n    return (\n        <Container className={\"border\"} style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row>\n                <Col>\n                    <Container>\n                        <Card className=\"card\">\n                            <Card.Title className=\"card-header-first\"> Robot Risk Parameters</Card.Title>\n                            <RiskTableData server={server}/>\n                        </Card>\n                    </Container>\n\n                </Col>\n            </Row>\n\n        </Container>\n    );\n};\n\nexport default RiskPage;","import Card from 'react-bootstrap/Card';\nimport Table from \"react-bootstrap/Table\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport './PerfDashBoard.css'\nimport Row from \"react-bootstrap/Row\";\n\nconst PerformanceDashboard = (props) => {\n\n    // Fetching Robot balance data\n    const [perfData, setPerfData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'home/load_robot_stats/' + props.env)\n                .then(response => response['data'])\n                .then(data => setPerfData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const perfRespData = perfData.map((record) =>\n    <tr key={record['robot']['id']}>\n        <td style={{fontSize: 14, verticalAlign:\"middle\"}} className=\"table-row-robot-name\">{record['robot']['name']}</td>\n        <td style={{fontSize: 14, verticalAlign:\"middle\", color: record['balance']<0.0 ? 'red': 'green'}} className=\"table-row-other\">{record['balance']}</td>\n        <td style={{fontSize: 14, verticalAlign:\"middle\", color: record['dtd_ret']<0.0 ? 'red': 'green'}} className=\"table-row-other\">{record['dtd_ret']} %</td>\n        <td style={{fontSize: 14, verticalAlign:\"middle\", color: record['mtd_ret']<0.0 ? 'red': 'green'}} className=\"table-row-other\">{record['mtd_ret']} %</td>\n        <td style={{fontSize: 14, verticalAlign:\"middle\", color: record['ytd_ret']<0.0 ? 'red': 'green'}} className=\"table-row-other\">{record['ytd_ret']} %</td>\n    </tr>);\n\n    return (\n        <Row style={{height: '400px', width: '100%', margin: '15px'}}>\n            <Card className=\"card\" style={{margin: '0px'}}>\n                <div style={{height: '500px', overflowY: 'scroll', overflowX: 'hidden'}}>\n                    <Table>\n                        <thead>\n                        <tr>\n                            <th style={{fontSize: 14, verticalAlign: \"middle\"}} className=\"table-row-robot-name\">Robot\n                            </th>\n                            <th style={{fontSize: 14, verticalAlign: \"middle\"}}>Balance</th>\n                            <th style={{fontSize: 14, verticalAlign: \"middle\"}}>DTD</th>\n                            <th style={{fontSize: 14, verticalAlign: \"middle\"}}>MTD</th>\n                            <th style={{fontSize: 14, verticalAlign: \"middle\"}}>YTD</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {perfRespData}\n                        </tbody>\n                    </Table>\n                </div>\n            </Card>\n        </Row>\n    );\n\n};\n\nexport default PerformanceDashboard;","import React, {useState, useEffect, useContext} from \"react\";\n\nconst RobotContext = React.createContext();\n\nexport default RobotContext;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst OptionLoader = (props) => {\n\n    const [rawData, setRawData] = useState('');\n\n    useEffect(() => {\n            axios.get(props.url, {params: props.params})\n                .then(response => response['data'].map((record) =>\n                    <option key={record['id']} value={record[props.code]}>{record[props.value]}</option>))\n                .then(data => setRawData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        rawData\n    );\n};\n\nexport default OptionLoader;","import Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst BarCharting = (props) => {\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n        },\n        series: [\n            {\n                name: \"Aggregated Robot Profit and Loss\",\n                data: props.data,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\" style={{margin:'0px'}}>\n            <Card.Title className=\"card-header-first\">{props.title}</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <Chart\n                            options={chartOptions.options}\n                            series={chartOptions.series}\n                            type={'bar'}\n                            width=\"100%\"\n                            height=\"100%\"\n                        />\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarCharting;","import AggregatedRobotPnl from \"./AggregatedRobotPnl\";\nimport BarCharting from \"../../../components/Charts/BarCharting\";\n\n// Bootstrap Imports\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\n\nconst TopLevel = (props) =>{\n    const [responseData, setResponseData] = useState([]);\n    const dailyPnlData = responseData.map(data=>data['y'])\n    const findCumulativeSum = arr => {\n        const creds = arr.reduce((acc, val) => {\n            let {sum, res} = acc;\n            sum += val;\n            res.push(sum);\n            return {sum, res};\n        }, {\n            sum: 0,\n            res: []\n        });\n        return creds.res;\n    };\n\n    useEffect(() => {\n            axios.get(props.server + 'home/daily_robot_balances', )\n                .then(response => setResponseData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n    return(\n        <Row>\n            <Row style={{height: '300px', width:'100%', margin:'0px', padding:'10px'}}>\n                <BarCharting data={findCumulativeSum(dailyPnlData)} title={'Total Cumulative PnL - YTD'}/>\n            </Row>\n            <Row style={{height: '300px', width:'100%', margin:'0px', padding:'10px'}}>\n                <BarCharting data={dailyPnlData} title={'Daily Total Robot PnL - YTD'}/>\n            </Row>\n        </Row>\n    )\n};\n\nexport default TopLevel;","import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Chart from \"react-apexcharts\";\n\nconst CardWidget = (props) => {\n\n    return (\n        <Card className=\"card\" style={{margin:'0px'}}>\n            <Card.Title style={{margin:'0px'}} className=\"card-header-first\">{props.title}</Card.Title>\n            <Card.Body style={{display:'flex', justifyContent:'center', padding: '5px'}}>\n                {props.children}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CardWidget","// Bootstrap Imports\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport CardWidget from \"../../../components/CardWidget\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst PnLPanel = (props) => {\n    const date = new Date().toISOString().substr(0,10);\n    const [dtdData, setDtdData] = useState(0.0);\n    const [mtdData, setMtdData] = useState(0.0);\n    const [ytdData, setYtdData] = useState(0.0);\n\n    useEffect(() => {\n            axios.get(props.server + 'home/total_robot_pnl/', {\n                params: {\n                    start_date: date,\n                }\n            })\n                .then(response => setDtdData(response['data'][0]['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    useEffect(() => {\n            axios.get(props.server + 'home/total_robot_pnl/', {\n                params: {\n                    start_date: date.substr(0,7)+'-01',\n                }\n            })\n                .then(response => setMtdData(response['data'][0]['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n    useEffect(() => {\n            axios.get(props.server + 'home/total_robot_pnl/', {\n                params: {\n                    start_date: date.substr(0,4)+'-01-01',\n                }\n            })\n                .then(response => setYtdData(response['data'][0]['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n    return (\n        <Row style={{height: '150px', width: '100%', margin: '0px', padding: '10px'}}>\n            <Col style={{height: '100%'}}>\n                <CardWidget title={'DTD'}>\n                    <h1 style={{margin:'auto', verticalAlign:'middle', color: dtdData < 0.0 ? 'red' : 'green'}}>{dtdData}</h1>\n                </CardWidget>\n            </Col>\n            <Col style={{height: '100%'}}>\n                <CardWidget title={'MTD'}>\n                    <h1 style={{margin:'auto', verticalAlign:'middle', color: mtdData < 0.0 ? 'red' : 'green'}}>{mtdData}</h1>\n                </CardWidget>\n            </Col>\n            <Col style={{height: '100%'}}>\n                <CardWidget title={'YTD'}>\n                    <h1 style={{margin:'auto', verticalAlign:'middle', color: ytdData < 0.0 ? 'red' : 'green'}}>{ytdData}</h1>\n                </CardWidget>\n            </Col>\n            </Row>\n            );\n};\n\nexport default PnLPanel;","import Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst PieCharts = (props) => {\n\n    const chartOptions = {\n        options: {\n            // chart: {\n            //     toolbar: false,\n            // },\n            labels: props.labels,\n            dataLabels: {\n                enabled: true,\n                formatter: function (val) {\n                    return (Math.round(val * 100) / 100) + '%'\n                },\n            },\n        },\n        series: props.data\n    };\n    return (\n         <Card className=\"card\" style={{margin: '0px'}}>\n            <Card.Title className=\"card-header-first\">{props.title}</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <Chart\n                            options={chartOptions.options}\n                            series={chartOptions.series}\n                            type={'donut'}\n                            width=\"100%\"\n                            height=\"100%\"\n                        />\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PieCharts;\n\n\n\n\n\n","import CardWidget from \"../../../components/CardWidget\";\nimport PieCharts from \"../../../components/Charts/PieCharts\";\n\n// Bootstrap imports\nimport Row from \"react-bootstrap/Row\";\nimport Col from 'react-bootstrap/Col';\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst BalanceDashBoard = (props) => {\n    const [chData, setChData] =  useState([])//balanceData.map(data=>data['y'])\n    const [labelData, setLabelData] =  useState([])//balanceData.map(data=>data['x'])\n    const totalBalance = chData.reduce((a, b) => a + b, 0)\n\n    useEffect(() => {\n            axios.get(props.server + 'home/total_robot_balances_by_date/',)\n                .then(function (response) {\n                    setChData(response['data'].map(item => item['y']));\n                    setLabelData(response['data'].map(item => item['x']))\n                })\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Row style={{height: '300px', width: '100%', margin: '0px', padding: '0px'}}>\n            <Col style={{height: '100%'}}>\n                <CardWidget title={'Total Balance'}>\n                    <h1 style={{margin:'auto', verticalAlign:'middle'}}>{Math.round(totalBalance * 100)/100}</h1>\n                </CardWidget>\n            </Col>\n            <Col style={{height: '100%'}}>\n                <PieCharts title={'Balance by Robots'} data={chData} labels={labelData}/>\n            </Col>\n        </Row>\n    );\n};\n\nexport default BalanceDashBoard;","import Container from \"react-bootstrap/Container\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport PerfDashBoard from \"./HomePage/PerfDashBoard\";\nimport {useContext, useEffect, useState} from \"react\";\n\nimport RobotStatCards from \"./HomePage/RobotStatCards\";\nimport RobotExecution from \"./HomePage/RobotExecution/RobotExecution\";\nimport SystemMessages from \"./HomePage/SystemMessages/SystemMessages\";\n\nimport TopLevel from \"./HomePage/DashBoard/TopLevel\";\nimport PnLPanel from \"./HomePage/DashBoard/PnLPanel\";\nimport BalanceDashBoard from \"./HomePage/DashBoard/BalanceDashboard\";\n\n// Chart Imports\nimport BarCharting from \"../components/Charts/BarCharting\";\n\n\n//CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './HomePage.css';\n\n// Contexts\nimport EnvContext from \"../context/env-context\";\nimport ServerContext from \"../context/server-context\";\nimport axios from \"axios\";\n\nconst HomePage = (props) => {\n    // Context variables\n    const env = useContext(EnvContext)['environment'];\n    const server = useContext(ServerContext)['server'];\n    const startDate = new Date().toISOString().substr(0,10);\n    const [date, setDate] = useState(startDate);\n\n    const dateHandler = (event) => {\n        setDate(event.target.value);\n    };\n\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight}} fluid>\n            <Row style={{height: window.innerHeight}}>\n                <Col style={{height: '800px', width:'50%', margin:'15px'}}>\n                    <h4 style={{textAlign:'left'}}>Total Robot Results</h4>\n                    <TopLevel server={server}/>\n                </Col>\n                <Col style={{height: '800px', width:'50%', margin:'15px'}}>\n                    <h4>Profit</h4>\n                    <PnLPanel server={server}/>\n                    <h4>Performance</h4>\n                    <PerfDashBoard server={server} env={env}/>\n                    <h4>Balance</h4>\n                    <BalanceDashBoard server={server} env={env}/>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default HomePage;","// Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nconst NewPortfolioForm = (props) => {\n\n    const [portfolioName, setPortfolioName] = useState('');\n    const [portfolioCode, setPortfolioCode] = useState('');\n    const [portType, setPortType] = useState('Trade');\n    const [currency, setCurrency] = useState('USD');\n\n    const handleClose = () => {\n        props.hide();\n    };\n\n    const portfolioNameChangeHandler = (event) => {\n        setPortfolioName(event.target.value)\n    };\n\n    const portfolioCodeChangeHandler = (event) => {\n        setPortfolioCode(event.target.value);\n    };\n\n    const portTypeHandler = (event) => {\n        setPortType(event.target.value)\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    console.log(portfolioName, portType, currency)\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        axios.post(props.server + 'portfolios/new/', {\n            port_name: portfolioName,\n            port_type: portType,\n            port_currency: currency,\n            port_code: portfolioCode,\n        })\n            .then(function (response) {\n                if (response['data'] == 'New Portfolio is created!') {\n                    alert('New portfolio is created!')\n                    props.hide();\n                } else {\n                    alert(response['data']);\n                }\n            })\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <>\n            <Modal show={props.show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Portfolio</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Portfolio Name</Form.Label>\n                            <Form.Control onChange={portfolioNameChangeHandler} type=\"text\" placeholder=\"Portfolio Name\" required/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Code</Form.Label>\n                            <Form.Control onChange={portfolioCodeChangeHandler} type=\"text\" placeholder=\"Portfolio Code\" required/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Type</Form.Label>\n                            <Form.Control onChange={portTypeHandler} as=\"select\">\n                                <option value={'Trade'}>Trade</option>\n                                <option value={'Savings'}>Savings</option>\n                                <option value={'Investment'}>Investment</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Portfolio Currency</Form.Label>\n                            <Form.Control onChange={currencyHandler} as=\"select\">\n                                <option value={'USD'}>USD</option>\n                                <option value={'HUF'}>HUF</option>\n                                <option value={'EUR'}>EUR</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewPortfolioForm;","import {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeItem from \"@mui/lab/TreeItem\";\n\nconst PositionCalculation = (props) => {\n    const date = new Date();\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const [startDate, setStartDate] = useState(firstDay.toISOString().substr(0,10));\n    const [endDate, setEndDate] = useState(date.toISOString().substr(0,10));\n    const [response, setResponse] = useState([]);\n    const [portfolio, setPortfolio] = useState(props.portfolio);\n    const treeData = response.map(function (data, index) {\n\n        return <TreeItem nodeId={index.toString()} label={data['portfolio']}>\n            {data['response'].map((item, index2) => <TreeItem nodeId={index.toString() + index2.toString()}\n                                                              label={item['date']}>\n                {item['msgs'].map(item2 => <TreeItem\n                    label={item2['msg']}></TreeItem>)}\n            </TreeItem>)}\n        </TreeItem>\n    });\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n\n    const endDateHandler = (event) => {\n        setEndDate(event.target.value);\n    };\n\n    const handleClose = () => {\n        props.hide();\n    };\n    const changePortfolio = (event) => {\n        if (event.target.checked){\n            setPortfolio('ALL');\n        }else {\n            setPortfolio(props.portfolio);\n        };\n    };\n    const submitHandler = (event) => {\n        event.preventDefault();\n        axios.post(props.server + 'portfolios/positions/', {\n            portfolio: portfolio,\n            start_date: startDate,\n            end_date: endDate,\n        })\n            .then(response => setResponse(response['data']))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n    return (\n        <Modal show={props.show} onHide={handleClose} size={'xl'}>\n            <Modal.Header closeButton>\n                <Modal.Title>Portfolio Position Calculation - {portfolio}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{height: '300px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <Form onSubmit={submitHandler} style={{width: '100%', height: '100%'}}>\n                            <Row style={{height: '60px', width: '100%', padding: '5px', margin: '5px'}}>\n                                <Row style={{width: '100%', margin: '0px'}}>\n                                    <Form.Group style={{width: '100%', margin: '0px'}}>\n                                        <Form.Label className=\"form-label-first\" column sm={2}>\n                                            From\n                                        </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"date\" onChange={startDateHandler}\n                                                          defaultValue={firstDay.toISOString().substr(0, 10)}/>\n                                        </Col>\n                                    </Form.Group>\n                                </Row>\n                                <Row style={{width: '100%', margin: '0px'}}>\n                                    <Form.Group style={{width: '100%'}}>\n                                        <Form.Label className=\"form-label-first\" column sm={2}>\n                                            To\n                                        </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"date\" onChange={endDateHandler}\n                                                          defaultValue={date.toISOString().substr(0, 10)}/>\n                                        </Col>\n                                    </Form.Group>\n                                </Row>\n                            </Row>\n                        </Form>\n                    </Col>\n                    <Col style={{height: '100%'}}>\n                        <TreeView\n                            aria-label=\"file system navigator\"\n                            defaultCollapseIcon={<ExpandMoreIcon/>}\n                            defaultExpandIcon={<ChevronRightIcon/>}\n                            sx={{height: '100%', flexGrow: 1, maxWidth: '100%', overflowY: 'auto',}}\n                        >\n                            {treeData}\n                        </TreeView>\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer style={{width: '100%', margin: '0px'}}>\n                <Row style={{width: '100%', margin: '0px'}}>\n                    <Col>\n                        <Row>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                                    <Form.Check onClick={changePortfolio} type=\"checkbox\" label=\"All Portfolios\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                                    <Form.Check onClick={changePortfolio} type=\"checkbox\" label=\"Since Inception\"/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                    </Col>\n                    <Col>\n                        <Form.Group style={{width: '100%'}}>\n                            <Col sm={10}>\n                                <Button variant=\"primary\" onClick={submitHandler} style={{width: '100%'}}>\n                                    Calculate\n                                </Button>\n                            </Col>\n                        </Form.Group>\n                    </Col>\n                </Row>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default PositionCalculation;","import {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\n\n// MUI\nimport TreeView from '@mui/lab/TreeView';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport TreeItem from '@mui/lab/TreeItem';\n\nconst CashHoldingCalculation = (props) => {\n    const date = new Date();\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const [startDate, setStartDate] = useState(firstDay.toISOString().substr(0,10));\n    const [endDate, setEndDate] = useState(date.toISOString().substr(0,10));\n    const [response, setResponse] = useState([]);\n    const [portfolio, setPortfolio] = useState(props.portfolio);\n    const treeData = response.map(function (data, index) {\n        let treeNodes = data['response'].map(item => <TreeItem label={item['date'] + \" \" + item['msg']}></TreeItem>);\n        return <TreeItem nodeId={index.toString()} label={data['portfolio']}>\n            {treeNodes}\n        </TreeItem>\n    });\n\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n\n    const endDateHandler = (event) => {\n        setEndDate(event.target.value);\n    };\n\n    const handleClose = () => {\n        props.hide();\n    };\n\n    const changePortfolio = (event) => {\n        if (event.target.checked){\n            setPortfolio('ALL');\n        }else {\n            setPortfolio(props.portfolio);\n        };\n        console.log(event.target.checked)\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        axios.post(props.server + 'portfolios/cash_holding/', {\n            portfolio: portfolio,\n            start_date: startDate,\n            end_date: endDate,\n        })\n            .then(response => setResponse(response['data']))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n    return (\n        <Modal show={props.show} onHide={handleClose} size={'xl'}>\n            <Modal.Header closeButton>\n                <Modal.Title>Cash Holding Calculation - {portfolio}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{width: '100%', height: '300px'}}>\n                <Row style={{height:'100%'}}>\n                    <Col style={{height:'100%'}}>\n                        <Form onSubmit={submitHandler} style={{width: '100%', height:'100%'}}>\n                            <Row style={{height: '60px', width: '100%', padding: '5px', margin: '5px'}}>\n                                <Row style={{width: '100%', margin: '0px'}}>\n                                    <Form.Group style={{width: '100%', margin: '0px'}}>\n                                        <Form.Label className=\"form-label-first\" column sm={2}>\n                                            From\n                                        </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"date\" onChange={startDateHandler}\n                                                          defaultValue={firstDay.toISOString().substr(0, 10)}/>\n                                        </Col>\n                                    </Form.Group>\n                                </Row>\n                                <Row style={{width: '100%', margin: '0px'}}>\n                                    <Form.Group style={{width: '100%'}}>\n                                        <Form.Label className=\"form-label-first\" column sm={2}>\n                                            To\n                                        </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"date\" onChange={endDateHandler}\n                                                          defaultValue={date.toISOString().substr(0, 10)}/>\n                                        </Col>\n                                    </Form.Group>\n                                </Row>\n                            </Row>\n                        </Form>\n                    </Col>\n                    <Col style={{height:'100%'}}>\n                        <TreeView\n                            aria-label=\"file system navigator\"\n                            defaultCollapseIcon={<ExpandMoreIcon/>}\n                            defaultExpandIcon={<ChevronRightIcon/>}\n                            sx={{height: '100%', flexGrow: 1, maxWidth: '100%', overflowY: 'auto',}}\n                        >\n                            {treeData}\n                        </TreeView>\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer style={{width: '100%', margin: '0px'}}>\n                <Row style={{width: '100%', margin: '0px'}}>\n                    <Col>\n                         <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                        <Form.Check onClick={changePortfolio} type=\"checkbox\" label=\"All Portfolios\"/>\n                    </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group style={{width: '100%'}}>\n                        <Col sm={10}>\n                            <Button variant=\"primary\" onClick={submitHandler} style={{width: '100%'}}>\n                                Calculate\n                            </Button>\n                        </Col>\n                    </Form.Group>\n                    </Col>\n                </Row>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CashHoldingCalculation;","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\n\nconst GetRobotLastPrice = (props) => {\n\n    const [price, setPrice] = useState(0.0);\n    const [date, setDate] = useState();\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_last_price/', {\n                params: {\n                    robot: props.robot,\n                    // start_date: props.start_date,\n                    // end_date: props.end_date,\n                }\n            })\n                .then(function(response){\n                    setPrice(response['data']['price']);\n                    setDate(response['data']['date']);\n                    props.getPrice(price);\n                })\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Form.Group>\n            <Form.Label>Price - {date}</Form.Label>\n            <h2>{Math.round((price) * 100) / 100}</h2>\n        </Form.Group>\n    );\n};\n\nexport default GetRobotLastPrice;\n","import Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport {useEffect, useState} from \"react\";\n\nimport OptionLoader from \"../../components/Options\";\nimport GetRobotPrice from \"../Robot/GetRobotPrice\";\n\nimport axios from \"axios\";\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nconst PortfolioBuy = (props) => {\n    const [securityId, setSecurity] = useState('');\n    const [securityName, setSecurityName] = useState('');\n    const [unit, setUnit] = useState(0.0);\n    const [robotPrice, setRobotPrice] = useState(0.0);\n    const [robotQuantity, setRobotQuantity] = useState(0.0);\n\n    const instrumentParams = {\n        'env': props.env,\n    };\n\n    const handleClose = () => {\n        props.hide();\n    };\n\n    const securityHandler = (event) => {\n        const selectIndex = event.nativeEvent.target.selectedIndex;\n\n        setSecurity(event.target.value);\n        setSecurityName(event.nativeEvent.target[selectIndex].text);\n        document.getElementById('unitInput').value = 0;\n        setRobotQuantity(0);\n        setUnit(0);\n    };\n\n    const unitHandler = (event) => {\n        setRobotQuantity(unit/robotPrice);\n        setUnit(event.target.value);\n\n    };\n\n    const getRobotPrice = (price) => {\n        setRobotPrice(price);\n        setRobotQuantity(unit/robotPrice);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        if (robotQuantity===0.0){\n            alert('Quantity can not be 0 !')\n        }else{\n            axios.post(props.server + 'portfolios/portfolio_trade/', {\n            portfolio: props.portfolio,\n            unit: robotQuantity,\n            price: robotPrice,\n            sec: securityName,\n            sec_type: 'Robot',\n            sec_id: securityId,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        props.hide();\n        };\n    };\n\n    return (\n        <>\n            <Modal show={props.show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Buy Robot</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Portfolio</Form.Label>\n                                    <Form.Control type=\"text\" placeholder={props.portfolio} value={props.portfolio}\n                                                  readOnly/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Available Cash (USD)</Form.Label>\n                                    <Form.Control type=\"text\" placeholder={'2000'} value={'2000'}\n                                                  readOnly/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Robot</Form.Label>\n                                    <Form.Control onChange={securityHandler} as=\"select\">\n                                        <option></option>\n                                        <OptionLoader\n                                            url={props.server + 'robots/get_robots_with_instrument/'}\n                                            params={instrumentParams}\n                                            code={1}\n                                            value={2}/>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <GetRobotPrice server={props.server} robot={securityName} getPrice={getRobotPrice}/>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Unit to invest</Form.Label>\n                                    <Form.Control onChange={unitHandler} type=\"number\" min={0.0}\n                                                  defaultValue={0} id={'unitInput'}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Label>Portfolio Quantity</Form.Label>\n                                <h2>{Math.round(robotQuantity*100)/100}</h2>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default PortfolioBuy;","import Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst NewPortCashFlow = (props) => {\n    const handleClose = () => {\n        props.hide();\n    };\n    const [value, setValue] = useState(0.0);\n    const [type, setType] = useState('INFLOW');\n    const [currency, setCurrency] = useState('USD');\n    const valueHandler = (event) => {\n        setValue(event.target.value);\n    };\n    const cashTypeHandler = (event) => {\n        setType(event.target.value);\n    };\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    }\n    const submitHandler = (event) => {\n        event.preventDefault();\n        console.log('form submited')\n        axios.post(props.server + 'portfolios/new_cash_flow/', {\n            port_name: props.portfolio,\n            amount: value,\n            type: type,\n            currency: currency,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setCurrency('USD');\n    };\n    return (\n        <Modal show={props.show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Funding</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                    <Form.Group>\n                        <Form.Label>Portfolio</Form.Label>\n                        <Form.Control type=\"text\" placeholder={props.portfolio} value={props.portfolio} readOnly/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Cash Flow</Form.Label>\n                        <Form.Control onChange={valueHandler} type=\"number\" placeholder=\"Value\"/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Currency</Form.Label>\n                        <Form.Control onChange={currencyHandler} as=\"select\">\n                            <option value={'USD'}>USD</option>\n                            <option value={'EUR'}>EUR</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Type</Form.Label>\n                        <Form.Control onChange={cashTypeHandler} as=\"select\">\n                            <option value={'INFLOW'}>Inflow</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={submitHandler}>\n                    Save\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default NewPortCashFlow;","import Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\n\nimport axios from \"axios\";\n\nconst NewBrokerAccount = (props) => {\n\n    const [broker, setBroker] = useState('');\n    const [accountNumber, setAccountNumber] = useState('');\n    const [token, setToken] = useState('');\n    const [env, setEnv] = useState('live');\n    const [currency, setCurrency] = useState('USD');\n\n    const onHide = () => {\n        props.hide();\n    };\n\n    const submitHandler = () => {\n        axios.post(props.server + 'accounts/new_account/', {\n            broker_name: broker,\n            account_number: accountNumber,\n            env: env,\n            token: token,\n            currency: currency,\n        })\n                .then(response => alert(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        setBroker('');\n        setAccountNumber('');\n        setToken('');\n        setEnv('live');\n        setCurrency('USD');\n        props.hide();\n    };\n\n    const brokerNameHandler = (event) => {\n        setBroker(event.target.value);\n    };\n\n    const accountNumberHandler = (event) => {\n        setAccountNumber(event.target.value);\n    };\n\n    const tokenHandler = (event) => {\n        setToken(event.target.value);\n    };\n\n    const envHandler = (event) => {\n        setEnv(event.target.value);\n    };\n\n    const currencyHandler = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    return (\n        <Modal show={props.show} onHide={onHide} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>New Account</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.Group>\n                    <Form.Control onChange={brokerNameHandler} type=\"text\" placeholder=\"Broker Name\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control onChange={accountNumberHandler} type=\"text\" placeholder=\"Account Number\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Control onChange={tokenHandler} type=\"text\" placeholder=\"Token\"/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Environment</Form.Label>\n                    <Form.Control onChange={envHandler} as=\"select\">\n                        <option value={'live'}>Live</option>\n                        <option value={'demo'}>Demo</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Currency</Form.Label>\n                    <Form.Control onChange={currencyHandler} as=\"select\">\n                        <option value={'USD'}>USD</option>\n                        <option value={'EUR'}>EUR</option>\n                    </Form.Control>\n                </Form.Group>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onHide}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={submitHandler}>\n                    Save\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default NewBrokerAccount;","import React, {useState, useEffect, useContext} from \"react\";\n\nconst PortfolioContext = React.createContext();\n\nexport default PortfolioContext;","const PortfolioRiskPage = (props) => {\n    return (\n        <>\n            <h2>Portfolio Risk</h2>\n        </>\n    );\n};\n\nexport default PortfolioRiskPage;","import Card from \"react-bootstrap/Card\";\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n// CSS\nimport \"../../../PortfolioPage.css\"\nimport \"../../../MainCSS.css\"\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport {useState} from \"react\";\n\nconst Holdings = () => {\n    const date = new Date();\n    const [startDate, setStartDate] = useState(date.toISOString().substr(0,10));\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n    return (\n        <Card className=\"card\">\n            <Row>\n                <Col>\n                    <Card.Title className=\"card-header-first\">Holdings</Card.Title>\n                </Col>\n                <Col>\n                    <Form.Group as={Row} style={{margin:'0px', padding:'5px'}}>\n                        <Form.Label className=\"form-label-first\" column sm={2}>\n                            Date\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"date\" onChange={startDateHandler}\n                                          defaultValue={date.toISOString().substr(0,10)}/>\n                        </Col>\n                    </Form.Group>\n                </Col>\n            </Row>\n            <div style={{height: '100%', overflowY: 'scroll', overflowX: 'hidden'}}>\n                <Table>\n                    <thead className=\"table-header-first\">\n                    <tr>\n                        <td className=\"table-header-row\">Starting Quantity</td>\n                        <td className=\"table-header-row\">Price</td>\n                        <td className=\"table-header-row\">Market Value</td>\n                        <td className=\"table-header-row\">Trade Date</td>\n                        <td className=\"table-header-row\">Instrument</td>\n                        <td className=\"table-header-row\">Instrument Type</td>\n                        <td className=\"table-header-row\">Source</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n\n                    </tbody>\n                </Table>\n            </div>\n        </Card>\n    );\n};\n\nexport default Holdings;","\nimport Holdings from \"./Holdings\";\n\nconst PortfolioHoldingsPage = (props) => {\n    return (\n        <>\n            <Holdings/>\n        </>\n    );\n};\n\nexport default PortfolioHoldingsPage;","import Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../../../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst PortfolioDetails = (props) => {\n\n    const [portData, setPortData] = useState([props.default]);\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_portfolio_data/'+ props.portfolio)\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setPortData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Card className=\"card\" style={{margin:'0px'}}>\n            <Card.Title className=\"card-header-first\">Portfolio Details</Card.Title>\n            <Card.Body>\n                <Row>\n                    <Col>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Portfolio Code</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['portfolio_code']}</p>\n                        </div>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Type</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['portfolio_type']}</p>\n                        </div>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Base Currency</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['currency']}</p>\n                        </div>\n                        <div style={{ display:'flex', width:'100%'}}>\n                            <p>Inception Date</p>\n                            <p style={{position: 'absolute', right:'20px'}}>{portData[0]['inception_date']}</p>\n                        </div>\n                        <div style={{display: 'flex', width: '100%'}}>\n                        <p>Status</p>\n                        <p style={{position: 'absolute', right: '20px'}}>{portData[0]['status']}</p>\n                    </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PortfolioDetails;","import Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n\nconst PortfolioDescription = () => {\n    return (\n        <Card className=\"card\" style={{margin:'0px'}}>\n            <Row>\n                <Col>\n                    <Card.Title className=\"card-header-first\">Description</Card.Title>\n                </Col>\n                <Col>\n                    <Button>Edit</Button>\n                </Col>\n            </Row>\n            <Card.Body>\n                <Row>\n                    <Col>\n\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PortfolioDescription;","import Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../../../MainCSS.css\"\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst CashHoldings = (props) => {\n    const date = new Date();\n\n    // Loading cash holding data\n    const [chData, setChData] = useState([{'amount': 0, 'currency': 'USD'}]);\n    console.log(chData)\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_cash_holdings/', {\n                params: {\n                    portfolio: props.portfolio,\n                    date: date.toISOString().substr(0,10),\n                }\n            })\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setChData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n    return (\n        <Card className=\"card\" style={{margin: '0px'}}>\n            <Card.Title className=\"card-header-first\">Cash Holdings</Card.Title>\n            <Card.Subtitle className=\"text-muted\">on {date.toISOString().substr(0,10)}</Card.Subtitle>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{margin:'0px', padding: '15px', display:'block'}}>\n                    <h2>{chData[0]['amount']}</h2>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CashHoldings;","import PortfolioDetails from \"./PortfolioDetails\";\nimport PortfolioDescription from \"./PortfolioDescreption\";\nimport CashHoldings from \"../PortfolioHoldings/CashHolding\";\n\n// Bootstrap\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst PortfolioDashBoardPage = (props) => {\n\n    return (\n        <Row style={{width: '100%', height:'100%', margin:'0px'}}>\n            <Row style={{width: '50%', height: '400px', background:'red', margin:'0px'}}>\n                <Col>\n                    <PortfolioDetails portfolio={props.portfolio} server={props.server} default={props.default}/>\n                </Col>\n                <Col>\n                    <PortfolioDescription/>\n                </Col>\n            </Row>\n            <Row style={{width: '50%', height:'150px', background:'blue', margin:'0px'}}>\n                <Col>\n                    <CashHoldings portfolio={props.portfolio} server={props.server}/>\n                </Col>\n                <Col>\n\n                </Col>\n            </Row>\n            <Row style={{width: '100%', height:'400px', background:'blue', margin:'0px'}}>\n\n            </Row>\n        </Row>\n    );\n};\n\nexport default PortfolioDashBoardPage;","const PortfolioSettingsPage = (props) => {\n    return (\n        <>\n            portfolio settings\n        </>\n    );\n};\n\nexport default PortfolioSettingsPage;","import Card from \"react-bootstrap/Card\";\n\nimport PortfolioBuy from \"../../PortfolioBuy\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport \"../../../PortfolioPage.css\"\nimport \"../../../MainCSS.css\"\n\nconst PortfolioTransactions = (props) => {\n     // Date variables\n    const date = new Date();\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const [startDate, setStartDate] = useState(firstDay.toISOString().substr(0,10));\n    const [endDate, setEndDate] = useState(date.toISOString().substr(0,10));\n\n    const [portTransData, setPortTransData] = useState([]);\n\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n    const endDateHandler = (event) => {\n        setEndDate(event.target.value);\n    };\n\n    useEffect(() => {\n            axios.get(props.server + 'portfolios/get_portfolio_transactions/' + props.portfolio)\n                .then(response => response['data'].map((data) =>\n                    <tr key={data[0]}>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[1]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[2]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[3]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[4]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[5]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[6]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[7]}</td>\n                        <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{data[8]}</td>\n                    </tr>\n                ))\n                .then(data => setPortTransData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Card className=\"card\">\n            <Row style={{width: '100%', margin: '0px'}}>\n                <Col sm={2}>\n                    <Card.Title className=\"card-header-first\">Transactions</Card.Title>\n                </Col>\n                <Col sm={10} style={{display:'flex'}}>\n                    <Col>\n                        <Form.Group as={Row} style={{margin:'0px', padding:'5px'}}>\n                        <Form.Label className=\"form-label-first\" column sm={2}>\n                            From\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"date\" onChange={startDateHandler}\n                                          defaultValue={firstDay.toISOString().substr(0, 10)}/>\n                        </Col>\n                    </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group as={Row} style={{margin:'0px', padding:'5px'}}>\n                        <Form.Label className=\"form-label-first\" column sm={2}>\n                            To\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control type=\"date\" onChange={endDateHandler}\n                                          defaultValue={date.toISOString().substr(0, 10)}/>\n                        </Col>\n                    </Form.Group>\n                    </Col>\n                </Col>\n            </Row>\n            <div style={{height: '100%', overflowY: 'scroll', overflowX: 'hidden'}}>\n                <Table>\n                    <thead className=\"table-header-first\">\n                    <tr>\n                        <td className=\"table-header-row\">Portfolio</td>\n                        <td className=\"table-header-row\">Quantity</td>\n                        <td className=\"table-header-row\">Price</td>\n                        <td className=\"table-header-row\">Market Value</td>\n                        <td className=\"table-header-row\">Trade Date</td>\n                        <td className=\"table-header-row\">Instrument</td>\n                        <td className=\"table-header-row\">Instrument Type</td>\n                        <td className=\"table-header-row\">Source</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {portTransData}\n                    </tbody>\n                </Table>\n            </div>\n        </Card>\n    );\n};\n\nexport default PortfolioTransactions;","import PortfolioTransactions from \"./PortfolioTransactions\";\n\nconst PortfolioTransactionsPage = (props) => {\n    return (\n        <>\n            <PortfolioTransactions portfolio={props.portfolio} server={props.server}/>\n        </>\n    );\n};\n\nexport default PortfolioTransactionsPage;","import {useContext, useEffect, useState} from \"react\";\nimport {Route, Switch, Link} from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nimport NewPortfolioForm from \"./PortfolioPage/NewPortfolioForm\";\n\n// Sidebar\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport 'react-pro-sidebar/dist/css/styles.css';\n\n// Calculations\nimport PositionCalculation from \"./PortfolioPage/Calculations/PositionCalculation\";\nimport CashHoldingCalculation from \"./PortfolioPage/Calculations/CashHoldingCalc\";\n\n// Bootstrap\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from 'react-bootstrap/Row';\nimport OptionLoader from \"../components/Options\";\n\n// CSS\nimport \"./PortfolioPage.css\"\nimport PortfolioBuy from \"./PortfolioPage/PortfolioBuy\";\nimport NewPortCashFlow from \"./PortfolioPage/NewPortCashFlow\";\n\n// Contexts\nimport RobotContext from \"../context/robot-context\";\nimport NewBrokerAccount from \"../components/NewBrokerAccount\";\nimport RiskPage from \"./RiskPage\";\nimport ServerContext from \"../context/server-context\";\nimport EnvContext from \"../context/env-context\";\nimport PortfolioContext from \"../context/portfolio-context\";\n\n\n// SubPages\nimport PortfolioRiskPage from \"./PortfolioPage/SubPages/PortfolioRisk/PortfolioRiskPage\";\nimport PortfolioHoldingsPage from \"./PortfolioPage/SubPages/PortfolioHoldings/PortfolioHoldingsPage\";\nimport PortfolioDashBoardPage from \"./PortfolioPage/SubPages/PortfolioDashboard/PortfolioDashBoardPage\";\nimport PortfolioSettingsPage from \"./PortfolioPage/SubPages/PortfolioSettings/PortfolioSettingsPage\";\nimport PortfolioTransactionsPage from \"./PortfolioPage/SubPages/PortfolioTransactions/PortfolioTransactionsPage\";\n\nconst PortfolioPage = (props) => {\n    // Date variables\n    const date = new Date();\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const defaultRobots = useContext(RobotContext)['robots'];\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n    const portfolios = useContext(PortfolioContext)['portfolioData'];\n    const [portfolio, setPortfolio] = useState(portfolios[0]['portfolio_code']);\n    const [startDate, setStartDate] = useState(firstDay.toISOString().substr(0,10));\n    const [endDate, setEndDate] = useState(date.toISOString().substr(0,10));\n    const portfolioOptions = portfolios.map((record) =>\n        <option key={record['id']} value={record['portfolio_code']}>{record['portfolio_name']}</option>)\n    const portSelectHandler = (event) => {\n        setPortfolio(event.target.value);\n    };\n    const portSelect = (port) => {\n        setPortfolio(port);\n    };\n\n    // New portfolio form\n    const [showNewPortfolio, setShowNewPortfolio] = useState(false);\n    const showNewRobotForm = () => {\n        setShowNewPortfolio(true);\n    };\n    const hideNewPortfolio = () => {\n        setShowNewPortfolio(false);\n    };\n\n    // New robot trade form\n    const [showNewRobotTrade, setNewRobotTrade] = useState(false);\n    const showNewRobotTradeForm = () => {\n        setNewRobotTrade(true);\n    };\n    const hideNewRobotTrade = () => {\n        setNewRobotTrade(false);\n    };\n\n    // New portfolio cash flow\n    const [showNewPortCashFlow, setNewPortCashFlow] = useState(false);\n    const showNewPortCashFlowForm = () => {\n        setNewPortCashFlow(true);\n    };\n    const hideNewPortCashFlow = () => {\n        setNewPortCashFlow(false);\n    };\n\n    // Position calculation\n    const [showPosCalc, setPosCalc] = useState(false);\n    const showPosCalcForm = () => {\n        setPosCalc(true);\n    };\n    const hidePosCalcForm = () => {\n        setPosCalc(false);\n    };\n\n    // Cash flow calculation\n    const [showCashCalc, setCashCalc] = useState(false);\n    const showCashCalcForm = () => {\n        setCashCalc(true);\n    };\n    const hideCashCalcForm = () => {\n        setCashCalc(false);\n    };\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '0px'}} fluid>\n            <Row style={{height: '100%', margin:'0px'}}>\n                <ProSidebar>\n                    <MenuItem style={{padding:'5px'}} ><Form.Control onChange={portSelectHandler} as=\"select\">\n                        {portfolioOptions}\n                    </Form.Control>\n                    </MenuItem>\n                    <Menu iconShape=\"square\">\n                        <MenuItem onClick={showNewRobotForm}>New Portfolio</MenuItem>\n                        <MenuItem>Dashboard\n                            <Link to=\"/portfolio/dashboard\"/>\n                        </MenuItem>\n                        <SubMenu title=\"Cash Operations\">\n                            <MenuItem onClick={showNewPortCashFlowForm}>Funding</MenuItem>\n                            <MenuItem>Withdraw</MenuItem>\n                        </SubMenu>\n                        <SubMenu title=\"Trade\">\n                            <MenuItem onClick={showNewRobotTradeForm}>Robot</MenuItem>\n                            <MenuItem>Security</MenuItem>\n                        </SubMenu>\n                        <SubMenu title=\"Calculations\">\n                            <MenuItem onClick={showCashCalcForm}>Cash Holdings</MenuItem>\n                            <MenuItem onClick={showPosCalcForm}>Positions</MenuItem>\n                            <MenuItem>Holdings</MenuItem>\n                            <MenuItem>Return</MenuItem>\n                        </SubMenu>\n                        <MenuItem>Holdings\n                            <Link to=\"/portfolio/holdings\"/>\n                        </MenuItem>\n                        <MenuItem>Transactions\n                            <Link to=\"/portfolio/transactions\"/>\n                        </MenuItem>\n                        <MenuItem>Risk\n                            <Link to=\"/portfolio/risk\"/>\n                        </MenuItem>\n                        <MenuItem>Return\n                            <Link to=\"/portfolio/return\"/>\n                        </MenuItem>\n                        <MenuItem>Settings\n                            <Link to=\"/portfolio/settings\"/>\n                        </MenuItem>\n                    </Menu>\n                    </ProSidebar>;\n                <Col style={{width: '50%'}}>\n                    <Row style={{\n                        padding: '15px',\n                        height: window.innerHeight,\n                        width: '100%',\n                        background: 'green',\n                        margin: '0px'\n                    }}>\n                        <Switch>\n                            <Route path=\"/portfolio/dashboard\">\n                                <PortfolioDashBoardPage portfolio={portfolio} server={server} default={portfolios[0]}\n                                />\n                            </Route>\n                            <Route path=\"/portfolio/holdings\">\n                                <PortfolioHoldingsPage portfolio={portfolio} server={server}/>\n                            </Route>\n                            <Route path=\"/portfolio/transactions\">\n                                <PortfolioTransactionsPage portfolio={portfolio} server={server}/>\n                            </Route>\n                            <Route path=\"/portfolio/risk\">\n                                <PortfolioRiskPage portfolio={portfolio} server={server}/>\n                            </Route>\n                            <Route path=\"/portfolio/return\">\n\n                            </Route>\n                            <Route path=\"/portfolio/settings\">\n                                <PortfolioSettingsPage/>\n                            </Route>\n                        </Switch>\n                    </Row>\n                </Col>\n            </Row>\n\n            {/*<Row>*/}\n            {/*    <Col>*/}\n            {/*        <Row style={{height: '500px', padding: '5px'}}>*/}\n            {/*            <Col style={{height: '100%'}} sm={4}>*/}\n            {/*                <PortfolioCashFlow portfolio={portfolio} server={server} start_date={startDate}*/}\n            {/*                                   end_date={endDate}/>*/}\n            {/*            </Col>*/}\n            {/*        </Row>*/}\n            {/*    </Col>*/}\n            {/*</Row>*/}\n\n            // Modals\n            <NewPortfolioForm show={showNewPortfolio} hide={hideNewPortfolio} server={server}/>\n            <PortfolioBuy show={showNewRobotTrade} hide={hideNewRobotTrade} portfolio={portfolio} server={server} env={env}/>\n            <NewPortCashFlow show={showNewPortCashFlow} hide={hideNewPortCashFlow} portfolio={portfolio} server={server}/>\n            <PositionCalculation show={showPosCalc} hide={hidePosCalcForm} server={server} portfolio={portfolio}/>\n            <CashHoldingCalculation show={showCashCalc} hide={hideCashCalcForm} server={server} portfolio={portfolio}/>\n        </Container>\n    );\n};\n\nexport default PortfolioPage;","import SliderWidget from \"../../components/SliderWidget\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\n\nimport PriceParagraph from \"./PriceParagraph\";\n\nconst TradeTableRow = (props) => {\n\n    // const newWebSocket = new WebSocket('ws://127.0.0.1:8000/trade/ws/')\n    // newWebSocket.send('XAG_USD')\n\n    // console.log(\"New trade\", newWebSocket)\n\n    const CloseTrade = () => {\n        axios.post(props.server + 'trade_page/close_trade/', {\n            broker_id: props.broker_id,\n            robot: props.robot,\n            trd_id: props.id,\n        })\n            .then(response => alert(response['data']))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <tr>\n            <td style={{fontSize: 12, verticalAlign:\"middle\" }}>{props.id}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\" }}>{props.broker_id}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.security}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.robot}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.quantity}</td>\n            <td style={{fontSize: 12, verticalAlign:\"middle\"}}>{props.price}</td>\n            {/*<td><PriceParagraph socketConnection={newWebSocket}/></td>*/}\n            <td><Button onClick={CloseTrade}>Close</Button></td>\n        </tr>\n    );\n};\n\nexport default TradeTableRow;","import {useContext, useEffect, useState} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport Row from \"react-bootstrap/Row\";\nimport TradeTableRow from \"./TradeTableRow\";\n\n\nconst TradeTableData = (props) => {\n\n    const [tradeData, setTradeData] = useState([])\n\n    // Fetching robot risk data from database\n    useEffect(() => {\n            fetch(props.server + 'trade_page/get_open_trades/' + props.env)\n                .then(response => response.json())\n                .then(data => setTradeData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const tradeDataRow = tradeData.map((record)=>\n        <TradeTableRow\n            server={props.server}\n            key={record['id']}\n            id={record['id']}\n            broker_id={record['broker_id']}\n            security={record['security']}\n            robot={record['robot']}\n            quantity={record['quantity']}\n            price={record['open_price']}/>)\n\n    return (\n        <Card style={{width: '100%'}}>\n            <Table>\n                <thead style={{fontSize: 12}}>\n                <tr>\n                    <th style={{verticalAlign: \"middle\"}}>Platform ID</th>\n                    <th style={{verticalAlign: \"middle\"}}>Broker ID</th>\n                    <th style={{verticalAlign: \"middle\"}}>Security</th>\n                    <th style={{verticalAlign: \"middle\"}}>Robot</th>\n                    <th style={{verticalAlign: \"middle\"}}>Quantity</th>\n                    <th style={{verticalAlign: \"middle\"}}>Price</th>\n                    <th style={{verticalAlign: \"middle\"}}></th>\n                </tr>\n                </thead>\n\n                <tbody style={{height: '100%', overflow: 'scroll'}}>\n                {tradeDataRow}\n                </tbody>\n            </Table>\n\n        </Card>\n    );\n};\n\nexport default TradeTableData;","import {useState} from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nconst TradeExecutor = (props) => {\n    const [robot, setRobot] = useState('');\n    const [side, setSide] = useState()\n    return (\n        <Card style={{}} className=\"card\">\n            <Card.Title className=\"card-header-first\">Robot Trade Execution</Card.Title>\n            <div style={{height: '200px', width:'200px'}}>\n\n            </div>\n        </Card>\n    );\n};\n\nexport default TradeExecutor","// React Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button'\n\nimport TradeTableData from \"./TradePage/TradeTableData\";\nimport PriceParagraph from \"./TradePage/PriceParagraph\";\nimport TradeExecutor from \"./TradePage/TradeExecutor\";\n\nimport {useContext, useState} from \"react\";\n\n// Contexts\nimport EnvContext from \"../context/env-context\";\nimport ServerContext from \"../context/server-context\";\nimport axios from \"axios\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\n\nconst TradePage = () => {\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n\n    // This part connects a websocket with the back end from the front end\n    // const newWebSocket = new WebSocket('http://127.0.0.1:8000/trade/price_stream/')\n    //\n    // console.log(newWebSocket)\n    //\n    // const testSocket = () => {\n    //     // This code sends data to the websocket form front end\n    //     newWebSocket.send(\"start\")\n    //     console.log('Streaming request is sent from front end to back end.')\n    // };\n    //\n    // const closeSocket = () => {\n    //     // This code closes the websocket connection with the back end\n    //     newWebSocket.send(\"stop\")\n    //     // newWebSocket.close()\n    //     console.log('Streaming is stopped')\n    // };\n\n    return (\n        <Container className={'border'}\n                   style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '20px'}} fluid>\n            <Row style={{height: '400px'}}>\n                <Col style={{height: '100%'}}>\n                    <Card style={{height: '100%'}} className=\"card\">\n                        <Card.Title className=\"card-header-first\">Portfolio Trade</Card.Title>\n                        <div style={{height: '500px', overflowY: 'scroll', overflowX: 'hidden'}}>\n\n                        </div>\n                    </Card>\n                </Col>\n                <Col style={{height: '100%'}}>\n                    <Card style={{height: '100%'}} className=\"card\">\n                        <Card.Title className=\"card-header-first\">Robot Trade</Card.Title>\n                        <div style={{height: '500px', overflowY: 'scroll', overflowX: 'hidden'}}>\n                            <TradeExecutor/>\n                        </div>\n                    </Card>\n                </Col>\n            </Row>\n            <br/>\n            <Row style={{height: '500px'}}>\n                <TradeTableData env={env} server={server}/>\n            </Row>\n        </Container>\n    );\n};\n\nexport default TradePage;","import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {Navbar} from \"react-bootstrap\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {store} from \"react-notifications-component\";\nimport {forEach} from \"react-bootstrap/ElementChildren\";\n\n\nconst Notifications = (props) => {\n    const startDate = new Date().toISOString().substr(0,10);\n    const [date, setDate] = useState(startDate)\n    const [messages, setMessages] = useState([]);\n    const tradeMessages = []\n    const processMessages = []\n\n    messages.forEach(function (item) {\n        if (item['msg_type'] === 'Process') {\n            processMessages.push(item)\n        }\n        if (item['msg_type'] === 'Trade') {\n            tradeMessages.push(item)\n        }\n    })\n\n    // if (tradeMessages.length > 0){\n    //     document.getElementById('notTrades').style.backgroundColor='red'\n    // }\n\n    // Fetch the data periodically\n    useEffect(() => {\n        const interval = setInterval(() => {\n            axios.get(props.server + 'home/system_messages/not_verified', {\n                params: {\n                    date: date,\n                }\n            })\n                .then(response => setMessages(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, 1000*900);\n        return () => clearInterval(interval);\n    }, [])\n\n    const removeMsg = (msg) => {\n        axios.get(props.server + 'home/verify_sys_msg/' + msg)\n            .then(response => console.log(response['data']))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    const procNotHandler = () => {\n        processMessages.forEach(function (item) {\n            store.addNotification({\n                title: item['msg_type'] + ' - ' + item['msg_sub_type'],\n                message: item['msg'],\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                onRemoval: () => {\n                    removeMsg(item['id']);\n                }\n            })\n        })\n    };\n\n    const tradeNotHandler = () => {\n        tradeMessages.forEach(function (item) {\n            store.addNotification({\n                title: item['msg_type'] + ' - ' + item['msg_sub_type'],\n                message: item['msg'],\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                onRemoval: () => {\n                    removeMsg(item['id']);\n\n                }\n            })\n        })\n    };\n\n    return (\n        <>\n            <Form style={{margin: '5px'}}>\n                <Button id={'notError'}>Error Notifications</Button>\n            </Form>\n            <Form style={{margin: '5px'}}>\n                <Button id={'notRisk'}>Risk Notifications</Button>\n            </Form>\n            <Form onClick={procNotHandler} style={{margin: '5px'}}>\n                <Button id={'notProcess'}>Process Notifications</Button>\n            </Form>\n            <Form style={{margin: '5px'}}>\n                <Button onClick={tradeNotHandler} id={'notTrades'}>Trade Notifications</Button>\n            </Form>\n        </>\n    );\n};\n\nexport default Notifications","import { Navbar, Nav, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { Link } from 'react-router-dom'\n\nimport {useContext, useEffect, useState} from \"react\";\n\nimport NewBrokerAccount from \"./NewBrokerAccount\";\nimport Notifications from \"./Notifications\";\nimport ServerContext from \"../context/server-context\";\nimport {store} from \"react-notifications-component\";\nimport axios from \"axios\";\n\nconst Navigation = (props) => {\n\n    const server = useContext(ServerContext)['server'];\n    const [showNewAccount, setShowNewAccount] = useState(false);\n\n    const envChange = (envValue) => {\n        props.onEnvChange(envValue);\n    };\n\n    // New account handlers\n    const newAccountHandler = () => {\n        setShowNewAccount(true);\n    };\n\n    const hideNewAccount = () => {\n        setShowNewAccount(false);\n    };\n\n    // if (messages.length > 0){\n    //     console.log(messages.length)\n    //     document.getElementById('notTrades').style.backgroundColor = \"red\";\n    // };\n\n    return (\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">FFM SYSTEM</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={Link} to={'/home'}>Home</Nav.Link>\n                    <Nav.Link as={Link} to={'/portfolio'}>Portfolio</Nav.Link>\n                    <Nav.Link as={Link} to={'/robot'}>Robot</Nav.Link>\n                    <Nav.Link as={Link} to={'/risk'}>Risk</Nav.Link>\n                    <Nav.Link as={Link} to={'/instruments'}>Instrument</Nav.Link>\n                    <Nav.Link as={Link} to={'/trade'}>Trade</Nav.Link>\n                    <NavDropdown title=\"Broker Accounts\">\n                        <NavDropdown.Item onSelect={newAccountHandler}>New</NavDropdown.Item>\n                        <NavDropdown.Item>Update</NavDropdown.Item>\n                        <NavDropdown.Item>Delete</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n                <Notifications server={server}/>\n                <Form inline style={{margin: '5px'}}>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\n                    <Button variant=\"outline-info\">Search</Button>\n                </Form>\n                <Dropdown onSelect={envChange} style={{margin: '5px'}}>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        {props.env}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item eventKey=\"live\">Live</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"demo\">Demo</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n\n                <NewBrokerAccount show={showNewAccount} hide={hideNewAccount} server={server}/>\n            </Navbar>\n\n    );\n};\n\nexport default Navigation;","import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {useEffect, useState, useRef} from \"react\";\nimport axios from \"axios\";\nimport OptionLoader from \"../../components/Options\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst NewRobotForm = (props) => {\n    const [robotName, setRobotName] = useState('');\n    const [strategy, setStrategy] = useState('');\n    const [broker, setBroker] = useState('oanda');\n    const [env, setEnv] = useState('live');\n    const [account, setAccount] = useState('');\n    const [instrument, setInstrument] = useState('');\n\n    console.log(account);\n    console.log(instrument)\n\n    const handleClose = () => {\n        props.hide();\n    };\n\n    const accountParams = {\n        'broker': broker,\n        'env': env,\n    };\n\n    const instrumentParams = {\n        'broker': broker,\n    };\n\n    const robotNameChangeHandler = (event) => {\n        setRobotName(event.target.value)\n    };\n\n    const robotStrategyHandler = (event) => {\n        setStrategy(event.target.value)\n    };\n\n    const envHandler = (event) => {\n        setEnv(event.target.value);\n    };\n\n    const instHandler = (event) => {\n        setInstrument(event.target.value);\n    };\n\n    const brokerHandler = (event) => {\n        setBroker(event.target.value);\n    };\n\n    const accountHandler = (event) => {\n        setAccount(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        axios.post(props.server + 'robots/new_robot/', {\n            robot_name: robotName,\n            strategy: strategy,\n            security: instrument,\n            broker: broker,\n            env: env,\n            account: account,\n        })\n                .then(response => console.log(response))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        props.hide();\n    };\n\n    return (\n        <>\n            <Modal show={props.show} onHide={handleClose} animation={false}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Robot</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                        <Form.Group>\n                            <Form.Label>Robot Name</Form.Label>\n                            <Form.Control onChange={robotNameChangeHandler} type=\"text\" placeholder=\"Robot Name\"\n                                          maxLength={20}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Strategy</Form.Label>\n                            <Form.Control onChange={robotStrategyHandler} as=\"select\">\n                                <option value={'Initiative'}>Initiative</option>\n                                <option value={'Responsive'}>Responsive</option>\n                                <option value={'Correction'}>Correction</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Broker</Form.Label>\n                            <Form.Control onChange={brokerHandler} as=\"select\">\n                                <option>oanda</option>\n                                <option>Fix</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Environment</Form.Label>\n                            <Form.Control onChange={envHandler} as=\"select\">\n                                <option value={'live'}>Live</option>\n                                <option value={'demo'}>Demo</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Instruments</Form.Label>\n                            <Form.Control onChange={instHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'instruments/get_instruments/'}\n                                    params={instrumentParams}\n                                    code={'instrument_name'}\n                                    value={'instrument_name'}\n                                />\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Account Number</Form.Label>\n                            <Form.Control onChange={accountHandler} as=\"select\">\n                                <OptionLoader\n                                    url={props.server + 'accounts/get_accounts_data/'}\n                                    params={accountParams}\n                                    code={'account_number'}\n                                    value={'account_number'}\n                                />\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={submitHandler}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default NewRobotForm;","import {Card} from \"react-bootstrap\";\n\nimport {useState} from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\n\nconst RobotBalanceCalculation = (props) => {\n    const [loadState, setLoadState] = useState(false);\n\n    const handleClose = () => {\n        props.hide();\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        setLoadState(true);\n\n        axios.post(props.server + 'robots/calculate_robot_balance/', {\n            process: 'Balance',\n            robot: props.robot,\n            start_date: props.start_date,\n            end_date: props.end_date,\n        })\n            .then(response => setLoadState(false))\n            .catch((error) => {\n                console.error('Error Message:', error);\n            });\n    };\n\n    return (\n        <Modal show={props.show} onHide={handleClose} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>Balance - {props.robot}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{width: '200px', height: '300px'}}>\n                <Form onSubmit={submitHandler} style={{width: '100%'}}>\n                    <Form.Group>\n                        <Button variant=\"primary\" onClick={submitHandler}>\n                            Balance\n                        </Button>\n                    </Form.Group>\n                </Form>\n                <h2>Calculating ...</h2>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default RobotBalanceCalculation;","import Card from \"react-bootstrap/Card\";\n\nimport \"../MainCSS.css\"\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Form from \"react-bootstrap/Form\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst RobotNav = (props) => {\n    const [robotsData, setRobotsData] = useState(props.robots);\n\n    const robotSelectHandler = (event) => {\n        props.robotChange(event.target.value);\n    };\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robots/' + props.env)\n                .then(response => setRobotsData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const robotsOptions = robotsData.map((record) =>\n        <option key={record['id']} value={record['name']}>{record['name']}</option>);\n\n    return (\n            <Form.Group as={Row} style={{alignItems: 'center'}}>\n                <Col sm={10}>\n                    <Form.Control onChange={robotSelectHandler} as=\"select\" style={{margin:'0px'}}>\n                        {robotsOptions}\n                    </Form.Control>\n                </Col>\n            </Form.Group>\n    );\n};\n\nexport default RobotNav;","import Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {useState} from \"react\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport TreeView from \"@mui/lab/TreeView\";\nimport TreeItem from \"@mui/lab/TreeItem\";\n\nconst RobotPricingForm = (props) => {\n    const date = new Date();\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const [startDate, setStartDate] = useState(firstDay.toISOString().substr(0,10));\n    const [endDate, setEndDate] = useState(date.toISOString().substr(0,10));\n    const [robot, setRobot] = useState(props.robot);\n    const [response, setResponse] = useState([]);\n    const treeData = response.map(function (data, index) {\n        let treeNodes = data['response'].map(item => <TreeItem label={item['date'] + \" \" + item['msg']}></TreeItem>);\n        return <TreeItem nodeId={index.toString()} label={data['robot']}>\n            {treeNodes}\n        </TreeItem>\n    });\n    const handleClose = () => {\n        props.hide();\n        setRobot(props.robot)\n    };\n\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n\n    const endDateHandler = (event) => {\n        setEndDate(event.target.value);\n    };\n\n    const changeRobot = (event) => {\n        if (event.target.checked){\n            setRobot('ALL');\n        }else {\n            setRobot(props.robot);\n        };\n        console.log(event.target.checked)\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        axios.post(props.server + 'robots/pricing/', {\n            robot: robot,\n            start_date: startDate,\n            end_date: endDate,\n        })\n                .then(response => setResponse(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        // props.hide();\n    };\n\n    return (\n        <Modal show={props.show} onHide={handleClose} animation={false} size={'xl'}>\n            <Modal.Header closeButton>\n                <Modal.Title>Pricing - {robot}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row style={{height:'100%'}}>\n                    <Col style={{height:'100%'}}>\n                        <Form onSubmit={submitHandler} style={{width: '100%', height:'100%'}}>\n                            <Row style={{height: '60px', width: '100%', padding: '5px', margin: '5px'}}>\n                                <Row style={{width: '100%', margin: '0px'}}>\n                                    <Form.Group style={{width: '100%', margin: '0px'}}>\n                                        <Form.Label className=\"form-label-first\" column sm={2}>\n                                            From\n                                        </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"date\" onChange={startDateHandler}\n                                                          defaultValue={firstDay.toISOString().substr(0, 10)}/>\n                                        </Col>\n                                    </Form.Group>\n                                </Row>\n                                <Row style={{width: '100%', margin: '0px'}}>\n                                    <Form.Group style={{width: '100%'}}>\n                                        <Form.Label className=\"form-label-first\" column sm={2}>\n                                            To\n                                        </Form.Label>\n                                        <Col sm={10}>\n                                            <Form.Control type=\"date\" onChange={endDateHandler}\n                                                          defaultValue={date.toISOString().substr(0, 10)}/>\n                                        </Col>\n                                    </Form.Group>\n                                </Row>\n                            </Row>\n                        </Form>\n                    </Col>\n                    <Col style={{height:'100%'}}>\n                        <TreeView\n                    aria-label=\"file system navigator\"\n                    defaultCollapseIcon={<ExpandMoreIcon/>}\n                    defaultExpandIcon={<ChevronRightIcon/>}\n                    sx={{height: 200, flexGrow: 1, maxWidth: '100%', overflowY: 'auto'}}\n                >\n                    {treeData}\n                </TreeView>\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer>\n                <Row style={{width: '100%', margin: '0px'}}>\n                    <Col>\n                         <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                        <Form.Check onClick={changeRobot} type=\"checkbox\" label=\"All Robots\"/>\n                    </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group style={{width: '100%'}}>\n                        <Col sm={10}>\n                            <Button variant=\"primary\" onClick={submitHandler} style={{width: '100%'}}>\n                                Calculate\n                            </Button>\n                        </Col>\n                    </Form.Group>\n                    </Col>\n                </Row>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default RobotPricingForm;","import Card from \"react-bootstrap/Card\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n\nimport \"../../../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Container from \"react-bootstrap/Container\";\n\nconst RobotDetails = (props) => {\n\n    const [robotData, setRobotData] = useState([props.default]);\n    const [priceData, setPriceData] = useState([]);\n    console.log(priceData)\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_robot/'+props.robot)\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setRobotData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_last_price/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date,\n                }\n            })\n                .then(function(response){\n                    const data = response['data'];\n                    setPriceData(data);\n                })\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Card className=\"card\" style={{margin: '0px'}}>\n                {/*<Card.Title className=\"card-header-first\">Details</Card.Title>*/}\n                <Card.Body style={{padding: '5px'}}>\n                    <Row style={{height: '100%', width: '100%', margin: '0px'}}>\n                        <Col style={{height: '100%'}}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Strategy</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['strategy']}</p>\n                            </Col>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Security</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['security']}</p>\n                            </Col>\n                        </Col>\n                        <Col style={{height: '100%'}}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Inception Date</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['inception_date']}</p>\n                            </Col>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Broker</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['broker']}</p>\n                            </Col>\n\n                        </Col>\n                        <Col style={{height: '100%'}}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Account Number</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{robotData[0]['account_number']}</p>\n                            </Col>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                <p>Last Price on {priceData['date']}</p>\n                                <p style={{position: 'absolute', right: '0px'}}>{Math.round(priceData['price'] * 100) / 100}</p>\n                            </Col>\n                        </Col>\n                    </Row>\n                </Card.Body>\n\n            </Card>\n    );\n};\n\nexport default RobotDetails;","import RobotDetails from \"./RobotDetails\";\n\n// Bootstrap\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport PieCharts from \"../../../../components/Charts/PieCharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst RobotDashBoardPage = (props) => {\n\n    return (\n        <Row style={{width: '100%', height:'100%', margin:'0px'}}>\n            <Row style={{width: '100%', height: '100px', margin:'0px'}}>\n                <RobotDetails server={props.server} robot={props.robot} default={props.default}/>\n            </Row>\n        </Row>\n\n    );\n};\n\nexport default RobotDashBoardPage;\n","import Card from \"react-bootstrap/Card\";\nimport Row from 'react-bootstrap/Row';\nimport Chart from \"react-apexcharts\";\nimport Col from 'react-bootstrap/Col';\n\n\nimport \"../../../MainCSS.css\"\n\nconst RobotTrades = (props) => {\n    let losingTradeNumber = 0;\n    let winningTradeNumber = 0;\n    let losingTrades = [];\n    let winningTrades = [];\n    let totalWinner = 0.0;\n    let totalLoser= 0.0;\n\n    for (const val of props.data) {\n        if (val < 0) {\n            losingTradeNumber=+losingTradeNumber+1;\n            losingTrades.push(val);\n        } else if (val > 0){\n            winningTradeNumber=+winningTradeNumber+1;\n            winningTrades.push(val);\n        };\n\n    };\n\n    for (let i = 0; i < losingTrades.length; i++) {\n        totalLoser += losingTrades[i];\n    };\n\n    for (let i = 0; i < winningTrades.length; i++) {\n        totalWinner += winningTrades[i];\n    };\n\n    let winPerc = Math.round((winningTradeNumber) / (losingTradeNumber + winningTradeNumber)*100)/100;\n    let lossPerc = Math.round(losingTradeNumber / (losingTradeNumber + winningTradeNumber)*100)/100;\n    let avgWinner = Math.round(totalWinner/winningTrades.length*100)/100;\n    let avgLoser = Math.round(totalLoser/losingTrades.length*100)/100;\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    },\n                    title: {\n            text: 'Profit'\n          }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n        series: [\n            {\n                name: \"series-1\",\n                data: props.data,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\" style={{margin:'0px'}}>\n            <Card.Title className=\"card-header-first\">Trades</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height:'100%', width:'100%', margin:'0px'}}>\n                    <Col style={{height:'100%'}} sm={8}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"/>\n\n                        </div>\n                    </Col>\n                    <Col sm={4} style={{height:'100%'}}>\n                        <Row>\n                            <h2>Statistics</h2>\n                        </Row>\n                        <Row style={{padding:'5px', marginRight:'25px', position:'centered'}}>\n                            <Col>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Total Trades</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{losingTradeNumber + winningTradeNumber}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Winning Trades</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{winningTradeNumber}</p>\n                                </div>\n                               <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Loosing Trades</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{losingTradeNumber}</p>\n                                </div>\n                               <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Winning %</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{winPerc}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Loosing %</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{lossPerc}</p>\n                                </div>\n                            </Col>\n                            <Col>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Total Winning P&L</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{Math.round(totalWinner*100)/100}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Total Losing P&L</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{Math.round(totalLoser*100)/100}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Avg Winning Trade</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{avgWinner}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Avg Losing Trade</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px'\n                                    }}>{avgLoser}</p>\n                                </div>\n                                <div style={{display: 'flex', width: '100%'}}>\n                                    <p>Payoff Ratio</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '0px',\n                                    }}>{Math.round(Math.abs(avgWinner/avgLoser)*100)/100}</p>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row style={{\n                            width: '100%',\n                            padding: '5px',\n                            position: 'absolute',\n                            bottom: '0px'\n                        }}>\n                            <Col style={{display: 'flex', width: '100%'}}>\n                                    <p style={{fontWeight:'bold'}}>Profit Factor</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '15px',\n                                        fontWeight:'bold'\n                                    }}>{Math.round((winPerc * avgWinner) / (lossPerc / avgLoser) * -100) / 100}</p>\n                            </Col>\n                            <Col>\n                                 <p style={{fontWeight:'bold', position:'absolute', left:'0px'}}>Total Profit</p>\n                                    <p style={{\n                                        position: 'absolute',\n                                        right: '45px',\n                                        fontWeight:'bold'\n                                    }}>{Math.round((totalWinner+totalLoser) * 100) / 100}</p>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n);\n};\n\nexport default RobotTrades;","import Button from \"react-bootstrap/Button\";\n\nconst RobotTransactionTableRow = (props) => {\n    return (<tr>\n        <td style={{fontSize: 12, verticalAlign: \"middle\"}}>{props.quantity}</td>\n        <td style={{fontSize: 12, verticalAlign: \"middle\"}}>{props.status}</td>\n        <td style={{fontSize: 12, verticalAlign: \"middle\"}}>{props.pnl}</td>\n        <td style={{fontSize: 12, verticalAlign: \"middle\"}}>{props.open_price}</td>\n        <td style={{fontSize: 12, verticalAlign: \"middle\"}}>{props.close_price}</td>\n        <td style={{fontSize: 12, verticalAlign: \"middle\"}}>{props.open_time}</td>\n        <td style={{fontSize: 12, verticalAlign: \"middle\"}}>{props.close_time}</td>\n        <td style={{fontSize: 12, verticalAlign: \"middle\"}}>{props.side}</td>\n        <td style={{fontSize: 12, verticalAlign: \"middle\"}}>{props.broker_id}</td>\n        <td><Button>Update</Button></td>\n    </tr>);\n};\n\nexport default RobotTransactionTableRow","import Table from \"react-bootstrap/Table\";\nimport Card from \"react-bootstrap/Card\";\n\nimport RobotTransactionTableRow from \"./RobotTransactionTableRow\";\n\nconst RobotTransactionsTable = (props) => {\n    const transactionRows = props.data.map(data =>\n        <RobotTransactionTableRow quantity={data['quantity']} status={data['status']} pnl={data['pnl']}\n                                  open_price={data['open_price']} close_price={data['close_price']}\n                                  open_time={data['open_time']}\n                                  close_time={data['close_time']} side={data['side']} broker_id={data['broker_id']}/>\n    )\n    return (\n        <Card style={{width: '100%'}}>\n            <div style={{height: '500px', overflowY: 'scroll', overflowX: 'hidden'}}>\n                <Table>\n                <thead style={{fontSize: 12}}>\n                <tr>\n                    <th style={{verticalAlign: \"middle\"}}>Quantity</th>\n                    <th style={{verticalAlign: \"middle\"}}>Status</th>\n                    <th style={{verticalAlign: \"middle\"}}>P&L</th>\n                    <th style={{verticalAlign: \"middle\"}}>Open Price</th>\n                    <th style={{verticalAlign: \"middle\"}}>Close Price</th>\n                    <th style={{verticalAlign: \"middle\"}}>Open Time</th>\n                    <th style={{verticalAlign: \"middle\"}}>Close Time</th>\n                    <th style={{verticalAlign: \"middle\"}}>Side</th>\n                    <th style={{verticalAlign: \"middle\"}}>Broker ID</th>\n                    <th style={{verticalAlign: \"middle\"}}></th>\n                </tr>\n                </thead>\n                <tbody style={{height: '100%', overflow: 'scroll'}}>\n                {transactionRows}\n                </tbody>\n            </Table>\n            </div>\n        </Card>\n    );\n};\n\nexport default RobotTransactionsTable;","import RobotTrades from \"./RobotTrades\";\nimport RobotTransactionsTable from \"./RobotTransactionsTable\";\n\n// Bootstrap\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst RobotTransactionsPage = (props) => {\n    const [transactionData, setTransactionData] = useState([]);\n    const pnlData = transactionData.map(data => data['pnl'])\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/trades/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date\n                }\n            })\n                .then(data => setTransactionData(data['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <Row style={{width: '100%', height:'100%', margin:'0px'}}>\n            <Row style={{width: '100%', height: '400px', margin:'0px'}}>\n                <RobotTrades data={pnlData}/>\n            </Row>\n            <Row style={{width: '100%', height: '400px', margin:'0px'}}>\n                <RobotTransactionsTable data={transactionData}/>\n            </Row>\n        </Row>\n    );\n};\n\nexport default RobotTransactionsPage;","import Card from \"react-bootstrap/Card\";\n\nimport \"../../../MainCSS.css\"\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Chart from \"react-apexcharts\";\n\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nconst RobotDrawDown = (props) => {\n\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/drawdown/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date\n                }\n            })\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n        series: [\n            {\n                name: \"Drawdown\",\n                data: chartData,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\" style={{margin:'0px'}}>\n            <Card.Title className=\"card-header-first\">Drawdown</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%'}}>\n                    <Col style={{height: '100%'}}>\n                        <Chart\n                            options={chartOptions.options}\n                            series={chartOptions.series}\n                            type={'bar'}\n                            width=\"100%\"\n                            height=\"100%\"\n                        />\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RobotDrawDown;","import RobotDrawDown from \"./RobotDrawDown\";\n\n// Bootstrap\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nconst RobotRiskPage = (props) => {\n    return (\n            <Row style={{width: '100%', height:'100%', margin:'0px'}}>\n                <Row style={{width: '100%', height: '400px', margin:'0px'}}>\n                    <RobotDrawDown robot={props.robot} start_date={props.start_date} end_date={props.end_date} server={props.server}/>\n                </Row>\n            </Row>\n    );\n};\n\nexport default RobotRiskPage;","import Chart from \"react-apexcharts\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Card from \"react-bootstrap/Card\";\n\nconst CumulativeReturnChart = (props) => {\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false},\n                axisBorder: {\n                    show: false,\n                    color: '#78909C',\n                    height: 1,\n                    width: '100%',\n                    offsetX: 0,\n                    offsetY: 0\n                },\n                axisTicks: {\n                    show: false,\n                    borderType: 'solid',\n                    color: '#78909C',\n                    height: 6,\n                    offsetX: 0,\n                    offsetY: 0\n                },\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n\n        },\n\n        title: {\n            text: 'Cumulative Return',\n            align: 'left',\n            margin: 10,\n            offsetX: 0,\n            offsetY: 0,\n            floating: false,\n            style: {\n                fontSize: '14px',\n                fontWeight: 'bold',\n                // fontFamily: undefined,\n                color: '#263238'\n            },\n        },\n\n        series: [\n            {\n                name: \"series-1\",\n                data: props.data,\n            }\n        ]\n    };\n\n    return (\n        <Card className=\"card\" style={{margin: '0px'}}>\n            <Card.Title className=\"card-header-first\">Cumulative Return</Card.Title>\n            <Card.Body style={{padding: '0px'}}>\n                <Row style={{height: '100%', width: '100%', margin: '0px'}}>\n                    <Col style={{height: '100%'}}>\n                        <div style={{padding: '0px', height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'line'}\n                                width=\"100%\"\n                                height=\"100%\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n\n};\n\nexport default CumulativeReturnChart;","import Card from \"react-bootstrap/Card\";\n\nimport \"../../../MainCSS.css\"\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n// Charts\nimport CumulativeReturnChart from \"../../Charts/CumulativeReturn\";\n\nconst RobotReturn = (props) => {\n    const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n            axios.get(props.server + 'robots/cumulative_ret/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date\n                }\n            })\n                .then(response => response['data'].map(data => data))\n                .then(data => setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    return (\n        <CumulativeReturnChart data={chartData}/>\n    );\n};\n\nexport default RobotReturn;","import Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Chart from \"react-apexcharts\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst RobotDailyReturns = (props) => {\n\n    const [chartData, setChartData] = useState([]);\n    console.log(chartData)\n    const dailyReturnList = chartData.map(data => data['ret'])\n    useEffect(() => {\n            axios.get(props.server + 'robots/get_balance/', {\n                params: {\n                    robot: props.robot,\n                    start_date: props.start_date,\n                    end_date: props.end_date\n                }\n            })\n                .then(response => response['data'].map(data=>data))\n                .then(data=>setChartData(data))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, [props]\n    );\n\n    const chartOptions = {\n        options: {\n            chart: {\n                toolbar: false,\n                id: \"basic-bar\"\n            },\n            xaxis: {\n                categories: [],\n                labels: {show: false}\n            },\n            yaxis: [\n                {\n                    labels: {\n                        formatter: function (val) {\n                            return val.toFixed(0);\n                        }\n                    }\n                }\n            ],\n            dataLabels: {\n                enabled: false\n            },\n        },\n        series: [\n            {\n                name: \"series-1\",\n                data: dailyReturnList,\n            }\n        ]\n    };\n\n    return (\n            <Card className=\"card\" style={{margin: '0px'}}>\n                <Card.Title className=\"card-header-first\">Daily Return</Card.Title>\n                <Card.Body style={{padding: '0px'}}>\n                    <Row style={{height: '100%', width: '100%', margin: '0px'}}>\n                        <Col style={{height: '100%'}}>\n                            <Chart\n                                options={chartOptions.options}\n                                series={chartOptions.series}\n                                type={'bar'}\n                                width=\"100%\"\n                                height=\"100%\"\n                            />\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n    );\n};\n\nexport default RobotDailyReturns;","import RobotReturn from \"./RobotReturn\";\nimport RobotDailyReturns from \"./RobotDailyReturns\";\n\n// Bootstrap\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst RobotReturnPage = (props) => {\n    return (\n        <Row style={{width: '100%', height:'100%', margin:'0px'}}>\n            <Row style={{width: '50%', height: '300px', margin:'0px'}}>\n                <RobotReturn robot={props.robot} start_date={props.start_date} end_date={props.end_date} server={props.server}/>\n            </Row>\n            <Row style={{width: '50%', height: '300px', margin:'0px'}}>\n                <RobotDailyReturns robot={props.robot} start_date={props.start_date} end_date={props.end_date} server={props.server}/>\n            </Row>\n        </Row>\n    );\n};\n\nexport default RobotReturnPage;","import {useState, useEffect, useContext} from \"react\";\n\nimport NewRobotForm from \"./Robot/NewRobotForm\";\nimport RobotTable from \"./Robot/RobotTable\";\nimport RobotBalanceCalculation from \"./Robot/RobotBalanceCalculation\";\n\n\nimport RobotBalance from \"./Robot/RobotBalance\";\nimport RobotCashFlow from \"./Robot/RobotCashFlow\";\nimport RobotNav from \"./Robot/RobotNav\";\n\nimport RobotPricing from \"./Robot/RobotPricing\";\nimport RobotProcesses from \"./Robot/RobotProcesses\";\n\n// Forms\nimport RobotPricingForm from \"./Robot/Calculations/RobotPricingForm\";\n\nimport axios from \"axios\";\n\n// Sidebar\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport 'react-pro-sidebar/dist/css/styles.css';\n\n// Subpages\nimport RobotDashBoardPage from \"./Robot/SubPages/RobotDashboard/RobotDashBoardPage\";\nimport RobotTransactionsPage from \"./Robot/SubPages/RobotTransactions/RobotTransactionsPage\";\nimport RobotRiskPage from \"./Robot/SubPages/RobotRisk/RobotRiskPage\";\nimport RobotReturnPage from \"./Robot/SubPages/RobotReturn/RobotReturnPage\";\n\n// Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\n// Context\nimport ServerContext from \"../context/server-context\";\nimport EnvContext from \"../context/env-context\";\nimport RobotContext from \"../context/robot-context\";\nimport {Card} from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport {Link, Route, Switch} from \"react-router-dom\";\n\n\nconst RobotPage = (props) => {\n    // Date variables\n    const date = new Date();\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const server = useContext(ServerContext)['server'];\n    const env = useContext(EnvContext)['environment'];\n    const defaultRobots = useContext(RobotContext)['robots'];\n    const [robot, setRobot] = useState(defaultRobots[0]['name']);\n    const [startDate, setStartDate] = useState(firstDay.toISOString().substr(0,10));\n    const [endDate, setEndDate] = useState(date.toISOString().substr(0,10));\n    console.log(robot)\n    const changeRobot = (rob) => {\n        setRobot(rob);\n    };\n\n    const startDateHandler = (event) => {\n        setStartDate(event.target.value);\n    };\n\n    const endDateHandler = (event) => {\n\n        if (event.target.value < startDate) {\n            alert('End date can not be less then start date!');\n        }else {\n            setEndDate(event.target.value);\n        };\n    };\n\n    // New robot form\n    const [showNewRobot, setNewRobot] = useState(false);\n    const showNewRobotForm = () => {\n        setNewRobot(true);\n    };\n    const hideNewRobotForm = () => {\n        setNewRobot(false);\n    };\n\n    const [showRobotBalanceCalc, setRobotBalanceCalc] = useState(false);\n    const showRobotCalcForm = () => {\n        setRobotBalanceCalc(true);\n    };\n    const hideRobotBalanceCalcForm = () => {\n        setRobotBalanceCalc(false);\n    };\n\n    const [showRobotPricingCalc, setRobotPricingCalc] = useState(false);\n    const showRobotPricingForm = () => {\n        setRobotPricingCalc(true);\n    };\n    const hideRobotPricingCalcForm = () => {\n        setRobotPricingCalc(false);\n    };\n\n    return (\n        <Container style={{background: '#FBFAFA', width: \"100%\", height: window.innerHeight, padding: '0px'}} fluid>\n            <Row style={{height: '100%', margin:'0px'}}>\n                <ProSidebar>\n                    <MenuItem style={{padding:'5px'}} ><RobotNav robots={defaultRobots}\n                                          server={server}\n                                          env={env}\n                                          robotChange={changeRobot}\n                                />\n                    </MenuItem>\n                    <Menu iconShape=\"square\">\n                        <MenuItem onClick={showNewRobotForm}>New Robot</MenuItem>\n                        <MenuItem>Dashboard\n                            <Link to=\"/robot/dashboard\"/>\n                        </MenuItem>\n                        <SubMenu title=\"Trade\">\n                            <MenuItem>Robot</MenuItem>\n                        </SubMenu>\n                        <SubMenu title=\"Calculations\">\n                            <MenuItem onClick={showRobotCalcForm}>Balance</MenuItem>\n                            <MenuItem onClick={showRobotPricingForm}>Pricing</MenuItem>\n                        </SubMenu>\n                        <MenuItem>Transactions\n                            <Link to=\"/robot/transactions\"/>\n                        </MenuItem>\n                        <MenuItem>Risk\n                            <Link to=\"/robot/risk\"/>\n                        </MenuItem>\n                        <MenuItem>Return\n                            <Link to=\"/robot/return\"/>\n                        </MenuItem>\n                        <MenuItem>Settings\n                            <Link to=\"/robot/settings\"/>\n                        </MenuItem>\n                    </Menu>\n                </ProSidebar>\n                <Col style={{width: '50%'}}>\n                    <Row style={{height: '60px', width:'50%', padding: '5px', margin: '5px'}}>\n                        <Col style={{height: '100%'}}>\n                            <Form.Group as={Row}>\n                                <Form.Label className=\"form-label-first\" column sm={2}>\n                                    From\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control type=\"date\" onChange={startDateHandler} defaultValue={startDate}/>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                        <Col style={{height: '100%'}}>\n                            <Form.Group as={Row}>\n                                <Form.Label className=\"form-label-first\" column sm={2}>\n                                    To\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control type=\"date\" onChange={endDateHandler} defaultValue={endDate}/>\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row style={{padding:'15px', height:window.innerHeight, width:'100%',background:'green', margin:'0px'}}>\n                        <Switch>\n                            <Route path=\"/robot/dashboard\">\n                                <RobotDashBoardPage server={server} robot={robot} default={defaultRobots[0]}/>\n                            </Route>\n                            <Route path=\"/robot/transactions\">\n                                <RobotTransactionsPage robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                            </Route>\n                            <Route path=\"/robot/risk\">\n                                <RobotRiskPage robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                            </Route>\n                            <Route path=\"/robot/return\">\n                                <RobotReturnPage robot={robot} start_date={startDate} end_date={endDate} server={server}/>\n                            </Route>\n                        </Switch>\n                    </Row>\n                </Col>\n            </Row>\n\n            {/*<RobotBalance robot={robot} start_date={startDate} end_date={endDate} server={server}/>*/}\n\n            {/*<Row style={{height:'500px', padding:'5px'}}>*/}\n            {/*    <Col >*/}\n            {/*        <Row style={{height:'100%'}}>*/}\n            {/*            <Col style={{height: '100%'}}>*/}\n            {/*                <RobotProcesses robot={robot} start_date={startDate} end_date={endDate} server={server}/>*/}\n            {/*            </Col>*/}\n            {/*        </Row>*/}\n            {/*    </Col>*/}\n            {/*</Row>*/}\n            {/*<Row style={{height:'500px', padding:'5px'}}>*/}\n            {/*    <Col>*/}\n            {/*        <Card>*/}\n            {/*            <RobotTable server={server} env={env}/>*/}\n            {/*        </Card>*/}\n            {/*    </Col>*/}\n            {/*</Row>*/}\n            <NewRobotForm show={showNewRobot} hide={hideNewRobotForm} server={server} style={{height: '400px'}}/>\n            <RobotBalanceCalculation show={showRobotBalanceCalc} hide={hideRobotBalanceCalcForm} server={server}\n                                     robot={robot} start_date={startDate}\n                                     end_date={endDate}/>\n            <RobotPricingForm show={showRobotPricingCalc} hide={hideRobotPricingCalcForm} server={server} robot={robot}/>\n        </Container>\n    );\n};\n\nexport default RobotPage;","import PriceParagraph from \"./TradePage/PriceParagraph\";\n\nconst InstrumentPage = () => {\n    // const newWebSocket = new WebSocket('ws://127.0.0.1:8000/trade/price_stream/')\n\n    return (\n        <div>\n            {/*<PriceParagraph socketConnection={newWebSocket}/>*/}\n            <h2>Instrument Page</h2>\n        </div>\n    );\n};\n\nexport default InstrumentPage;","import './App.css';\nimport {useContext, useEffect, useState} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport RiskPage from \"./Pages/RiskPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport PortfolioPage from \"./Pages/PortfolioPage\";\nimport TradePage from \"./Pages/TradePage\";\nimport Navigation from \"./components/NavBar\";\nimport RobotPage from \"./Pages/RobotPage\";\nimport InstrumentPage from \"./Pages/InstrumentPage\";\n\n// Contexts\nimport ServerContext from \"./context/server-context\";\nimport EnvContext from \"./context/env-context\";\nimport PortfolioContext from \"./context/portfolio-context\";\nimport RobotContext from \"./context/robot-context\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\n\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\n\n\nfunction App() {\n    // 'http://127.0.0.1:8000/' 'https://pavliati.pythonanywhere.com/'\n    const [robotEnvData, setRobotEnvData] = useState('live');\n    const [portfolioData, setPortfolioData] = useState([]);\n    const [robotsData, setRobotsData] = useState([]);\n    const server = 'https://pavliati.pythonanywhere.com/'\n\n    const getEnvData = (env) => {\n        setRobotEnvData(env);\n    };\n\n    useEffect(() => {\n            axios.get(server + 'portfolios/get_portfolio_data/all')\n                .then(response => setPortfolioData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, []\n    );\n\n    useEffect(() => {\n            axios.get(server + 'robots/get_robots/' + robotEnvData)\n                .then(response => setRobotsData(response['data']))\n                .catch((error) => {\n                    console.error('Error Message:', error);\n                });\n        }, []\n    );\n\n    return (\n        <ServerContext.Provider value={{server: server}}>\n            <EnvContext.Provider value={{environment: robotEnvData}}>\n                <RobotContext.Provider value={{robots: robotsData}}>\n                    <PortfolioContext.Provider value={{portfolioData}}>\n                        <ReactNotification/>\n                        <div className=\"App\">\n\n                            <Navigation onEnvChange={getEnvData} env={robotEnvData}/>\n                            <Switch>\n                                <Route path=\"/risk\">\n                                    <RiskPage/>\n                                </Route>\n                                <Route path=\"/home\">\n                                    <HomePage/>\n                                </Route>\n                                <Route path=\"/trade\">\n                                    <TradePage/>\n                                </Route>\n                                <Route path=\"/portfolio\">\n                                    <PortfolioPage/>\n                                </Route>\n                                <Route path=\"/instruments\">\n                                    <InstrumentPage/>\n                                </Route>\n                                <Route path=\"/robot\">\n                                    <RobotPage/>\n                                </Route>\n                            </Switch>\n\n                        </div>\n                    </PortfolioContext.Provider>\n                </RobotContext.Provider>\n            </EnvContext.Provider>\n        </ServerContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}